/*
accent-call-logd

Consult call logs from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calllogd

import (
	"encoding/json"
)

// checks if the DeleteCDRRecordingsMediaRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCDRRecordingsMediaRequest{}

// DeleteCDRRecordingsMediaRequest struct for DeleteCDRRecordingsMediaRequest
type DeleteCDRRecordingsMediaRequest struct {
	CdrIds []int32 `json:"cdr_ids,omitempty"`
}

// NewDeleteCDRRecordingsMediaRequest instantiates a new DeleteCDRRecordingsMediaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteCDRRecordingsMediaRequest() *DeleteCDRRecordingsMediaRequest {
	this := DeleteCDRRecordingsMediaRequest{}
	return &this
}

// NewDeleteCDRRecordingsMediaRequestWithDefaults instantiates a new DeleteCDRRecordingsMediaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCDRRecordingsMediaRequestWithDefaults() *DeleteCDRRecordingsMediaRequest {
	this := DeleteCDRRecordingsMediaRequest{}
	return &this
}

// GetCdrIds returns the CdrIds field value if set, zero value otherwise.
func (o *DeleteCDRRecordingsMediaRequest) GetCdrIds() []int32 {
	if o == nil || IsNil(o.CdrIds) {
		var ret []int32
		return ret
	}
	return o.CdrIds
}

// GetCdrIdsOk returns a tuple with the CdrIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCDRRecordingsMediaRequest) GetCdrIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.CdrIds) {
		return nil, false
	}
	return o.CdrIds, true
}

// HasCdrIds returns a boolean if a field has been set.
func (o *DeleteCDRRecordingsMediaRequest) HasCdrIds() bool {
	if o != nil && !IsNil(o.CdrIds) {
		return true
	}

	return false
}

// SetCdrIds gets a reference to the given []int32 and assigns it to the CdrIds field.
func (o *DeleteCDRRecordingsMediaRequest) SetCdrIds(v []int32) {
	o.CdrIds = v
}

func (o DeleteCDRRecordingsMediaRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCDRRecordingsMediaRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CdrIds) {
		toSerialize["cdr_ids"] = o.CdrIds
	}
	return toSerialize, nil
}

type NullableDeleteCDRRecordingsMediaRequest struct {
	value *DeleteCDRRecordingsMediaRequest
	isSet bool
}

func (v NullableDeleteCDRRecordingsMediaRequest) Get() *DeleteCDRRecordingsMediaRequest {
	return v.value
}

func (v *NullableDeleteCDRRecordingsMediaRequest) Set(val *DeleteCDRRecordingsMediaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCDRRecordingsMediaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCDRRecordingsMediaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCDRRecordingsMediaRequest(val *DeleteCDRRecordingsMediaRequest) *NullableDeleteCDRRecordingsMediaRequest {
	return &NullableDeleteCDRRecordingsMediaRequest{value: val, isSet: true}
}

func (v NullableDeleteCDRRecordingsMediaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCDRRecordingsMediaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
