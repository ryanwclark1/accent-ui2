/*
accent-provd

Provisioning application REST API

API version: 0.2
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package provd

import (
	"encoding/json"
)

// checks if the GeneralConfigObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneralConfigObject{}

// GeneralConfigObject struct for GeneralConfigObject
type GeneralConfigObject struct {
	Description *string      `json:"description,omitempty"`
	Id          *string      `json:"id,omitempty"`
	Links       *LinksObject `json:"links,omitempty"`
	Value       *string      `json:"value,omitempty"`
}

// NewGeneralConfigObject instantiates a new GeneralConfigObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneralConfigObject() *GeneralConfigObject {
	this := GeneralConfigObject{}
	return &this
}

// NewGeneralConfigObjectWithDefaults instantiates a new GeneralConfigObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneralConfigObjectWithDefaults() *GeneralConfigObject {
	this := GeneralConfigObject{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GeneralConfigObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralConfigObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GeneralConfigObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GeneralConfigObject) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GeneralConfigObject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralConfigObject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GeneralConfigObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GeneralConfigObject) SetId(v string) {
	o.Id = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GeneralConfigObject) GetLinks() LinksObject {
	if o == nil || IsNil(o.Links) {
		var ret LinksObject
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralConfigObject) GetLinksOk() (*LinksObject, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GeneralConfigObject) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given LinksObject and assigns it to the Links field.
func (o *GeneralConfigObject) SetLinks(v LinksObject) {
	o.Links = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GeneralConfigObject) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralConfigObject) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GeneralConfigObject) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *GeneralConfigObject) SetValue(v string) {
	o.Value = &v
}

func (o GeneralConfigObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneralConfigObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableGeneralConfigObject struct {
	value *GeneralConfigObject
	isSet bool
}

func (v NullableGeneralConfigObject) Get() *GeneralConfigObject {
	return v.value
}

func (v *NullableGeneralConfigObject) Set(val *GeneralConfigObject) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneralConfigObject) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneralConfigObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneralConfigObject(val *GeneralConfigObject) *NullableGeneralConfigObject {
	return &NullableGeneralConfigObject{value: val, isSet: true}
}

func (v NullableGeneralConfigObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneralConfigObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
