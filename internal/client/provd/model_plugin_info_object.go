/*
accent-provd

Provisioning application REST API

API version: 0.2
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package provd

import (
	"encoding/json"
)

// checks if the PluginInfoObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PluginInfoObject{}

// PluginInfoObject struct for PluginInfoObject
type PluginInfoObject struct {
	Capabilities *map[string]map[string]string `json:"capabilities,omitempty"`
	Description  *string                       `json:"description,omitempty"`
	Version      *string                       `json:"version,omitempty"`
}

// NewPluginInfoObject instantiates a new PluginInfoObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPluginInfoObject() *PluginInfoObject {
	this := PluginInfoObject{}
	return &this
}

// NewPluginInfoObjectWithDefaults instantiates a new PluginInfoObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPluginInfoObjectWithDefaults() *PluginInfoObject {
	this := PluginInfoObject{}
	return &this
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *PluginInfoObject) GetCapabilities() map[string]map[string]string {
	if o == nil || IsNil(o.Capabilities) {
		var ret map[string]map[string]string
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInfoObject) GetCapabilitiesOk() (*map[string]map[string]string, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *PluginInfoObject) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given map[string]map[string]string and assigns it to the Capabilities field.
func (o *PluginInfoObject) SetCapabilities(v map[string]map[string]string) {
	o.Capabilities = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PluginInfoObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInfoObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PluginInfoObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PluginInfoObject) SetDescription(v string) {
	o.Description = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PluginInfoObject) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PluginInfoObject) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PluginInfoObject) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PluginInfoObject) SetVersion(v string) {
	o.Version = &v
}

func (o PluginInfoObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PluginInfoObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullablePluginInfoObject struct {
	value *PluginInfoObject
	isSet bool
}

func (v NullablePluginInfoObject) Get() *PluginInfoObject {
	return v.value
}

func (v *NullablePluginInfoObject) Set(val *PluginInfoObject) {
	v.value = val
	v.isSet = true
}

func (v NullablePluginInfoObject) IsSet() bool {
	return v.isSet
}

func (v *NullablePluginInfoObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePluginInfoObject(val *PluginInfoObject) *NullablePluginInfoObject {
	return &NullablePluginInfoObject{value: val, isSet: true}
}

func (v NullablePluginInfoObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePluginInfoObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
