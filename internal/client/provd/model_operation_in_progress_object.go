/*
accent-provd

Provisioning application REST API

API version: 0.2
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package provd

import (
	"encoding/json"
)

// checks if the OperationInProgressObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OperationInProgressObject{}

// OperationInProgressObject struct for OperationInProgressObject
type OperationInProgressObject struct {
	// The ``status`` field describes the current status of the operation. The format is ``[label|]state[;current[/end]](\\(sub_oips\\))*``. Here are some examples:  * progress * download|progress * download|progress;10 * download|progress;10/100 * download|progress(file_1|progress;20/100)(file_2|waiting;0/50) * download|progress;20/150(file_1|progress)(file_2|waiting) * op|progress(op1|progress(op11|progress)(op12|waiting))(op2|progress)  The state of an operation is either ``waiting``, ``progress``, ``success`` or ``fail``.
	Status *string `json:"status,omitempty"`
}

// NewOperationInProgressObject instantiates a new OperationInProgressObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationInProgressObject() *OperationInProgressObject {
	this := OperationInProgressObject{}
	return &this
}

// NewOperationInProgressObjectWithDefaults instantiates a new OperationInProgressObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationInProgressObjectWithDefaults() *OperationInProgressObject {
	this := OperationInProgressObject{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OperationInProgressObject) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationInProgressObject) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OperationInProgressObject) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OperationInProgressObject) SetStatus(v string) {
	o.Status = &v
}

func (o OperationInProgressObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OperationInProgressObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableOperationInProgressObject struct {
	value *OperationInProgressObject
	isSet bool
}

func (v NullableOperationInProgressObject) Get() *OperationInProgressObject {
	return v.value
}

func (v *NullableOperationInProgressObject) Set(val *OperationInProgressObject) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationInProgressObject) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationInProgressObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationInProgressObject(val *OperationInProgressObject) *NullableOperationInProgressObject {
	return &NullableOperationInProgressObject{value: val, isSet: true}
}

func (v NullableOperationInProgressObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationInProgressObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
