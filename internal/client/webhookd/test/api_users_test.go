/*
accent-webhookd

Testing UsersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package webhookd

import (
	"context"
	openapiclient "github.com/ryanwclark1/accent-ui2/internal/client/webhookd"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_webhookd_UsersAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test UsersAPIService GetUserSubscription", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subscriptionUuid string

		resp, httpRes, err := apiClient.UsersAPI.GetUserSubscription(context.Background(), subscriptionUuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsersAPIService UserCreate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.UsersAPI.UserCreate(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsersAPIService UserDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var subscriptionUuid string

		httpRes, err := apiClient.UsersAPI.UserDelete(context.Background(), subscriptionUuid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsersAPIService UserList", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.UsersAPI.UserList(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
