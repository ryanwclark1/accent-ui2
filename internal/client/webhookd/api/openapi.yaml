openapi: 3.0.1
info:
  contact:
    email: help@accentvoice.io
    name: Accent Team
    url: https://accentvoice.io/
  description: Control your webhooks from a REST API
  license:
    name: Proprietary
    url: https://accentvoice.io/
  title: accent-webhookd
  version: 1.0.0
  x-logo:
    altText: Accent Logo
    backgroundColor: '#FAFAFA'
    url: https://accentvoice.io/images/logo-black.svg
servers:
- url: http://api.accentvoice.io/1.0
- url: https://api.accentvoice.io/1.0
security:
- accent_auth_token: []
paths:
  /config:
    get:
      description: '**Required ACL:** `webhookd.config.read`'
      operationId: getConfig
      responses:
        "200":
          content: {}
          description: The configuration of the service
      summary: Show the current configuration
      tags:
      - config
    patch:
      description: |
        **Required ACL:** `webhookd.config.update`

        Changes are not persistent across service restart.
      operationId: patchConfig
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/ConfigPatchItem'
              type: array
        description: See https://en.wikipedia.org/wiki/JSON_Patch.
        required: true
      responses:
        "200":
          content: {}
          description: The updated configuration of the service
        "400":
          content: {}
          description: The given confiuration is invalid
      summary: Update the current configuration.
      tags:
      - config
      x-codegen-request-body-name: ConfigPatch
  /mobile/notifications:
    post:
      description: '**Required ACL:** `webhookd.mobile.notifications.send`'
      operationId: postMobileNotification
      parameters:
      - description: "The User's tenant UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        "204":
          content: {}
          description: An attempt to send the notification has been made
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: At least one field is invalid
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid or insufficient autorization
      summary: Send a push notification to a user
      tags:
      - notifications
      x-codegen-request-body-name: body
  /status:
    get:
      description: '**Required ACL:** `webhookd.status.read`'
      operationId: getStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusSummary'
          description: The internal infos of accent-webhookd
      summary: Print infos about internal status of accent-webhookd
      tags:
      - status
  /subscriptions:
    get:
      description: '**Required ACL:** `webhookd.subscriptions.read`'
      operationId: list
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      - description: Should the query include sub-tenants
        in: query
        name: recurse
        schema:
          default: false
          type: boolean
      - description: A search term formatted like "key:value" that will only match
          subscriptions having a metadata entry "key=value". May be given multiple
          times to filter more precisely on different metadata keys.
        in: query
        name: search_metadata
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
          description: List of the subscriptions
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List subscriptions to HTTP callbacks
      tags:
      - subscriptions
    post:
      description: |-
        **Required ACL:** `webhookd.subscriptions.create`

        For more information: https://accentvoice.io/documentation/api/webhook.html
      operationId: create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      responses:
        "201":
          content: {}
          description: The subscription has been completed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Subscribe to a HTTP callback (webhook)
      tags:
      - subscriptions
      x-codegen-request-body-name: body
  /subscriptions/services:
    get:
      description: '**Required ACL:** `webhookd.subscriptions.services.read`'
      operationId: getSubscriptionsServices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
          description: The available services
      summary: Show the available subscription services
      tags:
      - subscriptions
  /subscriptions/{subscription_uuid}:
    delete:
      description: "**Required ACL:** `webhookd.subscriptions.{subscription_uuid}.delete`"
      operationId: delete
      parameters:
      - description: The UUID of the subscription
        in: path
        name: subscription_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The requested subscription was deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete a subscription
      tags:
      - subscriptions
    get:
      description: "**Required ACL:** `webhookd.subscriptions.{subscription_uuid}.read`"
      operationId: get
      parameters:
      - description: The UUID of the subscription
        in: path
        name: subscription_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Details of the requested subscription
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a subscription
      tags:
      - subscriptions
    put:
      description: "**Required ACL:** `webhookd.subscriptions.{subscription_uuid}.update`"
      operationId: edit
      parameters:
      - description: The UUID of the subscription
        in: path
        name: subscription_uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: The requested subscription was edited
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Edit a subscription
      tags:
      - subscriptions
      x-codegen-request-body-name: body
  /subscriptions/{subscription_uuid}/logs:
    get:
      description: "**Required ACL:** `webhookd.subscriptions.{subscription_uuid}.logs.read`"
      operationId: get_logs
      parameters:
      - description: The UUID of the subscription
        in: path
        name: subscription_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionLog'
          description: Details of the requested subscription
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get hook logs
      tags:
      - subscriptions
  /users/me/subscriptions:
    get:
      description: '**Required ACL:** `webhookd.users.me.subscriptions.read`'
      operationId: user_list
      parameters:
      - description: A search term formatted like "key:value" that will only match
          subscriptions having a metadata entry "key=value". May be given multiple
          times to filter more precisely on different metadata keys.
        in: query
        name: search_metadata
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
          description: List of the subscriptions of the user
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List subscriptions of a user to HTTP callbacks
      tags:
      - subscriptions
      - users
    post:
      description: |-
        **Required ACL:** `webhookd.users.me.subscriptions.create`

        For more information: https://accentvoice.io/documentation/api/webhook.html
      operationId: user_create
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserSubscriptionRequest'
        required: true
      responses:
        "201":
          content: {}
          description: The subscription has been completed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Subscribe to a HTTP callback (webhook) as a user
      tags:
      - subscriptions
      - users
      x-codegen-request-body-name: body
  /users/me/subscriptions/{subscription_uuid}:
    delete:
      description: "**Required ACL:** `webhookd.users.me.subscriptions.{subscription_uuid}.delete`"
      operationId: user_delete
      parameters:
      - description: The UUID of the subscription
        in: path
        name: subscription_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The requested subscription was deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete a user subscription
      tags:
      - subscriptions
      - users
    get:
      description: "**Required ACL:** `webhookd.users.me.subscriptions.{subscription_uuid}.read`"
      operationId: get_user_subscription
      parameters:
      - description: The UUID of the subscription
        in: path
        name: subscription_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Details of the requested subscription
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a user subscription
      tags:
      - subscriptions
      - users
components:
  parameters:
    SearchMetadata:
      description: A search term formatted like "key:value" that will only match subscriptions
        having a metadata entry "key=value". May be given multiple times to filter
        more precisely on different metadata keys.
      in: query
      name: search_metadata
      schema:
        type: string
    SubscriptionUUID:
      description: The UUID of the subscription
      in: path
      name: subscription_uuid
      required: true
      schema:
        type: string
    TenantUuidHeader:
      description: "The User's tenant UUID, defining the ownership of a given resource."
      in: header
      name: Accent-Tenant
      schema:
        type: string
    TokenID:
      description: The token's ID
      in: query
      name: token
      schema:
        type: string
    recurse:
      description: Should the query include sub-tenants
      in: query
      name: recurse
      schema:
        default: false
        type: boolean
    tenantuuid:
      description: "The tenant's UUID, defining the ownership of a given resource."
      in: header
      name: Accent-Tenant
      schema:
        type: string
  requestBodies:
    ConfigPatch:
      content:
        '*/*':
          schema:
            items:
              $ref: '#/components/schemas/ConfigPatchItem'
            type: array
      description: See https://en.wikipedia.org/wiki/JSON_Patch.
      required: true
    NotificationBody:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Notification'
      required: true
    SubscriptionBody:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/SubscriptionRequest'
      required: true
    UserSubscriptionBody:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/UserSubscriptionRequest'
      required: true
  responses:
    AnotherServiceUnavailable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
        \ Asterisk, ...)"
    InvalidRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The resource requested was not found on the server
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
  schemas:
    ComponentWithStatus:
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/StatusValue'
      type: object
    ConfigPatchItem:
      example:
        op: op
        path: path
        value: "{}"
      properties:
        op:
          description: "Patch operation. Supported operations: `replace`."
          type: string
        path:
          description: "JSON path to operate on. Supported paths: `/debug`."
          type: string
        value:
          description: The new value for the operation. Type of value is dependent
            of `path`
          properties: {}
          type: object
      type: object
    Error:
      description: Error message for the client
      example:
        error_id: error_id
        details: "{}"
        message: message
        timestamp: 0.8008281904610115
      properties:
        details:
          description: Additional information about the error. The keys are specific
            to each error.
          properties: {}
          type: object
        error_id:
          description: Identifier of the type of error. It is more precise than the
            HTTP status code.
          type: string
        message:
          description: Human readable explanation of the error
          type: string
        timestamp:
          description: Time when the error occured
          format: timestamp
          type: number
      title: Error
      type: object
    HTTPServiceConfig:
      example:
        content_type: content_type
        method: head
        body: body
        url: url
        verify_certificate: "true"
      properties:
        body:
          description: "Jinja2 template, where variables come from the event triggering\
            \ the webhook. For more details, see https://accentvoice.io/uc-doc/api_sdk/rest_api/webhookd/templates.\
            \ **Default:** the complete event data, JSON-encoded."
          type: string
        content_type:
          description: Content-Type of the body
          type: string
        method:
          enum:
          - head
          - get
          - post
          - put
          - delete
          type: string
        url:
          description: "Jinja2 template, where variables come from the event triggering\
            \ the webhook. For more details, see https://accentvoice.io/uc-doc/api_sdk/rest_api/webhookd/templates"
          type: string
        verify_certificate:
          default: "true"
          description: "May be `true`, `false` or a path to the certificate bundle"
          type: string
      required:
      - method
      - url
      type: object
    HTTPServiceLog:
      example:
        response_headers:
          key: response_headers
        response_method: response_method
        request_body: request_body
        request_headers:
          key: request_headers
        response_body: response_body
        request_method: request_method
        request_url: request_url
        response_url: response_url
      properties:
        request_body:
          type: string
        request_headers:
          additionalProperties:
            type: string
          type: object
        request_method:
          type: string
        request_url:
          type: string
        response_body:
          type: string
        response_headers:
          additionalProperties:
            type: string
          type: object
        response_method:
          type: string
        response_url:
          type: string
      type: object
    Notification:
      example:
        notification_type: myCustomNotification
        user_uuid: user_uuid
        extra: "{}"
        body: body
        title: title
      properties:
        body:
          maxLength: 250
          type: string
        extra:
          properties: {}
          type: object
        notification_type:
          description: A name without special characters to differenciate the notification
            from others
          example: myCustomNotification
          maxLength: 100
          minLength: 1
          pattern: "(?!^(messageReceived|voicemailReceived|incomingCall|cancelIncomingCall)$)(^[a-z0-9_]+$)"
          type: string
        title:
          maxLength: 128
          type: string
        user_uuid:
          maxLength: 36
          minLength: 36
          type: string
      required:
      - body
      - notification_type
      - title
      - user_uuid
      type: object
    ServiceConfig:
      additionalProperties:
        type: string
      type: object
    Services:
      example:
        services: "{}"
      properties:
        services:
          description: The keys are the service names.
          properties: {}
          type: object
      type: object
    StatusSummary:
      example:
        master_tenant:
          status: null
        bus_consumer:
          status: null
      properties:
        bus_consumer:
          $ref: '#/components/schemas/ComponentWithStatus'
        master_tenant:
          $ref: '#/components/schemas/ComponentWithStatus'
      type: object
    StatusValue:
      enum:
      - fail
      - ok
      type: string
    Subscription:
      example:
        service: service
        owner_user_uuid: owner_user_uuid
        name: name
        config:
          key: config
        uuid: uuid
        events:
        - events
        - events
        events_user_uuid: events_user_uuid
      properties:
        config:
          additionalProperties:
            type: string
          type: object
        events:
          items:
            type: string
          type: array
        events_user_uuid:
          description: "Only trigger webhook when an event occurs related to this\
            \ user. Not compatible with all events. For more details, see: https://accentvoice.io/uc-doc/api_sdk/rest_api/webhookd/user_filter"
          type: string
        name:
          type: string
        owner_user_uuid:
          description: The user who owns this subscription. Admin-created subscriptions
            are not owned.
          readOnly: true
          type: string
        service:
          type: string
        uuid:
          readOnly: true
          type: string
      required:
      - config
      - events
      - name
      - service
      type: object
    SubscriptionList:
      example:
        total: 0
        items:
        - service: service
          owner_user_uuid: owner_user_uuid
          name: name
          config:
            key: config
          uuid: uuid
          events:
          - events
          - events
          events_user_uuid: events_user_uuid
        - service: service
          owner_user_uuid: owner_user_uuid
          name: name
          config:
            key: config
          uuid: uuid
          events:
          - events
          - events
          events_user_uuid: events_user_uuid
      properties:
        items:
          items:
            $ref: '#/components/schemas/Subscription'
          readOnly: true
          type: array
        total:
          readOnly: true
          type: integer
      type: object
    SubscriptionLog:
      example:
        max_attempts: 6
        started_at: 2000-01-23T04:56:07.000+00:00
        detail:
          response_headers:
            key: response_headers
          response_method: response_method
          request_body: request_body
          request_headers:
            key: request_headers
          response_body: response_body
          request_method: request_method
          request_url: request_url
          response_url: response_url
        event: event
        uuid: uuid
        ended_at: 2000-01-23T04:56:07.000+00:00
        attempts: 0
        status: success
      properties:
        attempts:
          description: The current attempts
          type: integer
        detail:
          $ref: '#/components/schemas/HTTPServiceLog'
        ended_at:
          format: date-time
          type: string
        event:
          type: string
        max_attempts:
          description: Limit of number of attempts
          type: integer
        started_at:
          format: date-time
          type: string
        status:
          enum:
          - success
          - failure
          - error
          type: string
        uuid:
          type: string
      type: object
    SubscriptionMetadata:
      description: Arbitrary key-value storage for this subscription. May be used
        to tag subscriptions. PUT replaces all metadata.
      type: object
    SubscriptionRequest:
      example:
        service: service
        name: name
        events_accent_uuid: events_accent_uuid
        config:
          content_type: content_type
          method: head
          body: body
          url: url
          verify_certificate: "true"
        events:
        - events
        - events
        events_user_uuid: events_user_uuid
        tags: "{}"
      properties:
        config:
          $ref: '#/components/schemas/HTTPServiceConfig'
        events:
          items:
            type: string
          type: array
        events_user_uuid:
          description: "Only trigger webhook when an event occurs related to this\
            \ user. Not compatible with all events. For more details, see: https://accentvoice.io/uc-doc/api_sdk/rest_api/webhookd/user_filter."
          type: string
        events_accent_uuid:
          description: Only trigger webhook when an event occurs on this Accent.
          type: string
        name:
          type: string
        service:
          description: |
            Known services: http. The service may be arbitrary, but it must be bound to an installed plugin in order to be effective.
          type: string
        tags:
          properties: {}
          type: object
      required:
      - config
      - events
      - name
      - service
      type: object
    UserSubscriptionRequest:
      example:
        service: service
        name: name
        config:
          content_type: content_type
          method: head
          body: body
          url: url
          verify_certificate: "true"
        events:
        - events
        - events
        tags: "{}"
      properties:
        config:
          $ref: '#/components/schemas/HTTPServiceConfig'
        events:
          items:
            type: string
          type: array
        name:
          type: string
        service:
          description: |
            Known services: http. The service may be arbitrary, but it must be bound to an installed plugin in order to be effective.
          type: string
        tags:
          description: Arbitrary key-value storage for this subscription. May be used
            to tag subscriptions. PUT replaces all metadata.
          type: object
      required:
      - config
      - events
      - name
      - service
      type: object
  securitySchemes:
    accent_auth_token:
      in: header
      name: X-Auth-Token
      type: apiKey
x-accent-name: webhookd
x-accent-port: 9300
x-original-swagger-version: "2.0"
