/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"encoding/json"
)

// checks if the UserRelocateLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserRelocateLocation{}

// UserRelocateLocation struct for UserRelocateLocation
type UserRelocateLocation struct {
	Line *LocationLine `json:"line,omitempty"`
}

// NewUserRelocateLocation instantiates a new UserRelocateLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserRelocateLocation() *UserRelocateLocation {
	this := UserRelocateLocation{}
	return &this
}

// NewUserRelocateLocationWithDefaults instantiates a new UserRelocateLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserRelocateLocationWithDefaults() *UserRelocateLocation {
	this := UserRelocateLocation{}
	return &this
}

// GetLine returns the Line field value if set, zero value otherwise.
func (o *UserRelocateLocation) GetLine() LocationLine {
	if o == nil || IsNil(o.Line) {
		var ret LocationLine
		return ret
	}
	return *o.Line
}

// GetLineOk returns a tuple with the Line field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserRelocateLocation) GetLineOk() (*LocationLine, bool) {
	if o == nil || IsNil(o.Line) {
		return nil, false
	}
	return o.Line, true
}

// HasLine returns a boolean if a field has been set.
func (o *UserRelocateLocation) HasLine() bool {
	if o != nil && !IsNil(o.Line) {
		return true
	}

	return false
}

// SetLine gets a reference to the given LocationLine and assigns it to the Line field.
func (o *UserRelocateLocation) SetLine(v LocationLine) {
	o.Line = &v
}

func (o UserRelocateLocation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserRelocateLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Line) {
		toSerialize["line"] = o.Line
	}
	return toSerialize, nil
}

type NullableUserRelocateLocation struct {
	value *UserRelocateLocation
	isSet bool
}

func (v NullableUserRelocateLocation) Get() *UserRelocateLocation {
	return v.value
}

func (v *NullableUserRelocateLocation) Set(val *UserRelocateLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRelocateLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRelocateLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRelocateLocation(val *UserRelocateLocation) *NullableUserRelocateLocation {
	return &NullableUserRelocateLocation{value: val, isSet: true}
}

func (v NullableUserRelocateLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRelocateLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
