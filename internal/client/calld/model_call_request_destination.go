/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CallRequestDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRequestDestination{}

// CallRequestDestination Destination parameters
type CallRequestDestination struct {
	Context   string `json:"context"`
	Extension string `json:"extension"`
	Priority  int32  `json:"priority"`
}

type _CallRequestDestination CallRequestDestination

// NewCallRequestDestination instantiates a new CallRequestDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallRequestDestination(context string, extension string, priority int32) *CallRequestDestination {
	this := CallRequestDestination{}
	this.Context = context
	this.Extension = extension
	this.Priority = priority
	return &this
}

// NewCallRequestDestinationWithDefaults instantiates a new CallRequestDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRequestDestinationWithDefaults() *CallRequestDestination {
	this := CallRequestDestination{}
	return &this
}

// GetContext returns the Context field value
func (o *CallRequestDestination) GetContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *CallRequestDestination) GetContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *CallRequestDestination) SetContext(v string) {
	o.Context = v
}

// GetExtension returns the Extension field value
func (o *CallRequestDestination) GetExtension() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value
// and a boolean to check if the value has been set.
func (o *CallRequestDestination) GetExtensionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extension, true
}

// SetExtension sets field value
func (o *CallRequestDestination) SetExtension(v string) {
	o.Extension = v
}

// GetPriority returns the Priority field value
func (o *CallRequestDestination) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *CallRequestDestination) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *CallRequestDestination) SetPriority(v int32) {
	o.Priority = v
}

func (o CallRequestDestination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRequestDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["context"] = o.Context
	toSerialize["extension"] = o.Extension
	toSerialize["priority"] = o.Priority
	return toSerialize, nil
}

func (o *CallRequestDestination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"context",
		"extension",
		"priority",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCallRequestDestination := _CallRequestDestination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCallRequestDestination)

	if err != nil {
		return err
	}

	*o = CallRequestDestination(varCallRequestDestination)

	return err
}

type NullableCallRequestDestination struct {
	value *CallRequestDestination
	isSet bool
}

func (v NullableCallRequestDestination) Get() *CallRequestDestination {
	return v.value
}

func (v *NullableCallRequestDestination) Set(val *CallRequestDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRequestDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRequestDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRequestDestination(val *CallRequestDestination) *NullableCallRequestDestination {
	return &NullableCallRequestDestination{value: val, isSet: true}
}

func (v NullableCallRequestDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRequestDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
