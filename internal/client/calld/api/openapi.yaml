openapi: 3.0.1
info:
  contact:
    email: help@accentvoice.io
    name: Accent Team
    url: https://accentvoice.io/
  description: Control your calls from a REST API
  title: accent-calld
  version: 1.0.0
  x-logo:
    altText: Accent Logo
    backgroundColor: '#FAFAFA'
    url: https://accentvoice.io/images/logo-black.svg
servers:
- url: http://api.accentvoice.io/1.0
- url: https://api.accentvoice.io/1.0
security:
- accent_auth_token: []
paths:
  /applications/{application_uuid}:
    get:
      description: "**Required ACL:** `calld.applications.{application_uuid}.read`"
      operationId: getApplication
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Application
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Show an application
      tags:
      - applications
  /applications/{application_uuid}/calls:
    get:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.read`"
      operationId: getApplicationCalls
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCalls'
          description: Application
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List calls from the application
      tags:
      - applications
    post:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.create`"
      operationId: createApplicationCalls
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationCallRequestToExten'
        description: node parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCall'
          description: The new call ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Make a new call to the application
      tags:
      - applications
      x-codegen-request-body-name: body
  /applications/{application_uuid}/calls/{call_id}:
    delete:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.delete`"
      operationId: deleteApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Call has been hung up
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Hangup a call from the application
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/answer:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.answer.update`"
      operationId: answerApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now answered
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Answer a call
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/dtmf:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.dtmf.update"
      operationId: sendApplicationCallDTMF
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      - description: Digits to send via DTMF. Must contain only `0-9*#`.
        in: query
        name: digits
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The digits have been sent
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Simulate a user pressing DTMF keys
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/hold/start:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.hold.start.update`"
      operationId: holdApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now on hold
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Place a call on hold
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/hold/stop:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.hold.stop.update"
      operationId: resumeApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call has been resumed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Resume a call that has been placed on hold
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/moh/stop:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.moh.{moh_uuid}.stop.update"
      operationId: stopApplicationCallMOH
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The MOH has been stopped
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Stops playing a music on hold
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/moh/{moh_uuid}/start:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.moh.{moh_uuid}.start.update`\n\
        Starts playing a music on hold on a call. If the music on hold is interrupted\
        \ for a playback or another\naction, the music on hold will not restart automatically\
        \ after the interruption. "
      operationId: startApplicationCallMOH
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      - description: UUID of the music on hold
        in: path
        name: moh_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The MOH has been started
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "No such application, call or moh"
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Starts playing a music on hold
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/mute/start:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.mute.start.update`"
      operationId: muteApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now muted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Mute a call
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/mute/stop:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.mute.stop.update`"
      operationId: unmuteApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now unmuted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Unmute a call
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/playbacks:
    post:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.playbacks.create`\n\
        URI examples: * sound:tt-weasels * digits:4188001234 * number:321 * characters:abc\
        \ * tone:ring * recording:my-recording "
      operationId: playApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationPlayback'
        description: playback parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPlayback'
          description: Play has been sent
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such playback
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Play file to the call
      tags:
      - applications
      x-codegen-request-body-name: body
  /applications/{application_uuid}/calls/{call_id}/progress/start:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.progress.start.update`\
        \ The progress ringing tone is the sound heard by a caller while the other\
        \ party is ringing. "
      operationId: startApplicationCallProgress
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now playing the progress ringing tone
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Play the progress ringing tone
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/progress/stop:
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.progress.stop.update`\
        \ The progress ringing tone is the sound heard by a caller while the other\
        \ party is ringing. Limitation: this only works when the ringing tone is played\
        \ by Accent through audio media (e.g. when using `/progress` after `/answer`).\
        \ If the phone is emitting the ringing tone directly to the user, then it\
        \ cannot be stopped, and the response code will still be 204. "
      operationId: stopApplicationCallProgress
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call has stopped playing the progress ringing tone
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Stop playing the progress ringing tone.
      tags:
      - applications
  /applications/{application_uuid}/calls/{call_id}/snoops:
    post:
      description: "**Required ACL:** `calld.applications.{application_uuid}.calls.{call_id}.snoops.create`\n\
        The whisper mode indicate which part of the snooped channel can hear the snooper.\
        \ Given Alice calls Bob and Charles snoops on Bob * none: No one can hear\
        \ the snooper * both: Alice and Bob can hear Charles * in: Alice can hear\
        \ Charles * out: Bob can hear Charles "
      operationId: snoopApplicationCall
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationSnoop'
        description: snoop parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSnoop'
          description: Snoop started
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call or Invalid whisper mode
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Start snooping on a call
      tags:
      - applications
      x-codegen-request-body-name: body
  /applications/{application_uuid}/nodes:
    get:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.read`"
      operationId: getApplicationNodes
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNodes'
          description: Application
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List nodes from the application
      tags:
      - applications
    post:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.create`"
      operationId: createApplicationNode
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationNodeRequest'
        description: node parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNode'
          description: The new node ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Make a new node and add calls
      tags:
      - applications
      x-codegen-request-body-name: body
  /applications/{application_uuid}/nodes/{node_uuid}:
    delete:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.{node_uuid}.delete`\
        \ **Not implemented** "
      operationId: deleteApplicationNode
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the node
        in: path
        name: node_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Call has been hung up
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or node
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete node and hangup all calls
      tags:
      - applications
    get:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.{node_uuid}.read`"
      operationId: getNode
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the node
        in: path
        name: node_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationNode'
          description: ApplicationNode
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or node
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Show a node
      tags:
      - applications
  /applications/{application_uuid}/nodes/{node_uuid}/calls:
    post:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.{node_uuid}.calls.create`"
      operationId: createApplicationCallToNode
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the node
        in: path
        name: node_uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationCallRequestToExten'
        description: Call parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCall'
          description: The new call ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or node
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Make a new call to the node
      tags:
      - applications
      x-codegen-request-body-name: body
  /applications/{application_uuid}/nodes/{node_uuid}/calls/user:
    post:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.{node_uuid}.calls.user.create`"
      operationId: createApplicationCallToUser
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the node
        in: path
        name: node_uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationCallRequestToUser'
        description: Parameters for the new call
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCall'
          description: The new call ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or node
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Initiate a call to a user and insert it in the node
      tags:
      - applications
      x-codegen-request-body-name: body
  /applications/{application_uuid}/nodes/{node_uuid}/calls/{call_id}:
    delete:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.{node_uuid}.calls.{call_id}.delete`"
      operationId: deleteApplicationCallFromNode
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the node
        in: path
        name: node_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Call has been removed from the node
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or node or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Remove call from the node
      tags:
      - applications
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.nodes.{node_uuid}.calls.{call_id}.update`"
      operationId: insertApplicationCallToNode
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the node
        in: path
        name: node_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Call has been added to the node
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or node or call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Insert call to the node
      tags:
      - applications
  /applications/{application_uuid}/playbacks/{playback_uuid}:
    delete:
      description: "**Required ACL:** `calld.applications.{application_uuid}.playbacks.{playback_uuid}.delete`"
      operationId: deletePlayback
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: ID of the playback
        in: path
        name: playback_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Playback has been stopped and removed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or playback
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Stop and remove playback
      tags:
      - applications
  /applications/{application_uuid}/snoops:
    get:
      description: "**Required ACL:** `calld.applications.{application_uuid}.snoops.read`"
      operationId: listApplicationSnoops
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSnoops'
          description: Snoop list
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List active snoops
      tags:
      - applications
  /applications/{application_uuid}/snoops/{snoop_uuid}:
    delete:
      description: "**Required ACL:** `calld.applications.{application_uuid}.snoops.{snoop_uuid}.delete`"
      operationId: stopSnoop
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the snoop
        in: path
        name: snoop_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Snooping has been stopped
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or snoop
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Stop snooping
      tags:
      - applications
    get:
      description: "**Required ACL:** `calld.applications.{application_uuid}.snoops.{snoop_uuid}.read`"
      operationId: getSnoop
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the snoop
        in: path
        name: snoop_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSnoop'
          description: Snoop parameters
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or snoop
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: View snooping parameters
      tags:
      - applications
    put:
      description: "**Required ACL:** `calld.applications.{application_uuid}.snoops.{snoop_uuid}.update`"
      operationId: updateSnoop
      parameters:
      - description: UUID of the application
        in: path
        name: application_uuid
        required: true
        schema:
          type: string
      - description: UUID of the snoop
        in: path
        name: snoop_uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApplicationSnoopPut'
        description: snoop parameters
        required: true
      responses:
        "204":
          content: {}
          description: Snooping has been modifier
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such application or snoop
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Change snooping parameters
      tags:
      - applications
      x-codegen-request-body-name: body
  /calls:
    get:
      description: '**Required ACL:** `calld.calls.read`'
      operationId: listCalls
      parameters:
      - description: "Filter calls by Stasis application, e.g. switchboard."
        in: query
        name: application
        schema:
          type: string
      - description: "Filter calls by Stasis application instance, e.g. switchboard-sales,green.\
          \ Args must be separated by commas (,). `application_instance` is ignored\
          \ if `application` is not set."
        in: query
        name: application_instance
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCalls_200_response'
          description: List currently active calls
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List calls
      tags:
      - calls
    post:
      description: '**Required ACL:** `calld.calls.create` Create a new call from
        a phone to an extension. '
      operationId: createCall
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CallRequest'
        description: Call parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
          description: The new call ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Make a new call
      tags:
      - calls
      x-codegen-request-body-name: body
  /calls/{call_id}:
    delete:
      description: "**Required ACL:** `calld.calls.{call_id}.delete`"
      operationId: deleteCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Call has been hung up
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Hangup a call
      tags:
      - calls
    get:
      description: "**Required ACL:** `calld.calls.{call_id}.read`"
      operationId: getCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
          description: Call
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Show a call
      tags:
      - calls
  /calls/{call_id}/answer:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.answer.update` This works\
        \ **only** if the phone brand has a corresponding phoned plugin to handle\
        \ the event. "
      operationId: answerCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now answered
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Answer a call
      tags:
      - calls
  /calls/{call_id}/dtmf:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.dtmf.update"
      operationId: sendCallDTMF
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      - description: Digits to send via DTMF. Must contain only `0-9*#`.
        in: query
        name: digits
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The digits have been sent
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Simulate a user pressing DTMF keys
      tags:
      - calls
  /calls/{call_id}/hold/start:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.hold.start.update` This\
        \ works **only** if the phone brand has a corresponding phoned plugin to handle\
        \ the event. "
      operationId: holdCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now held
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Hold a call
      tags:
      - calls
  /calls/{call_id}/hold/stop:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.hold.stop.update` This\
        \ works **only** if the phone brand has a corresponding phoned plugin to handle\
        \ the event. "
      operationId: unholdCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now unheld
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Unhold a call
      tags:
      - calls
  /calls/{call_id}/mute/start:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.mute.start.update`"
      operationId: muteCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now muted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Mute a call
      tags:
      - calls
  /calls/{call_id}/mute/stop:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.mute.stop.update`"
      operationId: unmuteCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now unmuted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Unmute a call
      tags:
      - calls
  /calls/{call_id}/record/start:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.record.start.update`"
      operationId: startRecording
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Recording has started for the call
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Start recording a call
      tags:
      - calls
  /calls/{call_id}/record/stop:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.record.stop.update`"
      operationId: stopRecording
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Recording has stopped for the call
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Stop recording a call
      tags:
      - calls
  /calls/{call_id}/user/{user_uuid}:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.user.{user_uuid}.update`"
      operationId: connectCallToUser
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      - description: UUID of the user
        in: path
        name: user_uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConnectCallToUserRequest'
        description: options affecting the call to the targeted user
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
          description: The new call of the user (ringing side)
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Connect a call to a user
      tags:
      - calls
      x-codegen-request-body-name: body
  /conferences/{conference_id}/participants:
    get:
      description: "**Required ACL:** `calld.conferences.{conference_id}.participants.read`"
      operationId: listConferenceParticipants
      parameters:
      - description: Unique identifier of the conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantList'
          description: The list of participant is returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List participants of a conference
      tags:
      - conferences
  /conferences/{conference_id}/participants/{participant_id}:
    delete:
      description: "**Required ACL:** `calld.conferences.{conference_id}.participants.{participant_id}.delete`"
      operationId: kickParticipant
      parameters:
      - description: Unique identifier of the conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      - description: Unique identifier of the participant
        in: path
        name: participant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The participant was kicked from the conference
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Kick participant from a conference
      tags:
      - conferences
  /conferences/{conference_id}/participants/{participant_id}/mute:
    put:
      description: "**Required ACL:** `calld.conferences.{conference_id}.participants.{participant_id}.mute.update`"
      operationId: muteParticipant
      parameters:
      - description: Unique identifier of the conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      - description: Unique identifier of the participant
        in: path
        name: participant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The participant was muted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Mute a participant in a conference
      tags:
      - conferences
  /conferences/{conference_id}/participants/{participant_id}/unmute:
    put:
      description: "**Required ACL:** `calld.conferences.{conference_id}.participants.{participant_id}.unmute.update`"
      operationId: unmuteParticipant
      parameters:
      - description: Unique identifier of the conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      - description: Unique identifier of the participant
        in: path
        name: participant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The participant was unmuted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Unmute a participant in a conference
      tags:
      - conferences
  /conferences/{conference_id}/record:
    delete:
      description: "**Required ACL:** `calld.conferences.{conference_id}.record.delete`"
      operationId: stopConferenceRecording
      parameters:
      - description: Unique identifier of the conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The conference recording stopped
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The conference is already not being recorded
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Stop recording a conference
      tags:
      - conferences
    post:
      description: "**Required ACL:** `calld.conferences.{conference_id}.record.create`"
      operationId: startConferenceRecording
      parameters:
      - description: Unique identifier of the conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The conference recording started
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The conference is already being recorded or there are no participants
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Record a conference
      tags:
      - conferences
  /config:
    get:
      description: '**Required ACL:** `calld.config.read`'
      operationId: getConfig
      responses:
        "200":
          content: {}
          description: The configuration of the service
      summary: Show the current configuration
      tags:
      - config
    patch:
      description: '**Required ACL:** `calld.config.update` Changes are not persistent
        across service restart. '
      operationId: patchConfig
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/ConfigPatchItem'
              type: array
        description: See https://en.wikipedia.org/wiki/JSON_Patch.
        required: true
      responses:
        "200":
          content: {}
          description: The updated configuration of the service
        "400":
          content: {}
          description: The given confiuration is invalid
      summary: Update the current configuration.
      tags:
      - config
      x-codegen-request-body-name: ConfigPatch
  /faxes:
    post:
      description: '**Required ACL:** `calld.faxes.create`'
      operationId: sendFax
      parameters:
      - description: Context of the recipient of the fax
        in: query
        name: context
        required: true
        schema:
          type: string
      - description: Extension of the recipient of the fax
        in: query
        name: extension
        required: true
        schema:
          type: string
      - description: "Caller ID that will be presented to the recipient of the fax.\
          \ Example: \"my-name <+15551112222>\""
        in: query
        name: caller_id
        schema:
          default: Accent Fax
          type: string
      - description: Extension to compose before sending fax. Useful for fax in IVR
        in: query
        name: ivr_extension
        schema:
          type: string
      - description: Time waiting before sending fax when destination has answered
          (in seconds)
        in: query
        name: wait_time
        schema:
          type: integer
      requestBody:
        content:
          application/pdf:
            schema:
              format: binary
              type: string
        description: "The fax file content, in PDF format"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fax'
          description: Fax send request accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Send a fax
      tags:
      - faxes
      x-codegen-request-body-name: fax_content
  /guests/me/meetings/{meeting_uuid}/status:
    get:
      description: Returns the status of a meeting that should be visible to a guest.
      operationId: getGuestMeetingStatus
      parameters:
      - description: Unique identifier of the meeting
        in: path
        name: meeting_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingStatus'
          description: The status of a meeting is returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified meeting does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get the status of a meeting
      tags:
      - meetings
  /lines:
    get:
      description: |
        **Required ACL:** `calld.lines.read`

        List the status of line endpoints that are configured on Asterisk

        Supported technologies:

          * SIP

        Lines with unsupported technologies will be listed but there status
        will be null
      operationId: listLines
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointLines'
          description: A list of line status
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List line endpoint statuses
      tags:
      - lines
  /meetings/{meeting_uuid}/participants:
    get:
      description: "**Required ACL:** `calld.meetings.{meeting_uuid}.participants.read`"
      operationId: listMeetingParticipants
      parameters:
      - description: Unique identifier of the meeting
        in: path
        name: meeting_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantList'
          description: The list of participant is returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified meeting does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List participants of a meeting
      tags:
      - meetings
  /meetings/{meeting_uuid}/participants/{participant_id}:
    delete:
      description: "**Required ACL:** `calld.meetings.{meeting_uuid}.participants.delete`"
      operationId: kickMeetingParticipant
      parameters:
      - description: Unique identifier of the meeting
        in: path
        name: meeting_uuid
        required: true
        schema:
          type: string
      - description: Unique identifier of the participant
        in: path
        name: participant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The participant was kicked
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified meeting or participant does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Kick a participant from a meeting
      tags:
      - meetings
  /status:
    get:
      description: '**Required ACL:** `calld.status.read`'
      operationId: getStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusSummary'
          description: The internal infos of accent-calld
      summary: Print infos about internal status of accent-calld
      tags:
      - status
  /switchboards/{switchboard_uuid}/calls/held:
    get:
      description: |2-
         **Required ACL:** `calld.switchboards.{switchboard_uuid}.calls.held.read`

         **Warning:** This endpoint is still in development and may change in the future.
      operationId: listSwitchboardHeldCalls
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      - description: Unique identifier of the switchboard
        in: path
        name: switchboard_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchboardHeldCalls'
          description: List of calls
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified switchboard does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List calls held in the switchboard
      tags:
      - switchboards
  /switchboards/{switchboard_uuid}/calls/held/{call_id}:
    put:
      description: |2-
         **Required ACL:** `calld.switchboards.{switchboard_uuid}.calls.held.{call_id}.update`

         **Warning:** This endpoint is still in development and may change in the future.

         This action will also hangup the previous call talking to the held call, if there was any.
      operationId: holdSwitchboardCall
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      - description: Unique identifier of the switchboard
        in: path
        name: switchboard_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Call was held correctly
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified switchboard does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Put the specified call on hold in the switchboard
      tags:
      - switchboards
  /switchboards/{switchboard_uuid}/calls/held/{call_id}/answer:
    put:
      description: |2-
         **Required ACL:** `calld.switchboards.{switchboard_uuid}.calls.held.{call_id}.answer.update`

         **Warning:** This endpoint is still in development and may change in the future.
      operationId: answerHeldCall
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      - description: Unique identifier of the switchboard
        in: path
        name: switchboard_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      - description: ID of the line of the user used to make the call. Default is
          the main line of the user.
        in: query
        name: line_id
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallID'
          description: Answerer was correctly originated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified switchboard does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Answer the specified held call
      tags:
      - switchboards
  /switchboards/{switchboard_uuid}/calls/queued:
    get:
      description: |2-
         **Required ACL:** `calld.switchboards.{switchboard_uuid}.calls.queued.read`

         **Warning:** This endpoint is still in development and may change in the future.
      operationId: listSwitchboardQueuedCalls
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      - description: Unique identifier of the switchboard
        in: path
        name: switchboard_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SwitchboardQueuedCalls'
          description: List of calls
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified switchboard does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List calls queued in the switchboard
      tags:
      - switchboards
  /switchboards/{switchboard_uuid}/calls/queued/{call_id}/answer:
    put:
      description: |2-
         **Required ACL:** `calld.switchboards.{switchboard_uuid}.calls.queued.{call_id}.answer.update`

         **Warning:** This endpoint is still in development and may change in the future.
      operationId: answerQueuedCall
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      - description: Unique identifier of the switchboard
        in: path
        name: switchboard_uuid
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      - description: ID of the line of the user used to make the call. Default is
          the main line of the user.
        in: query
        name: line_id
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallID'
          description: Answerer was correctly originated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified switchboard does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Answer the specified queued call
      tags:
      - switchboards
  /transfers:
    post:
      description: '**Required ACL:** `calld.transfers.create` The only way to cancel
        the transfer from the initiator is to use `DELETE /transfers/<id>` (i.e. sending
        DTMF `*0` will not work).'
      operationId: initiateTransfer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TransferRequest'
        description: Parameters of the transfer
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: The transfer being created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: A similar transfer (same initiator) is still in progress.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Initiate a transfer
      tags:
      - transfers
      x-codegen-request-body-name: body
  /transfers/{transfer_id}:
    delete:
      description: "**Required ACL:** `calld.transfers.{transfer_id}.delete`"
      operationId: cancelTransfer
      parameters:
      - description: Unique identifier of the transfer
        in: path
        name: transfer_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Transfer cancelled
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified transfer does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Cancel a transfer
      tags:
      - transfers
    get:
      description: "**Required ACL:** `calld.transfers.{transfer_id}.read`"
      operationId: getTransfer
      parameters:
      - description: Unique identifier of the transfer
        in: path
        name: transfer_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: The details of the transfer
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified transfer does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get details of a transfer
      tags:
      - transfers
  /transfers/{transfer_id}/complete:
    put:
      description: "**Required ACL:** `calld.transfers.{transfer_id}.complete.update`"
      operationId: completeTransfer
      parameters:
      - description: Unique identifier of the transfer
        in: path
        name: transfer_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The transfer was completed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified transfer does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Complete a transfer
      tags:
      - transfers
  /trunks:
    get:
      description: |
        **Required ACL:** `calld.trunks.read`

        List the status of trunk endpoints that are configured on Asterisk

        Supported technologies:

          * SIP

        Trunks with unsupported technologies will be listed but there status
        will be null
      operationId: listTrunks
      parameters:
      - description: "The tenant's UUID, defining the ownership of a given resource."
        in: header
        name: Accent-Tenant
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointTrunks'
          description: A list of trunk status
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List trunk endpoint statuses
      tags:
      - trunks
  /users/me/calls:
    get:
      description: '**Required ACL:** `calld.users.me.calls.read`'
      operationId: listUserCalls
      parameters:
      - description: "Filter calls by Stasis application, e.g. switchboard."
        in: query
        name: application
        schema:
          type: string
      - description: "Filter calls by Stasis application instance, e.g. switchboard-sales,green.\
          \ Args must be separated by commas (,)."
        in: query
        name: application_instance
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCalls_200_response'
          description: List currently active calls of a user
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List calls of a user
      tags:
      - calls
      - users
    post:
      description: '**Required ACL:** `calld.users.me.calls.create` The user originator
        of the call is determined from the authentication token. '
      operationId: createUserCall
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserCallRequest'
        description: Parameters of the call
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
          description: The new call ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Make a new call from a user
      tags:
      - calls
      - users
      x-codegen-request-body-name: body
  /users/me/calls/{call_id}:
    delete:
      description: "**Required ACL:** `calld.users.me.calls.{call_id}.delete` Only\
        \ calls owned by the authenticated user may be hung up."
      operationId: hangupUserCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Call has been hung up
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated user tried to hangup a call owned by someone
            else
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Hangup a call from a user
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/answer:
    put:
      description: "**Required ACL:** `calld.users.me.calls.{call_id}.answer.update`\
        \ Only calls owned by the authenticated user may be answered."
      operationId: answerUserCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now answered
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Answer a call from user
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/dtmf:
    put:
      description: "**Required ACL:** `calld.users.me.calls.{call_id}.dtmf.update"
      operationId: sendUserDTMF
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      - description: Digits to send via DTMF. Must contain only `0-9*#`.
        in: query
        name: digits
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The digits have been sent
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Simulate a user pressing DTMF keys
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/hold/start:
    put:
      description: "**Required ACL:** `calld.users.me.calls.{call_id}.hold.start.update`\
        \ Only calls owned by the authenticated user may be held."
      operationId: holdUserCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now held
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Hold a call from user
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/hold/stop:
    put:
      description: "**Required ACL:** `calld.users.me.calls.{call_id}.hold.stop.update`\
        \ Only calls owned by the authenticated user may be unheld."
      operationId: unholdUserCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now unheld
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Unhold a call from user
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/mute/start:
    put:
      description: "**Required ACL:** `calld.users.me.calls.{call_id}.mute.start.update`\
        \ Only calls owned by the authenticated user may be mute."
      operationId: muteUserCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now muted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Mute a call from user
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/mute/stop:
    put:
      description: "**Required ACL:** `calld.users.me.calls.{call_id}.mute.stop.update`\
        \ Only calls owned by the authenticated user may be unmute."
      operationId: unmuteUserCall
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The call is now unmuted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Unmute a call from user
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/record/start:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.record.start.update`"
      operationId: startCurrentUserRecording
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Recording has started for the call
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Start recording a call
      tags:
      - calls
      - users
  /users/me/calls/{call_id}/record/stop:
    put:
      description: "**Required ACL:** `calld.calls.{call_id}.record.stop.update`"
      operationId: stopCurrentUserRecording
      parameters:
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Recording has stopped for the call
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No such call
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Stop recording a call
      tags:
      - calls
      - users
  /users/me/conferences/adhoc:
    post:
      description: "**Required ACL:** `calld.users.me.conferences.adhoc.create`. An\
        \ adhoc conference allows a user to merge multiple calls in one conversation.\
        \ It acts like a conference room, but has no dedicated extension. The user\
        \ creating the adhoc conference acts as the owner of the conference and controls\
        \ who enters or leaves the conference. The conference will be destroyed when\
        \ the owner leaves the conference."
      operationId: createAdhocConference
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AdhocConferenceCreation'
        description: Parameters of the conference calls
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdhocConference'
          description: Conference adhoc has been created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The host call is already in a conference
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Create an adhoc conference
      tags:
      - adhoc_conferences
      x-codegen-request-body-name: body
  /users/me/conferences/adhoc/{conference_id}:
    delete:
      description: '**Required ACL:** `calld.users.me.conferences.adhoc.delete`. All
        calls in the adhoc conference will be hungup.'
      operationId: deleteAdhocConference
      parameters:
      - description: ID of the adhoc conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdhocConference'
          description: Conference adhoc has been deleted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified adhoc conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete an adhoc conference
      tags:
      - adhoc_conferences
  /users/me/conferences/adhoc/{conference_id}/participants/{call_id}:
    delete:
      description: '**Required ACL:** `calld.users.me.conferences.adhoc.participants.delete`'
      operationId: removeParticipantFromAdhocConference
      parameters:
      - description: ID of the adhoc conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Participant has been removed from the adhoc conference
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified adhoc conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Remove a participant from an adhoc conference
      tags:
      - adhoc_conferences
    put:
      description: '**Required ACL:** `calld.users.me.conferences.adhoc.participants.update`'
      operationId: addParticipantToAdhocConference
      parameters:
      - description: ID of the adhoc conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      - description: ID of the call
        in: path
        name: call_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Participant has been added to the adhoc conference
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified adhoc conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Add a participant into an adhoc conference
      tags:
      - adhoc_conferences
  /users/me/conferences/{conference_id}/participants:
    get:
      description: "**Required ACL:** `calld.users.me.conferences.{conference_id}.participants.read`"
      operationId: listUserConferenceParticipants
      parameters:
      - description: Unique identifier of the conference
        in: path
        name: conference_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantList'
          description: The list of participant is returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified conference does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List participants of a conference as a user
      tags:
      - conferences
      - users
  /users/me/faxes:
    post:
      description: '**Required ACL:** `calld.users.me.faxes.create`'
      operationId: sendUserFax
      parameters:
      - description: Extension of the recipient of the fax
        in: query
        name: extension
        required: true
        schema:
          type: string
      - description: "Caller ID that will be presented to the recipient of the fax.\
          \ Example: \"my-name <+15551112222>\""
        in: query
        name: caller_id
        schema:
          default: Accent Fax
          type: string
      - description: Extension to compose before sending fax. Useful for fax in IVR
        in: query
        name: ivr_extension
        schema:
          type: string
      - description: Time waiting before sending fax when destination has answered
          (in seconds)
        in: query
        name: wait_time
        schema:
          type: integer
      requestBody:
        content:
          application/pdf:
            schema:
              format: binary
              type: string
        description: "The fax file content, in PDF format"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fax'
          description: Fax send request accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Send a fax as the user detected from the token
      tags:
      - faxes
      x-codegen-request-body-name: fax_content
  /users/me/meetings/{meeting_uuid}/participants:
    get:
      description: "**Required ACL:** `calld.users.me.meetings.{meeting_uuid}.participants.read`"
      operationId: listUserMeetingParticipants
      parameters:
      - description: Unique identifier of the meeting
        in: path
        name: meeting_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantList'
          description: The list of participant is returned
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified meeting does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: List participants of a meeting as a user
      tags:
      - meetings
      - users
  /users/me/meetings/{meeting_uuid}/participants/{participant_id}:
    delete:
      description: '**Required ACL:** `calld.users.me.meetings.participants.delete`'
      operationId: kickUserMeetingParticipant
      parameters:
      - description: Unique identifier of the meeting
        in: path
        name: meeting_uuid
        required: true
        schema:
          type: string
      - description: Unique identifier of the participant
        in: path
        name: participant_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The participant was kicked
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified meeting or participant does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Kick a participant from a meeting as a user
      tags:
      - meetings
      - users
  /users/me/relocates:
    get:
      description: '**Required ACL:** `calld.users.me.relocates.read`'
      operationId: listUserRelocates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelocateList'
          description: The list of relocates
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get the relocates of the authenticated user
      tags:
      - relocates
      - users
    post:
      description: '**Required ACL:** `calld.users.me.relocates.create`'
      operationId: initiateRelocate
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserRelocateRequest'
        description: Parameters of the relocate
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relocate'
          description: The relocate being created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated user tried to relocate a call owned by someone
            else
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "The server could not determine which Call to use as relocated\
            \ or initiator, usually because too many Calls are eligible"
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Initiate a relocate from the authenticated user
      tags:
      - relocates
      - users
      x-codegen-request-body-name: body
  /users/me/relocates/{relocate_uuid}:
    get:
      description: "**Required ACL:** `calld.relocates.users.me.{relocate_uuid}.read`"
      operationId: getUserRelocate
      parameters:
      - description: Unique identifier of the relocate
        in: path
        name: relocate_uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relocate'
          description: The details of the relocate
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified relocate does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get details of a relocate
      tags:
      - relocates
  /users/me/relocates/{relocate_uuid}/cancel:
    put:
      description: "**Required ACL:** `calld.users.me.relocates.{relocate_uuid}.cancel.update`"
      operationId: cancelRelocate
      parameters:
      - description: Unique identifier of the relocate
        in: path
        name: relocate_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The relocate was cancelled
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified relocate does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Cancel a relocate
      tags:
      - relocates
      - users
  /users/me/relocates/{relocate_uuid}/complete:
    put:
      description: "**Required ACL:** `calld.users.me.relocates.{relocate_uuid}.complete.update`"
      operationId: completeRelocate
      parameters:
      - description: Unique identifier of the relocate
        in: path
        name: relocate_uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The relocate was completed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified relocate does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Complete a relocate
      tags:
      - relocates
      - users
  /users/me/transfers:
    get:
      description: '**Required ACL:** `calld.users.me.transfers.read`'
      operationId: listUserTransfers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferList'
          description: The list of transfers
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get the transfers of the authenticated user
      tags:
      - transfers
      - users
    post:
      description: '**Required ACL:** `calld.users.me.transfers.create`'
      operationId: initiateUserTransfer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserTransferRequest'
        description: Parameters of the transfer
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: The transfer being created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated user tried to transfer a call owned by someone
            else
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "The server could not determine which Call to use as transferred\
            \ or initiator, usually because too many Calls are eligible"
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Initiate a transfer from the authenticated user
      tags:
      - transfers
      - users
      x-codegen-request-body-name: body
  /users/me/transfers/{transfer_id}:
    delete:
      description: "**Required ACL:** `calld.users.me.transfers.{transfer_id}.delete`"
      operationId: cancelUserTransfer
      parameters:
      - description: Unique identifier of the transfer
        in: path
        name: transfer_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Transfer cancelled
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated user tried to cancel a transfer owned by
            someone else
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified transfer does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Cancel a transfer
      tags:
      - transfers
      - users
  /users/me/transfers/{transfer_id}/complete:
    put:
      description: "**Required ACL:** `calld.users.me.transfers.{transfer_id}.complete.update`"
      operationId: completeUserTransfer
      parameters:
      - description: Unique identifier of the transfer
        in: path
        name: transfer_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The transfer was completed
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The authenticated user tried to complete a transfer owned by
            someone else
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified transfer does not exist
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Complete a transfer
      tags:
      - transfers
      - users
  /users/me/voicemails:
    get:
      description: '**Required ACL:** `calld.users.me.voicemails.read`'
      operationId: listUserVoicemails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voicemail'
          description: The details of the voicemail
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get details of the voicemail of the authenticated user
      tags:
      - users
      - voicemails
  /users/me/voicemails/folders/{folder_id}:
    get:
      description: "**Required ACL:** `calld.users.me.voicemails.folders.{folder_id}.read`"
      operationId: getUserVoicemailFolder
      parameters:
      - description: The folder's ID
        in: path
        name: folder_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoicemailFolder'
          description: The details of the folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get details of a folder
      tags:
      - users
      - voicemails
  /users/me/voicemails/greetings/{greeting}:
    delete:
      description: "**Required ACL:** `calld.users.me.voicemails.greetings.{greeting}.delete`"
      operationId: deleteUserVoicemailGreeting
      parameters:
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      responses:
        "204":
          content: {}
          description: The greeting was deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete a custom greeting
      tags:
      - users
      - voicemails
    get:
      description: "**Required ACL:** `calld.users.me.voicemails.greetings.{greeting}.read`"
      operationId: getUserVoicemailGreeting
      parameters:
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      responses:
        "200":
          content: {}
          description: The greeting's recording
        "400":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a custom greeting
      tags:
      - users
      - voicemails
    head:
      description: "**Required ACL:** `calld.users.me.voicemails.greetings.{greeting}.read`"
      operationId: checkUserVoicemailGreeting
      parameters:
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      responses:
        "200":
          content: {}
          description: Greeting exists
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Check if greeting exists
      tags:
      - users
      - voicemails
    post:
      description: "**Required ACL:** `calld.users.me.voicemails.greetings.{greeting}.create`"
      operationId: createUserVoicemailGreeting
      parameters:
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      requestBody:
        content:
          audio/wav:
            schema:
              format: binary
              type: object
        required: true
      responses:
        "204":
          content: {}
          description: The greeting was created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Create a custom greeting
      tags:
      - users
      - voicemails
      x-codegen-request-body-name: body
    put:
      description: "**Required ACL:** `calld.users.me.voicemails.greetings.{greeting}.update`"
      operationId: updateUserVoicemailGreeting
      parameters:
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      requestBody:
        content:
          audio/wav:
            schema:
              format: binary
              type: object
        required: true
      responses:
        "204":
          content: {}
          description: The greeting was updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Update a custom greeting
      tags:
      - users
      - voicemails
      x-codegen-request-body-name: body
  /users/me/voicemails/greetings/{greeting}/copy:
    post:
      description: "**Required ACL:** `calld.users.me.voicemails.greetings.{greeting}.copy.create`"
      operationId: copyUserVoicemailGreeting
      parameters:
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GreetingCopy'
        required: true
      responses:
        "204":
          content: {}
          description: The greeting was copied successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Copy a custom greeting
      tags:
      - users
      - voicemails
      x-codegen-request-body-name: body
  /users/me/voicemails/messages/{message_id}:
    delete:
      description: "**Required ACL:** `calld.users.me.voicemails.messages.{message_id}.delete`"
      operationId: deleteUserVoicemailMessage
      parameters:
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Message was deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete a mesage
      tags:
      - users
      - voicemails
    get:
      description: "**Required ACL:** `calld.users.me.voicemails.messages.{message_id}.read`"
      operationId: getUserVoicemailMessage
      parameters:
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoicemailMessage'
          description: The message
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a message
      tags:
      - users
      - voicemails
    put:
      description: "**Required ACL:** `calld.users.me.voicemails.messages.{message_id}.update`"
      operationId: updateUserVoicemailMessage
      parameters:
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/VoicemailMessageUpdate'
        description: Message
        required: true
      responses:
        "204":
          content: {}
          description: Message was updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Update a message
      tags:
      - users
      - voicemails
      x-codegen-request-body-name: body
  /users/me/voicemails/messages/{message_id}/recording:
    get:
      description: "**Required ACL:** `calld.users.me.voicemails.messages.{message_id}.recording.read`"
      operationId: getUserVoicemailMessageRecording
      parameters:
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      - description: The token's ID
        in: query
        name: token
        schema:
          type: string
      - description: Set to 1 to force download by browser
        in: query
        name: download
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The recording
        "400":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a message's recording
      tags:
      - users
      - voicemails
  /voicemails/{voicemail_id}:
    get:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.read`"
      operationId: getVoicemail
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voicemail'
          description: The details of the voicemail
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get details of a voicemail
      tags:
      - voicemails
  /voicemails/{voicemail_id}/folders/{folder_id}:
    get:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.folders.{folder_id}.read`"
      operationId: getVoicemailFolder
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The folder's ID
        in: path
        name: folder_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoicemailFolder'
          description: The details of the folder
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get details of a folder
      tags:
      - voicemails
  /voicemails/{voicemail_id}/greetings/{greeting}:
    delete:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.greetings.{greeting}.delete`"
      operationId: deleteVoicemailGreeting
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      responses:
        "204":
          content: {}
          description: The greeting was deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete a custom greeting
      tags:
      - voicemails
    get:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.greetings.{greeting}.read`"
      operationId: getVoicemailGreeting
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      responses:
        "200":
          content: {}
          description: The greeting's recording
        "400":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a custom greeting
      tags:
      - voicemails
    head:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.greetings.{greeting}.read`"
      operationId: checkVoicemailGreeting
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      responses:
        "200":
          content: {}
          description: Greeting exists
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Check if greeting exists
      tags:
      - voicemails
    post:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.greetings.{greeting}.create`"
      operationId: createVoicemailGreeting
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      requestBody:
        content:
          audio/wav:
            schema:
              format: binary
              type: object
        required: true
      responses:
        "204":
          content: {}
          description: The greeting was created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Create a custom greeting
      tags:
      - voicemails
      x-codegen-request-body-name: body
    put:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.greetings.{greeting}.update`"
      operationId: updateVoicemailGreeting
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      requestBody:
        content:
          audio/wav:
            schema:
              format: binary
              type: object
        required: true
      responses:
        "204":
          content: {}
          description: The greeting was updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Update a custom greeting
      tags:
      - voicemails
      x-codegen-request-body-name: body
  /voicemails/{voicemail_id}/greetings/{greeting}/copy:
    post:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.greetings.{greeting}.copy.create`"
      operationId: copyVoicemailGreeting
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The greeting
        in: path
        name: greeting
        required: true
        schema:
          enum:
          - unavailable
          - busy
          - name
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GreetingCopy'
        required: true
      responses:
        "204":
          content: {}
          description: The greeting was copied successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Copy a custom greeting
      tags:
      - voicemails
      x-codegen-request-body-name: body
  /voicemails/{voicemail_id}/messages/{message_id}:
    delete:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.messages.{message_id}.delete`"
      operationId: deleteVoicemailMessage
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Message was deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Delete a mesage
      tags:
      - voicemails
    get:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.messages.{message_id}.read`"
      operationId: getVoicemailMessage
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoicemailMessage'
          description: The message
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a message
      tags:
      - voicemails
    put:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.messages.{message_id}.update`"
      operationId: updateVoicemailMessage
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/VoicemailMessageUpdate'
        description: Message
        required: true
      responses:
        "204":
          content: {}
          description: Message was updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Update a message
      tags:
      - voicemails
      x-codegen-request-body-name: body
  /voicemails/{voicemail_id}/messages/{message_id}/recording:
    get:
      description: "**Required ACL:** `calld.voicemails.{voicemail_id}.messages.{message_id}.recording.read`"
      operationId: getVoicemailMessageRecording
      parameters:
      - description: The voicemail's ID
        in: path
        name: voicemail_id
        required: true
        schema:
          type: integer
      - description: The message's ID
        in: path
        name: message_id
        required: true
        schema:
          type: string
      - description: The token's ID
        in: query
        name: token
        schema:
          type: string
      - description: Set to 1 to force download by browser
        in: query
        name: download
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The recording
        "400":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: The resource requested was not found on the server
        "503":
          content:
            audio/wav:
              schema:
                $ref: '#/components/schemas/Error'
          description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
            \ Asterisk, ...)"
      summary: Get a message's recording
      tags:
      - voicemails
components:
  parameters:
    AdhocConferenceID:
      description: ID of the adhoc conference
      in: path
      name: conference_id
      required: true
      schema:
        type: string
    ApplicationCallID:
      description: ID of the call
      in: path
      name: call_id
      required: true
      schema:
        type: string
    ApplicationMOHUUID:
      description: UUID of the music on hold
      in: path
      name: moh_uuid
      required: true
      schema:
        type: string
    ApplicationNodeUUID:
      description: UUID of the node
      in: path
      name: node_uuid
      required: true
      schema:
        type: string
    ApplicationPlaybackUUID:
      description: ID of the playback
      in: path
      name: playback_uuid
      required: true
      schema:
        type: string
    ApplicationSnoopUUID:
      description: UUID of the snoop
      in: path
      name: snoop_uuid
      required: true
      schema:
        type: string
    ApplicationUUID:
      description: UUID of the application
      in: path
      name: application_uuid
      required: true
      schema:
        type: string
    CallID:
      description: ID of the call
      in: path
      name: call_id
      required: true
      schema:
        type: string
    ConferenceID:
      description: Unique identifier of the conference
      in: path
      name: conference_id
      required: true
      schema:
        type: string
    DTMFDigits:
      description: Digits to send via DTMF. Must contain only `0-9*#`.
      in: query
      name: digits
      required: true
      schema:
        type: string
    ForceDownload:
      description: Set to 1 to force download by browser
      in: query
      name: download
      schema:
        type: string
    LineID:
      description: ID of the line of the user used to make the call. Default is the
        main line of the user.
      in: query
      name: line_id
      schema:
        type: integer
    MeetingUUID:
      description: Unique identifier of the meeting
      in: path
      name: meeting_uuid
      required: true
      schema:
        type: string
    ParticipantID:
      description: Unique identifier of the participant
      in: path
      name: participant_id
      required: true
      schema:
        type: string
    RelocateUUID:
      description: Unique identifier of the relocate
      in: path
      name: relocate_uuid
      required: true
      schema:
        type: string
    SwitchboardUUID:
      description: Unique identifier of the switchboard
      in: path
      name: switchboard_uuid
      required: true
      schema:
        type: string
    TenantUUID:
      description: "The tenant's UUID, defining the ownership of a given resource."
      in: header
      name: Accent-Tenant
      schema:
        type: string
    TokenID:
      description: The token's ID
      in: query
      name: token
      schema:
        type: string
    TransferID:
      description: Unique identifier of the transfer
      in: path
      name: transfer_id
      required: true
      schema:
        type: string
    VoicemailFolderID:
      description: The folder's ID
      in: path
      name: folder_id
      required: true
      schema:
        type: integer
    VoicemailGreeting:
      description: The greeting
      in: path
      name: greeting
      required: true
      schema:
        enum:
        - unavailable
        - busy
        - name
        type: string
    VoicemailID:
      description: The voicemail's ID
      in: path
      name: voicemail_id
      required: true
      schema:
        type: integer
    VoicemailMessageID:
      description: The message's ID
      in: path
      name: message_id
      required: true
      schema:
        type: string
    direction:
      description: Sort list of items in 'asc' (ascending) or 'desc' (descending)
        order
      in: query
      name: direction
      schema:
        enum:
        - asc
        - desc
        type: string
    limit:
      description: Maximum number of items to return in the list
      in: query
      name: limit
      schema:
        type: integer
    offset:
      description: Number of items to skip over in the list. Useful for pagination.
      in: query
      name: offset
      schema:
        type: integer
    order:
      description: Name of the field to use for sorting the list of items returned.
      in: query
      name: order
      schema:
        type: string
    search:
      description: Search term for filtering a list of items. Only items with a field
        containing the search term will be returned.
      in: query
      name: search
      schema:
        type: string
  requestBodies:
    ConfigPatch:
      content:
        '*/*':
          schema:
            items:
              $ref: '#/components/schemas/ConfigPatchItem'
            type: array
      description: See https://en.wikipedia.org/wiki/JSON_Patch.
      required: true
  responses:
    AnotherServiceUnavailable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: "Another service is unavailable (e.g. accent-auth, accent-confd,\
        \ Asterisk, ...)"
    HostAlreadyInConference:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The host call is already in a conference
    InvalidRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request
    NoSuchAdhocConference:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified adhoc conference does not exist
    NoSuchConference:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified conference does not exist
    NoSuchMeeting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified meeting does not exist
    NoSuchMeetingOrParticipant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified meeting or participant does not exist
    NoSuchRelocate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified relocate does not exist
    NoSuchSwitchboard:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified switchboard does not exist
    NoSuchTransfer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified transfer does not exist
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The resource requested was not found on the server
  schemas:
    AdhocConference:
      example:
        conference_id: conference_id
      properties:
        conference_id:
          description: The ID of the adhoc conference
          type: string
      type: object
    AdhocConferenceCreation:
      example:
        host_call_id: host_call_id
        participant_call_ids:
        - participant_call_ids
        - participant_call_ids
      properties:
        host_call_id:
          description: The call_id of the host call
          type: string
        participant_call_ids:
          description: "The call_id of the participating calls in this conference,\
            \ excluding the host."
          items:
            type: string
          type: array
      type: object
    Application:
      example:
        destination_node_uuid: destination_node_uuid
      properties:
        destination_node_uuid:
          type: string
      type: object
    ApplicationCall:
      example:
        caller_id_name: caller_id_name
        creation_time: creation_time
        snoops: "{}"
        is_caller: true
        variables: "{}"
        caller_id_number: caller_id_number
        id: id
        on_hold: true
        dialed_extension: dialed_extension
        node_uuid: node_uuid
        status: status
      properties:
        caller_id_name:
          type: string
        caller_id_number:
          type: string
        creation_time:
          type: string
        dialed_extension:
          type: string
        id:
          type: string
        is_caller:
          type: boolean
        node_uuid:
          type: string
        on_hold:
          type: boolean
        snoops:
          properties: {}
          type: object
        status:
          description: |
            * Down: the call is not connected to anything yet
            * Ring: the call just came in the application
            * Progress: the call is playing a progress ringing tone
            * Up: the call is answered and media can be sent/received
            * Ringing: the call is ringing the phone
          type: string
        variables:
          properties: {}
          type: object
      type: object
    ApplicationCallRequestToExten:
      example:
        variables: "{}"
        context: context
        displayed_caller_id_name: displayed_caller_id_name
        autoanswer: false
        exten: exten
        displayed_caller_id_number: displayed_caller_id_number
      properties:
        autoanswer:
          default: false
          type: boolean
        context:
          type: string
        displayed_caller_id_name:
          type: string
        displayed_caller_id_number:
          type: string
        exten:
          type: string
        variables:
          description: channel variables that should be assigned on this new channel
          properties: {}
          type: object
      required:
      - context
      - exten
      type: object
    ApplicationCallRequestToUser:
      example:
        user_uuid: user_uuid
        variables: "{}"
        displayed_caller_id_name: displayed_caller_id_name
        autoanswer: false
        displayed_caller_id_number: displayed_caller_id_number
      properties:
        autoanswer:
          default: false
          type: boolean
        displayed_caller_id_name:
          type: string
        displayed_caller_id_number:
          type: string
        user_uuid:
          type: string
        variables:
          description: channel variables that should be assigned on this new channel
          properties: {}
          type: object
      required:
      - user_uuid
      type: object
    ApplicationCalls:
      example:
        items:
        - caller_id_name: caller_id_name
          creation_time: creation_time
          snoops: "{}"
          is_caller: true
          variables: "{}"
          caller_id_number: caller_id_number
          id: id
          on_hold: true
          dialed_extension: dialed_extension
          node_uuid: node_uuid
          status: status
        - caller_id_name: caller_id_name
          creation_time: creation_time
          snoops: "{}"
          is_caller: true
          variables: "{}"
          caller_id_number: caller_id_number
          id: id
          on_hold: true
          dialed_extension: dialed_extension
          node_uuid: node_uuid
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApplicationCall'
          type: array
      type: object
    ApplicationNode:
      example:
        calls:
        - caller_id_name: caller_id_name
          creation_time: creation_time
          snoops: "{}"
          is_caller: true
          variables: "{}"
          caller_id_number: caller_id_number
          id: id
          on_hold: true
          dialed_extension: dialed_extension
          node_uuid: node_uuid
          status: status
        - caller_id_name: caller_id_name
          creation_time: creation_time
          snoops: "{}"
          is_caller: true
          variables: "{}"
          caller_id_number: caller_id_number
          id: id
          on_hold: true
          dialed_extension: dialed_extension
          node_uuid: node_uuid
          status: status
        uuid: uuid
      properties:
        calls:
          items:
            $ref: '#/components/schemas/ApplicationCall'
          type: array
        uuid:
          type: string
      type: object
    ApplicationNodeCallRequest:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    ApplicationNodeRequest:
      example:
        calls:
        - id: id
        - id: id
      properties:
        calls:
          items:
            $ref: '#/components/schemas/ApplicationNodeCallRequest'
          type: array
      type: object
    ApplicationNodes:
      example:
        items:
        - calls:
          - caller_id_name: caller_id_name
            creation_time: creation_time
            snoops: "{}"
            is_caller: true
            variables: "{}"
            caller_id_number: caller_id_number
            id: id
            on_hold: true
            dialed_extension: dialed_extension
            node_uuid: node_uuid
            status: status
          - caller_id_name: caller_id_name
            creation_time: creation_time
            snoops: "{}"
            is_caller: true
            variables: "{}"
            caller_id_number: caller_id_number
            id: id
            on_hold: true
            dialed_extension: dialed_extension
            node_uuid: node_uuid
            status: status
          uuid: uuid
        - calls:
          - caller_id_name: caller_id_name
            creation_time: creation_time
            snoops: "{}"
            is_caller: true
            variables: "{}"
            caller_id_number: caller_id_number
            id: id
            on_hold: true
            dialed_extension: dialed_extension
            node_uuid: node_uuid
            status: status
          - caller_id_name: caller_id_name
            creation_time: creation_time
            snoops: "{}"
            is_caller: true
            variables: "{}"
            caller_id_number: caller_id_number
            id: id
            on_hold: true
            dialed_extension: dialed_extension
            node_uuid: node_uuid
            status: status
          uuid: uuid
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApplicationNode'
          type: array
      type: object
    ApplicationPlayback:
      example:
        language: language
        uri: uri
        uuid: uuid
      properties:
        language:
          type: string
        uri:
          type: string
        uuid:
          readOnly: true
          type: string
      type: object
    ApplicationSnoop:
      example:
        snooping_call_id: snooping_call_id
        whisper_mode: in
        snooped_call_id: snooped_call_id
        uuid: uuid
      properties:
        snooped_call_id:
          readOnly: true
          type: string
        snooping_call_id:
          type: string
        uuid:
          readOnly: true
          type: string
        whisper_mode:
          enum:
          - in
          - out
          - none
          - both
          type: string
      required:
      - snooping_call_id
      - whisper_mode
      type: object
    ApplicationSnoopPut:
      example:
        whisper_mode: in
      properties:
        whisper_mode:
          enum:
          - in
          - out
          - none
          - both
          type: string
      type: object
    ApplicationSnoops:
      example:
        items:
        - snooping_call_id: snooping_call_id
          whisper_mode: in
          snooped_call_id: snooped_call_id
          uuid: uuid
        - snooping_call_id: snooping_call_id
          whisper_mode: in
          snooped_call_id: snooped_call_id
          uuid: uuid
      properties:
        items:
          items:
            $ref: '#/components/schemas/ApplicationSnoop'
          type: array
      type: object
    Call:
      example:
        answer_time: 2000-01-23T04:56:07.000+00:00
        caller_id_name: caller_id_name
        creation_time: 2000-01-23T04:56:07.000+00:00
        is_caller: true
        peer_caller_id_name: peer_caller_id_name
        record_state: active
        bridges:
        - bridges
        - bridges
        on_hold: true
        line_id: 0
        call_id: call_id
        is_video: true
        user_uuid: user_uuid
        conversation_id: conversation_id
        peer_caller_id_number: peer_caller_id_number
        sip_call_id: sip_call_id
        hangup_time: 2000-01-23T04:56:07.000+00:00
        caller_id_number: caller_id_number
        dialed_extension: dialed_extension
        muted: true
        talking_to:
          '{channel_id}': "{channel_id}"
        direction: internal
        status: status
      properties:
        answer_time:
          format: date-time
          type: string
        bridges:
          items:
            type: string
          type: array
        call_id:
          type: string
        caller_id_name:
          type: string
        caller_id_number:
          type: string
        conversation_id:
          type: string
        creation_time:
          format: date-time
          type: string
        dialed_extension:
          type: string
        direction:
          enum:
          - internal
          - outbound
          - inbound
          - unknown
          type: string
        hangup_time:
          format: date-time
          type: string
        is_caller:
          description: "This value is only correct when the destination of the call\
            \ is a user or outgoing call. In other cases, it is always False."
          type: boolean
        is_video:
          description: If this call has a video track
          type: boolean
        line_id:
          description: Line ID of the endpoint making the call
          readOnly: true
          type: integer
        muted:
          type: boolean
        on_hold:
          type: boolean
        peer_caller_id_name:
          type: string
        peer_caller_id_number:
          type: string
        record_state:
          enum:
          - active
          - inactive
          type: string
        sip_call_id:
          description: Matches the `Call-ID` SIP header of the call. This value can
            be `null` when not using SIP
          readOnly: true
          type: string
        status:
          type: string
        talking_to:
          $ref: '#/components/schemas/TalkingTo'
        user_uuid:
          type: string
      type: object
    CallID:
      example:
        call_id: call_id
      properties:
        call_id:
          type: string
      type: object
    CallRequest:
      example:
        variables: "{}"
        destination:
          extension: extension
          context: context
          priority: 0
        source:
          auto_answer: true
          all_lines: true
          from_mobile: true
          line_id: 6
          user: user
      properties:
        destination:
          $ref: '#/components/schemas/CallRequestDestination'
        source:
          $ref: '#/components/schemas/CallRequestSource'
        variables:
          description: Channel variables to set
          properties: {}
          type: object
      required:
      - destination
      - source
      type: object
    CallRequestDestination:
      description: Destination parameters
      example:
        extension: extension
        context: context
        priority: 0
      properties:
        context:
          type: string
        extension:
          type: string
        priority:
          type: integer
      required:
      - context
      - extension
      - priority
      type: object
    CallRequestSource:
      description: Caller parameters
      example:
        auto_answer: true
        all_lines: true
        from_mobile: true
        line_id: 6
        user: user
      properties:
        all_lines:
          description: Use all of the lines of the user to make the call (ignored
            when `line_id` is specified).
          type: boolean
        auto_answer:
          description: "Inform the phone that it should answer automatically. Limitation:\
            \ this does not work if `all_lines` is true, if `from_mobile` is true\
            \ or if the phone is SCCP."
          type: boolean
        from_mobile:
          description: Start the call from the user's mobile phone. Default is False
          type: boolean
        line_id:
          description: ID of the line of the user used to make the call. Default is
            the main line of the user.
          type: integer
        user:
          description: UUID of the user making the call
          type: string
      required:
      - user
      type: object
    ComponentWithStatus:
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/StatusValue'
      type: object
    ConfigPatchItem:
      example:
        op: op
        path: path
        value: "{}"
      properties:
        op:
          description: "Patch operation. Supported operations: `replace`."
          type: string
        path:
          description: "JSON path to operate on. Supported paths: `/debug`."
          type: string
        value:
          description: The new value for the operation. Type of value is dependent
            of `path`
          properties: {}
          type: object
      type: object
    ConnectCallToUserRequest:
      example:
        timeout: 0
      properties:
        timeout:
          description: |
            timeout in seconds for the dial attempt to the targeted user,
            or null for no timeout(infinite ring time).
            Omission leads to a default timeout of 30s.
          type: integer
      type: object
    EndpointLine:
      example:
        name: name
        registered: true
        id: 1
        technology: technology
        current_call_count: 6
      properties:
        current_call_count:
          description: The number of ongoing calls on that line
          type: integer
        id:
          description: The ID of the matching confd line
          type: integer
        name:
          description: The name of that given endpoint in Asterisk
          type: string
        registered:
          description: Wether or not this trunk is registered.
          type: boolean
        technology:
          description: "The technology of that endpoint only (SIP, SCCP or custom)"
          type: string
      type: object
    EndpointLines:
      example:
        total: 5
        filtered: 0
        items:
        - name: name
          registered: true
          id: 1
          technology: technology
          current_call_count: 6
        - name: name
          registered: true
          id: 1
          technology: technology
          current_call_count: 6
      properties:
        filtered:
          description: The number of line endpoint matching the searched terms
          type: integer
        items:
          items:
            $ref: '#/components/schemas/EndpointLine'
          type: array
        total:
          description: The number of line endpoint
          type: integer
      type: object
    EndpointTrunk:
      example:
        name: name
        registered: true
        id: 1
        technology: technology
        current_call_count: 6
      properties:
        current_call_count:
          description: The number of ongoing calls on that trunk
          type: integer
        id:
          description: The ID of the matching confd trunk
          type: integer
        name:
          description: The name of that given endpoint in Asterisk
          type: string
        registered:
          description: Wether or not this trunk is registered.
          type: boolean
        technology:
          description: "The technology of that endpoint only (SIP, IAX or custom)"
          type: string
      type: object
    EndpointTrunks:
      example:
        total: 5
        filtered: 0
        items:
        - name: name
          registered: true
          id: 1
          technology: technology
          current_call_count: 6
        - name: name
          registered: true
          id: 1
          technology: technology
          current_call_count: 6
      properties:
        filtered:
          description: The number of trunk endpoint matching the searched terms
          type: integer
        items:
          items:
            $ref: '#/components/schemas/EndpointTrunk'
          type: array
        total:
          description: The number of trunk endpoint
          type: integer
      type: object
    Error:
      description: Error message for the client
      example:
        error_id: error_id
        details: "{}"
        message: message
        timestamp: 0.8008281904610115
      properties:
        details:
          description: Additional information about the error. The keys are specific
            to each error.
          properties: {}
          type: object
        error_id:
          description: Identifier of the type of error. It is more precise than the
            HTTP status code.
          type: string
        message:
          description: Human readable explanation of the error
          type: string
        timestamp:
          description: Time when the error occured
          format: timestamp
          type: number
      title: Error
      type: object
    Fax:
      example:
        ivr_extension: ivr_extension
        extension: extension
        user_uuid: user_uuid
        wait_time: wait_time
        tenant_uuid: tenant_uuid
        caller_id: caller_id
        context: context
        id: id
        call_id: call_id
      properties:
        call_id:
          description: The ID of the call that produced this fax
          type: string
        caller_id:
          description: The Caller ID that was presented to the fax recipient
          type: string
        context:
          description: The context where the fax was sent
          type: string
        extension:
          description: The extension where the fax was sent
          type: string
        id:
          description: The fax ID
          type: string
        ivr_extension:
          description: Extension to compose before sending fax. Useful for fax in
            IVR
          type: string
        tenant_uuid:
          description: The tenant UUID where the fax was sent from
          type: string
        user_uuid:
          description: The UUID of the user that sent the fax. May be null if the
            fax was sent by another service.
          type: string
        wait_time:
          description: Time waiting before sending fax when destination has answered
            (in seconds)
          type: string
      type: object
    GreetingCopy:
      example:
        dest_greeting: dest_greeting
      properties:
        dest_greeting:
          description: The destination name of the greeting
          type: string
      required:
      - dest_greeting
      type: object
    LocationLine:
      properties:
        contact:
          description: the SIP contact to use when multiple registers are used
          type: string
        line_id:
          description: the ID of the line where the relocated call should be connected
          type: integer
      required:
      - line_id
      type: object
    MeetingStatus:
      example:
        full: true
      properties:
        full:
          description: Wether the meeting is full of not
          type: boolean
      type: object
    Participant:
      example:
        caller_id_name: caller_id_name
        user_uuid: user_uuid
        caller_id_num: caller_id_num
        admin: true
        language: language
        id: id
        muted: true
        join_time: 0
        call_id: call_id
      properties:
        admin:
          description: Is the participant an admin of the conference?
          type: boolean
        call_id:
          description: The ID of the participant's call
          type: string
        caller_id_name:
          description: The participant's name
          type: string
        caller_id_num:
          description: The participant's number
          type: string
        id:
          description: The participant's ID
          type: string
        join_time:
          description: Elapsed seconds since the participant joined the conference
          type: integer
        language:
          description: The participant's language
          type: string
        muted:
          description: Is the participant muted?
          type: boolean
        user_uuid:
          description: The UUID of the participant's user. `null` when there is no
            user.
          type: string
      type: object
    ParticipantList:
      example:
        items:
        - caller_id_name: caller_id_name
          user_uuid: user_uuid
          caller_id_num: caller_id_num
          admin: true
          language: language
          id: id
          muted: true
          join_time: 0
          call_id: call_id
        - caller_id_name: caller_id_name
          user_uuid: user_uuid
          caller_id_num: caller_id_num
          admin: true
          language: language
          id: id
          muted: true
          join_time: 0
          call_id: call_id
      properties:
        items:
          items:
            $ref: '#/components/schemas/Participant'
          type: array
      type: object
    PluginsStatus:
      example:
        endpoints:
          status: null
        voicemails:
          cache_items: 0
          status: null
      properties:
        endpoints:
          $ref: '#/components/schemas/ComponentWithStatus'
        voicemails:
          $ref: '#/components/schemas/VoicemailsStatus'
      type: object
    Relocate:
      example:
        initiator_call: initiator_call
        initiator: initiator
        completions:
        - null
        - null
        recipient_call: recipient_call
        uuid: uuid
        relocated_call: relocated_call
      properties:
        completions:
          items:
            $ref: '#/components/schemas/RelocateCompletion'
          type: array
        initiator:
          description: The user UUID of the relocate initiator
          type: string
        initiator_call:
          description: Call ID of the relocate initiator
          type: string
        recipient_call:
          description: Call ID of the recipient of the relocate.
          type: string
        relocated_call:
          description: Call ID of the call being relocated to someone else
          type: string
        uuid:
          description: Unique identifier of the relocate
          type: string
      type: object
    RelocateCompletion:
      default: answer
      enum:
      - answer
      - api
      type: string
    RelocateCompletions:
      items:
        $ref: '#/components/schemas/RelocateCompletion'
      type: array
    RelocateList:
      example:
        items:
          initiator_call: initiator_call
          initiator: initiator
          completions:
          - null
          - null
          recipient_call: recipient_call
          uuid: uuid
          relocated_call: relocated_call
      properties:
        items:
          $ref: '#/components/schemas/Relocate'
      type: object
    StatusSummary:
      example:
        plugins:
          endpoints:
            status: null
          voicemails:
            cache_items: 0
            status: null
        bus_consumer:
          status: null
        ari:
          status: null
        service_token:
          status: null
      properties:
        ari:
          $ref: '#/components/schemas/ComponentWithStatus'
        bus_consumer:
          $ref: '#/components/schemas/ComponentWithStatus'
        plugins:
          $ref: '#/components/schemas/PluginsStatus'
        service_token:
          $ref: '#/components/schemas/ComponentWithStatus'
      type: object
    StatusValue:
      enum:
      - fail
      - ok
      type: string
    SwitchboardHeldCall:
      example:
        caller_id_name: caller_id_name
        caller_id_number: caller_id_number
        id: id
      properties:
        caller_id_name:
          type: string
        caller_id_number:
          type: string
        id:
          type: string
      type: object
    SwitchboardHeldCalls:
      example:
        items:
        - caller_id_name: caller_id_name
          caller_id_number: caller_id_number
          id: id
        - caller_id_name: caller_id_name
          caller_id_number: caller_id_number
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/SwitchboardHeldCall'
          type: array
      type: object
    SwitchboardQueuedCall:
      example:
        caller_id_name: caller_id_name
        caller_id_number: caller_id_number
        id: id
      properties:
        caller_id_name:
          type: string
        caller_id_number:
          type: string
        id:
          type: string
      type: object
    SwitchboardQueuedCalls:
      example:
        items:
        - caller_id_name: caller_id_name
          caller_id_number: caller_id_number
          id: id
        - caller_id_name: caller_id_name
          caller_id_number: caller_id_number
          id: id
      properties:
        items:
          items:
            $ref: '#/components/schemas/SwitchboardQueuedCall'
          type: array
      type: object
    TalkingTo:
      example:
        '{channel_id}': "{channel_id}"
      properties:
        '{channel_id}':
          type: string
      type: object
    Timeout:
      description: Number of seconds to wait for the recipient to answer
      type: integer
    Transfer:
      example:
        initiator_call: initiator_call
        initiator_tenant_uuid: initiator_tenant_uuid
        id: id
        transferred_call: transferred_call
        recipient_call: recipient_call
        flow: attended
        initiator_uuid: initiator_uuid
        status: starting
      properties:
        flow:
          default: attended
          description: The behavior of the transfer
          enum:
          - attended
          - blind
          type: string
        id:
          description: Unique identifier of the transfer
          type: string
        initiator_call:
          description: Call ID of the transfer initiator
          type: string
        initiator_tenant_uuid:
          description: Tenant UUID of the user who initiated the transfer
          type: string
        initiator_uuid:
          description: UUID of the user who initiated the transfer
          type: string
        recipient_call:
          description: Call ID of the recipient of the transfer. May be null when
            the transfer is 'starting'.
          type: string
        status:
          description: The current step of the transfer
          enum:
          - starting
          - ringback
          - answered
          type: string
        transferred_call:
          description: Call ID of the call being transferred to someone else
          type: string
      type: object
    TransferFlow:
      default: attended
      description: Behavior of the transfer. `attended` allows the initiator to talk
        to the recipient. `blind` does not.
      enum:
      - attended
      - blind
      type: string
    TransferList:
      example:
        items:
        - initiator_call: initiator_call
          initiator_tenant_uuid: initiator_tenant_uuid
          id: id
          transferred_call: transferred_call
          recipient_call: recipient_call
          flow: attended
          initiator_uuid: initiator_uuid
          status: starting
        - initiator_call: initiator_call
          initiator_tenant_uuid: initiator_tenant_uuid
          id: id
          transferred_call: transferred_call
          recipient_call: recipient_call
          flow: attended
          initiator_uuid: initiator_uuid
          status: starting
      properties:
        items:
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
      type: object
    TransferRequest:
      example:
        variables: "{}"
        initiator_call: initiator_call
        context: context
        transferred_call: transferred_call
        exten: exten
        flow: null
        timeout: 0
      properties:
        context:
          description: Context of the recipient of the transfer
          type: string
        exten:
          description: Extension of the recipient of the transfer
          type: string
        flow:
          $ref: '#/components/schemas/TransferFlow'
        initiator_call:
          description: Call ID of the transfer initiator
          type: string
        timeout:
          description: Maximum ringing time before cancelling the transfer (in seconds).
            Default (or null) is an unlimited ring time.
          type: integer
        transferred_call:
          description: Call ID of the call being transferred to someone else
          type: string
        variables:
          description: Channel variables to set on the recipient call
          properties: {}
          type: object
      required:
      - context
      - exten
      - initiator_call
      - transferred_call
      type: object
    TransferTimeout:
      description: Maximum ringing time before cancelling the transfer (in seconds).
        Default (or null) is an unlimited ring time.
      type: integer
    UserCallRequest:
      example:
        auto_answer_caller: true
        extension: extension
        variables: "{}"
        all_lines: true
        from_mobile: true
        line_id: 0
      properties:
        all_lines:
          description: Use all of the lines of the user to make the call (ignored
            when `line_id` is specified).
          type: boolean
        auto_answer_caller:
          description: "Inform the caller phone that it should answer automatically.\
            \ Limitation: this does not work if `all_lines` is true, if `from_mobile`\
            \ is true or if the phone is SCCP."
          type: boolean
        extension:
          description: Extension to call
          type: string
        from_mobile:
          description: "Start the call from the user's mobile phone. Default is False.\
            \ Limitation: this feature may return a wrong call_id if the outgoing\
            \ call used to dial the mobile number has more than one associated trunk."
          type: boolean
        line_id:
          description: ID of the line of the user used to make the call. Default is
            the main line of the user.
          type: integer
        variables:
          description: Channel variables to set
          properties: {}
          type: object
      required:
      - extension
      type: object
    UserRelocateLocation:
      properties:
        line:
          $ref: '#/components/schemas/LocationLine'
      type: object
    UserRelocateRequest:
      example:
        auto_answer: false
        completions:
        - answer
        destination: line
        initiator_call: "123456.789"
        location:
          contact: 5f3ff5ga
          line_id: 14
      properties:
        auto_answer:
          description: "Inform the destination phone that it should answer automatically.\
            \ Limitation: this does not work on SCCP phones."
          type: boolean
        completions:
          items:
            $ref: '#/components/schemas/RelocateCompletion'
          type: array
        destination:
          description: What kind of destination the relocated call should be connected
          enum:
          - line
          - mobile
          type: string
        initiator_call:
          description: Call ID of the relocate initiator. This call must be owned
            by the authenticated user.
          type: string
        location:
          $ref: '#/components/schemas/UserRelocateLocation'
        timeout:
          description: Number of seconds to wait for the recipient to answer
          type: integer
      required:
      - destination
      - initiator_call
      type: object
    UserTransferRequest:
      example:
        initiator_call: initiator_call
        exten: exten
        flow: null
        timeout: 0
      properties:
        exten:
          description: Extension of the recipient of the transfer
          type: string
        flow:
          $ref: '#/components/schemas/TransferFlow'
        initiator_call:
          description: Call ID of the transfer initiator. This call must be owned
            by the authenticated user.
          type: string
        timeout:
          description: Maximum ringing time before cancelling the transfer (in seconds).
            Default (or null) is an unlimited ring time.
          type: integer
      required:
      - exten
      - initiator_call
      type: object
    Voicemail:
      example:
        number: number
        folders:
        - name: name
          messages:
          - caller_id_name: caller_id_name
            duration: 6
            caller_id_num: caller_id_num
            id: id
            timestamp: 1
          - caller_id_name: caller_id_name
            duration: 6
            caller_id_num: caller_id_num
            id: id
            timestamp: 1
          id: 0
          type: new
        - name: name
          messages:
          - caller_id_name: caller_id_name
            duration: 6
            caller_id_num: caller_id_num
            id: id
            timestamp: 1
          - caller_id_name: caller_id_name
            duration: 6
            caller_id_num: caller_id_num
            id: id
            timestamp: 1
          id: 0
          type: new
        name: name
        id: 5
      properties:
        folders:
          description: The voicemail's folders
          items:
            $ref: '#/components/schemas/VoicemailFolder'
          type: array
        id:
          description: The voicemail's ID
          type: integer
        name:
          description: The voicemail's name
          type: string
        number:
          description: The voicemail's number
          type: string
      type: object
    VoicemailFolder:
      allOf:
      - $ref: '#/components/schemas/VoicemailFolderBase'
      - properties:
          messages:
            description: The folder's messages
            items:
              $ref: '#/components/schemas/VoicemailMessageBase'
            type: array
        type: object
      example:
        name: name
        messages:
        - caller_id_name: caller_id_name
          duration: 6
          caller_id_num: caller_id_num
          id: id
          timestamp: 1
        - caller_id_name: caller_id_name
          duration: 6
          caller_id_num: caller_id_num
          id: id
          timestamp: 1
        id: 0
        type: new
    VoicemailFolderBase:
      example:
        name: name
        id: 1
        type: new
      properties:
        id:
          description: The folder's ID
          type: integer
        name:
          description: The folder's name
          type: string
        type:
          description: "The folder's type. When a message if left on a voicemail,\
            \ it is stored in the folder of type \"new\", unless if it is an urgent\
            \ message, in which case it is left in the folder of type \"urgent\".\
            \ When that messages is read, it is moved into the folder of type \"old\"\
            . All other folders used the type \"other\"."
          enum:
          - new
          - old
          - urgent
          - other
          type: string
      type: object
    VoicemailMessage:
      allOf:
      - $ref: '#/components/schemas/VoicemailMessageBase'
      - properties:
          folder:
            $ref: '#/components/schemas/VoicemailFolderBase'
        type: object
      example:
        caller_id_name: caller_id_name
        duration: 0
        folder:
          name: name
          id: 1
          type: new
        caller_id_num: caller_id_num
        id: id
        timestamp: 6
    VoicemailMessageBase:
      example:
        caller_id_name: caller_id_name
        duration: 6
        caller_id_num: caller_id_num
        id: id
        timestamp: 1
      properties:
        caller_id_name:
          description: The caller's name (or null if no caller ID name)
          readOnly: true
          type: string
        caller_id_num:
          description: The caller's number (or null if no caller ID number)
          readOnly: true
          type: string
        duration:
          description: The message's duration in seconds
          readOnly: true
          type: integer
        id:
          description: The message's ID
          readOnly: true
          type: string
        timestamp:
          description: The time the message was left as a Unix time value
          readOnly: true
          type: integer
      type: object
    VoicemailMessageUpdate:
      example:
        folder_id: 0
      properties:
        folder_id:
          description: The folder's ID
          type: integer
      required:
      - folder_id
      type: object
    VoicemailsStatus:
      allOf:
      - $ref: '#/components/schemas/ComponentWithStatus'
      - properties:
          cache_items:
            type: integer
        type: object
      example:
        cache_items: 0
        status: null
    listCalls_200_response:
      example:
        items:
        - answer_time: 2000-01-23T04:56:07.000+00:00
          caller_id_name: caller_id_name
          creation_time: 2000-01-23T04:56:07.000+00:00
          is_caller: true
          peer_caller_id_name: peer_caller_id_name
          record_state: active
          bridges:
          - bridges
          - bridges
          on_hold: true
          line_id: 0
          call_id: call_id
          is_video: true
          user_uuid: user_uuid
          conversation_id: conversation_id
          peer_caller_id_number: peer_caller_id_number
          sip_call_id: sip_call_id
          hangup_time: 2000-01-23T04:56:07.000+00:00
          caller_id_number: caller_id_number
          dialed_extension: dialed_extension
          muted: true
          talking_to:
            '{channel_id}': "{channel_id}"
          direction: internal
          status: status
        - answer_time: 2000-01-23T04:56:07.000+00:00
          caller_id_name: caller_id_name
          creation_time: 2000-01-23T04:56:07.000+00:00
          is_caller: true
          peer_caller_id_name: peer_caller_id_name
          record_state: active
          bridges:
          - bridges
          - bridges
          on_hold: true
          line_id: 0
          call_id: call_id
          is_video: true
          user_uuid: user_uuid
          conversation_id: conversation_id
          peer_caller_id_number: peer_caller_id_number
          sip_call_id: sip_call_id
          hangup_time: 2000-01-23T04:56:07.000+00:00
          caller_id_number: caller_id_number
          dialed_extension: dialed_extension
          muted: true
          talking_to:
            '{channel_id}': "{channel_id}"
          direction: internal
          status: status
      properties:
        items:
          items:
            $ref: '#/components/schemas/Call'
          type: array
      type: object
  securitySchemes:
    accent_auth_token:
      in: header
      name: X-Auth-Token
      type: apiKey
x-accent-name: calld
x-accent-port: 9500
x-original-swagger-version: "2.0"
