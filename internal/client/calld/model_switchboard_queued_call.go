/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"encoding/json"
)

// checks if the SwitchboardQueuedCall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SwitchboardQueuedCall{}

// SwitchboardQueuedCall struct for SwitchboardQueuedCall
type SwitchboardQueuedCall struct {
	CallerIdName   *string `json:"caller_id_name,omitempty"`
	CallerIdNumber *string `json:"caller_id_number,omitempty"`
	Id             *string `json:"id,omitempty"`
}

// NewSwitchboardQueuedCall instantiates a new SwitchboardQueuedCall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSwitchboardQueuedCall() *SwitchboardQueuedCall {
	this := SwitchboardQueuedCall{}
	return &this
}

// NewSwitchboardQueuedCallWithDefaults instantiates a new SwitchboardQueuedCall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSwitchboardQueuedCallWithDefaults() *SwitchboardQueuedCall {
	this := SwitchboardQueuedCall{}
	return &this
}

// GetCallerIdName returns the CallerIdName field value if set, zero value otherwise.
func (o *SwitchboardQueuedCall) GetCallerIdName() string {
	if o == nil || IsNil(o.CallerIdName) {
		var ret string
		return ret
	}
	return *o.CallerIdName
}

// GetCallerIdNameOk returns a tuple with the CallerIdName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchboardQueuedCall) GetCallerIdNameOk() (*string, bool) {
	if o == nil || IsNil(o.CallerIdName) {
		return nil, false
	}
	return o.CallerIdName, true
}

// HasCallerIdName returns a boolean if a field has been set.
func (o *SwitchboardQueuedCall) HasCallerIdName() bool {
	if o != nil && !IsNil(o.CallerIdName) {
		return true
	}

	return false
}

// SetCallerIdName gets a reference to the given string and assigns it to the CallerIdName field.
func (o *SwitchboardQueuedCall) SetCallerIdName(v string) {
	o.CallerIdName = &v
}

// GetCallerIdNumber returns the CallerIdNumber field value if set, zero value otherwise.
func (o *SwitchboardQueuedCall) GetCallerIdNumber() string {
	if o == nil || IsNil(o.CallerIdNumber) {
		var ret string
		return ret
	}
	return *o.CallerIdNumber
}

// GetCallerIdNumberOk returns a tuple with the CallerIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchboardQueuedCall) GetCallerIdNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CallerIdNumber) {
		return nil, false
	}
	return o.CallerIdNumber, true
}

// HasCallerIdNumber returns a boolean if a field has been set.
func (o *SwitchboardQueuedCall) HasCallerIdNumber() bool {
	if o != nil && !IsNil(o.CallerIdNumber) {
		return true
	}

	return false
}

// SetCallerIdNumber gets a reference to the given string and assigns it to the CallerIdNumber field.
func (o *SwitchboardQueuedCall) SetCallerIdNumber(v string) {
	o.CallerIdNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SwitchboardQueuedCall) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SwitchboardQueuedCall) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SwitchboardQueuedCall) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SwitchboardQueuedCall) SetId(v string) {
	o.Id = &v
}

func (o SwitchboardQueuedCall) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SwitchboardQueuedCall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallerIdName) {
		toSerialize["caller_id_name"] = o.CallerIdName
	}
	if !IsNil(o.CallerIdNumber) {
		toSerialize["caller_id_number"] = o.CallerIdNumber
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableSwitchboardQueuedCall struct {
	value *SwitchboardQueuedCall
	isSet bool
}

func (v NullableSwitchboardQueuedCall) Get() *SwitchboardQueuedCall {
	return v.value
}

func (v *NullableSwitchboardQueuedCall) Set(val *SwitchboardQueuedCall) {
	v.value = val
	v.isSet = true
}

func (v NullableSwitchboardQueuedCall) IsSet() bool {
	return v.isSet
}

func (v *NullableSwitchboardQueuedCall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSwitchboardQueuedCall(val *SwitchboardQueuedCall) *NullableSwitchboardQueuedCall {
	return &NullableSwitchboardQueuedCall{value: val, isSet: true}
}

func (v NullableSwitchboardQueuedCall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSwitchboardQueuedCall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
