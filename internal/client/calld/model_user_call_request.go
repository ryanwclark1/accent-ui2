/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UserCallRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCallRequest{}

// UserCallRequest struct for UserCallRequest
type UserCallRequest struct {
	// Use all of the lines of the user to make the call (ignored when `line_id` is specified).
	AllLines *bool `json:"all_lines,omitempty"`
	// Inform the caller phone that it should answer automatically. Limitation: this does not work if `all_lines` is true, if `from_mobile` is true or if the phone is SCCP.
	AutoAnswerCaller *bool `json:"auto_answer_caller,omitempty"`
	// Extension to call
	Extension string `json:"extension"`
	// Start the call from the user's mobile phone. Default is False. Limitation: this feature may return a wrong call_id if the outgoing call used to dial the mobile number has more than one associated trunk.
	FromMobile *bool `json:"from_mobile,omitempty"`
	// ID of the line of the user used to make the call. Default is the main line of the user.
	LineId *int32 `json:"line_id,omitempty"`
	// Channel variables to set
	Variables map[string]interface{} `json:"variables,omitempty"`
}

type _UserCallRequest UserCallRequest

// NewUserCallRequest instantiates a new UserCallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCallRequest(extension string) *UserCallRequest {
	this := UserCallRequest{}
	this.Extension = extension
	return &this
}

// NewUserCallRequestWithDefaults instantiates a new UserCallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCallRequestWithDefaults() *UserCallRequest {
	this := UserCallRequest{}
	return &this
}

// GetAllLines returns the AllLines field value if set, zero value otherwise.
func (o *UserCallRequest) GetAllLines() bool {
	if o == nil || IsNil(o.AllLines) {
		var ret bool
		return ret
	}
	return *o.AllLines
}

// GetAllLinesOk returns a tuple with the AllLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCallRequest) GetAllLinesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllLines) {
		return nil, false
	}
	return o.AllLines, true
}

// HasAllLines returns a boolean if a field has been set.
func (o *UserCallRequest) HasAllLines() bool {
	if o != nil && !IsNil(o.AllLines) {
		return true
	}

	return false
}

// SetAllLines gets a reference to the given bool and assigns it to the AllLines field.
func (o *UserCallRequest) SetAllLines(v bool) {
	o.AllLines = &v
}

// GetAutoAnswerCaller returns the AutoAnswerCaller field value if set, zero value otherwise.
func (o *UserCallRequest) GetAutoAnswerCaller() bool {
	if o == nil || IsNil(o.AutoAnswerCaller) {
		var ret bool
		return ret
	}
	return *o.AutoAnswerCaller
}

// GetAutoAnswerCallerOk returns a tuple with the AutoAnswerCaller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCallRequest) GetAutoAnswerCallerOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoAnswerCaller) {
		return nil, false
	}
	return o.AutoAnswerCaller, true
}

// HasAutoAnswerCaller returns a boolean if a field has been set.
func (o *UserCallRequest) HasAutoAnswerCaller() bool {
	if o != nil && !IsNil(o.AutoAnswerCaller) {
		return true
	}

	return false
}

// SetAutoAnswerCaller gets a reference to the given bool and assigns it to the AutoAnswerCaller field.
func (o *UserCallRequest) SetAutoAnswerCaller(v bool) {
	o.AutoAnswerCaller = &v
}

// GetExtension returns the Extension field value
func (o *UserCallRequest) GetExtension() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value
// and a boolean to check if the value has been set.
func (o *UserCallRequest) GetExtensionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extension, true
}

// SetExtension sets field value
func (o *UserCallRequest) SetExtension(v string) {
	o.Extension = v
}

// GetFromMobile returns the FromMobile field value if set, zero value otherwise.
func (o *UserCallRequest) GetFromMobile() bool {
	if o == nil || IsNil(o.FromMobile) {
		var ret bool
		return ret
	}
	return *o.FromMobile
}

// GetFromMobileOk returns a tuple with the FromMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCallRequest) GetFromMobileOk() (*bool, bool) {
	if o == nil || IsNil(o.FromMobile) {
		return nil, false
	}
	return o.FromMobile, true
}

// HasFromMobile returns a boolean if a field has been set.
func (o *UserCallRequest) HasFromMobile() bool {
	if o != nil && !IsNil(o.FromMobile) {
		return true
	}

	return false
}

// SetFromMobile gets a reference to the given bool and assigns it to the FromMobile field.
func (o *UserCallRequest) SetFromMobile(v bool) {
	o.FromMobile = &v
}

// GetLineId returns the LineId field value if set, zero value otherwise.
func (o *UserCallRequest) GetLineId() int32 {
	if o == nil || IsNil(o.LineId) {
		var ret int32
		return ret
	}
	return *o.LineId
}

// GetLineIdOk returns a tuple with the LineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCallRequest) GetLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LineId) {
		return nil, false
	}
	return o.LineId, true
}

// HasLineId returns a boolean if a field has been set.
func (o *UserCallRequest) HasLineId() bool {
	if o != nil && !IsNil(o.LineId) {
		return true
	}

	return false
}

// SetLineId gets a reference to the given int32 and assigns it to the LineId field.
func (o *UserCallRequest) SetLineId(v int32) {
	o.LineId = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *UserCallRequest) GetVariables() map[string]interface{} {
	if o == nil || IsNil(o.Variables) {
		var ret map[string]interface{}
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCallRequest) GetVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Variables) {
		return map[string]interface{}{}, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *UserCallRequest) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *UserCallRequest) SetVariables(v map[string]interface{}) {
	o.Variables = v
}

func (o UserCallRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCallRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllLines) {
		toSerialize["all_lines"] = o.AllLines
	}
	if !IsNil(o.AutoAnswerCaller) {
		toSerialize["auto_answer_caller"] = o.AutoAnswerCaller
	}
	toSerialize["extension"] = o.Extension
	if !IsNil(o.FromMobile) {
		toSerialize["from_mobile"] = o.FromMobile
	}
	if !IsNil(o.LineId) {
		toSerialize["line_id"] = o.LineId
	}
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

func (o *UserCallRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"extension",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserCallRequest := _UserCallRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserCallRequest)

	if err != nil {
		return err
	}

	*o = UserCallRequest(varUserCallRequest)

	return err
}

type NullableUserCallRequest struct {
	value *UserCallRequest
	isSet bool
}

func (v NullableUserCallRequest) Get() *UserCallRequest {
	return v.value
}

func (v *NullableUserCallRequest) Set(val *UserCallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCallRequest(val *UserCallRequest) *NullableUserCallRequest {
	return &NullableUserCallRequest{value: val, isSet: true}
}

func (v NullableUserCallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
