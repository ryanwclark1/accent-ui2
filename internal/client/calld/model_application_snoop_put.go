/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"encoding/json"
)

// checks if the ApplicationSnoopPut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSnoopPut{}

// ApplicationSnoopPut struct for ApplicationSnoopPut
type ApplicationSnoopPut struct {
	WhisperMode *string `json:"whisper_mode,omitempty"`
}

// NewApplicationSnoopPut instantiates a new ApplicationSnoopPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSnoopPut() *ApplicationSnoopPut {
	this := ApplicationSnoopPut{}
	return &this
}

// NewApplicationSnoopPutWithDefaults instantiates a new ApplicationSnoopPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSnoopPutWithDefaults() *ApplicationSnoopPut {
	this := ApplicationSnoopPut{}
	return &this
}

// GetWhisperMode returns the WhisperMode field value if set, zero value otherwise.
func (o *ApplicationSnoopPut) GetWhisperMode() string {
	if o == nil || IsNil(o.WhisperMode) {
		var ret string
		return ret
	}
	return *o.WhisperMode
}

// GetWhisperModeOk returns a tuple with the WhisperMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSnoopPut) GetWhisperModeOk() (*string, bool) {
	if o == nil || IsNil(o.WhisperMode) {
		return nil, false
	}
	return o.WhisperMode, true
}

// HasWhisperMode returns a boolean if a field has been set.
func (o *ApplicationSnoopPut) HasWhisperMode() bool {
	if o != nil && !IsNil(o.WhisperMode) {
		return true
	}

	return false
}

// SetWhisperMode gets a reference to the given string and assigns it to the WhisperMode field.
func (o *ApplicationSnoopPut) SetWhisperMode(v string) {
	o.WhisperMode = &v
}

func (o ApplicationSnoopPut) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSnoopPut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WhisperMode) {
		toSerialize["whisper_mode"] = o.WhisperMode
	}
	return toSerialize, nil
}

type NullableApplicationSnoopPut struct {
	value *ApplicationSnoopPut
	isSet bool
}

func (v NullableApplicationSnoopPut) Get() *ApplicationSnoopPut {
	return v.value
}

func (v *NullableApplicationSnoopPut) Set(val *ApplicationSnoopPut) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSnoopPut) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSnoopPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSnoopPut(val *ApplicationSnoopPut) *NullableApplicationSnoopPut {
	return &NullableApplicationSnoopPut{value: val, isSet: true}
}

func (v NullableApplicationSnoopPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSnoopPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
