/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ApplicationSnoop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSnoop{}

// ApplicationSnoop struct for ApplicationSnoop
type ApplicationSnoop struct {
	SnoopedCallId  *string `json:"snooped_call_id,omitempty"`
	SnoopingCallId string  `json:"snooping_call_id"`
	Uuid           *string `json:"uuid,omitempty"`
	WhisperMode    string  `json:"whisper_mode"`
}

type _ApplicationSnoop ApplicationSnoop

// NewApplicationSnoop instantiates a new ApplicationSnoop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSnoop(snoopingCallId string, whisperMode string) *ApplicationSnoop {
	this := ApplicationSnoop{}
	this.SnoopingCallId = snoopingCallId
	this.WhisperMode = whisperMode
	return &this
}

// NewApplicationSnoopWithDefaults instantiates a new ApplicationSnoop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSnoopWithDefaults() *ApplicationSnoop {
	this := ApplicationSnoop{}
	return &this
}

// GetSnoopedCallId returns the SnoopedCallId field value if set, zero value otherwise.
func (o *ApplicationSnoop) GetSnoopedCallId() string {
	if o == nil || IsNil(o.SnoopedCallId) {
		var ret string
		return ret
	}
	return *o.SnoopedCallId
}

// GetSnoopedCallIdOk returns a tuple with the SnoopedCallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSnoop) GetSnoopedCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.SnoopedCallId) {
		return nil, false
	}
	return o.SnoopedCallId, true
}

// HasSnoopedCallId returns a boolean if a field has been set.
func (o *ApplicationSnoop) HasSnoopedCallId() bool {
	if o != nil && !IsNil(o.SnoopedCallId) {
		return true
	}

	return false
}

// SetSnoopedCallId gets a reference to the given string and assigns it to the SnoopedCallId field.
func (o *ApplicationSnoop) SetSnoopedCallId(v string) {
	o.SnoopedCallId = &v
}

// GetSnoopingCallId returns the SnoopingCallId field value
func (o *ApplicationSnoop) GetSnoopingCallId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnoopingCallId
}

// GetSnoopingCallIdOk returns a tuple with the SnoopingCallId field value
// and a boolean to check if the value has been set.
func (o *ApplicationSnoop) GetSnoopingCallIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnoopingCallId, true
}

// SetSnoopingCallId sets field value
func (o *ApplicationSnoop) SetSnoopingCallId(v string) {
	o.SnoopingCallId = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ApplicationSnoop) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSnoop) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ApplicationSnoop) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ApplicationSnoop) SetUuid(v string) {
	o.Uuid = &v
}

// GetWhisperMode returns the WhisperMode field value
func (o *ApplicationSnoop) GetWhisperMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WhisperMode
}

// GetWhisperModeOk returns a tuple with the WhisperMode field value
// and a boolean to check if the value has been set.
func (o *ApplicationSnoop) GetWhisperModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WhisperMode, true
}

// SetWhisperMode sets field value
func (o *ApplicationSnoop) SetWhisperMode(v string) {
	o.WhisperMode = v
}

func (o ApplicationSnoop) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSnoop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SnoopedCallId) {
		toSerialize["snooped_call_id"] = o.SnoopedCallId
	}
	toSerialize["snooping_call_id"] = o.SnoopingCallId
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	toSerialize["whisper_mode"] = o.WhisperMode
	return toSerialize, nil
}

func (o *ApplicationSnoop) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"snooping_call_id",
		"whisper_mode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApplicationSnoop := _ApplicationSnoop{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApplicationSnoop)

	if err != nil {
		return err
	}

	*o = ApplicationSnoop(varApplicationSnoop)

	return err
}

type NullableApplicationSnoop struct {
	value *ApplicationSnoop
	isSet bool
}

func (v NullableApplicationSnoop) Get() *ApplicationSnoop {
	return v.value
}

func (v *NullableApplicationSnoop) Set(val *ApplicationSnoop) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSnoop) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSnoop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSnoop(val *ApplicationSnoop) *NullableApplicationSnoop {
	return &NullableApplicationSnoop{value: val, isSet: true}
}

func (v NullableApplicationSnoop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSnoop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
