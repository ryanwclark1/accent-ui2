/*
accent-calld

Testing RelocatesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package calld

import (
	"context"
	openapiclient "github.com/ryanwclark1/accent-ui2/internal/client/calld"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_calld_RelocatesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RelocatesAPIService CancelRelocate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var relocateUuid string

		httpRes, err := apiClient.RelocatesAPI.CancelRelocate(context.Background(), relocateUuid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelocatesAPIService CompleteRelocate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var relocateUuid string

		httpRes, err := apiClient.RelocatesAPI.CompleteRelocate(context.Background(), relocateUuid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelocatesAPIService GetUserRelocate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var relocateUuid string

		resp, httpRes, err := apiClient.RelocatesAPI.GetUserRelocate(context.Background(), relocateUuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelocatesAPIService InitiateRelocate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.RelocatesAPI.InitiateRelocate(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelocatesAPIService ListUserRelocates", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.RelocatesAPI.ListUserRelocates(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
