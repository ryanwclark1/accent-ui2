/*
accent-agentd

Agent service

API version: 1.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agentd

import (
	"encoding/json"
)

// checks if the LoginInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginInfo{}

// LoginInfo struct for LoginInfo
type LoginInfo struct {
	// Context
	Context *string `json:"context,omitempty"`
	// Extension
	Extension *string `json:"extension,omitempty"`
}

// NewLoginInfo instantiates a new LoginInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginInfo() *LoginInfo {
	this := LoginInfo{}
	return &this
}

// NewLoginInfoWithDefaults instantiates a new LoginInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginInfoWithDefaults() *LoginInfo {
	this := LoginInfo{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *LoginInfo) GetContext() string {
	if o == nil || IsNil(o.Context) {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginInfo) GetContextOk() (*string, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *LoginInfo) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *LoginInfo) SetContext(v string) {
	o.Context = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *LoginInfo) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginInfo) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *LoginInfo) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *LoginInfo) SetExtension(v string) {
	o.Extension = &v
}

func (o LoginInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	return toSerialize, nil
}

type NullableLoginInfo struct {
	value *LoginInfo
	isSet bool
}

func (v NullableLoginInfo) Get() *LoginInfo {
	return v.value
}

func (v *NullableLoginInfo) Set(val *LoginInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginInfo(val *LoginInfo) *NullableLoginInfo {
	return &NullableLoginInfo{value: val, isSet: true}
}

func (v NullableLoginInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
