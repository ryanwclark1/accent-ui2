/*
accent-agentd

Agent service

API version: 1.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agentd

import (
	"encoding/json"
)

// checks if the AgentStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentStatus{}

// AgentStatus struct for AgentStatus
type AgentStatus struct {
	// The context on which the agent is logged, or null if the agent is not logged
	Context *string `json:"context,omitempty"`
	// The extension on which the agent is logged, or null if the agent is not logged
	Extension *string `json:"extension,omitempty"`
	// Agent's ID
	Id *int32 `json:"id,omitempty"`
	// True if the agent is logged, else false
	Logged *bool `json:"logged,omitempty"`
	// Agent's number
	Number *string `json:"number,omitempty"`
	// Accent's UUID
	OriginUuid *string `json:"origin_uuid,omitempty"`
	// True if the agent is paused, else false
	Paused *bool `json:"paused,omitempty"`
	// The reason of the agent pause
	PausedReason *string `json:"paused_reason,omitempty"`
	// The interface (e.g. SIP/alice) to determine if the agent is in use or not
	StateInterface *string `json:"state_interface,omitempty"`
	// Tenant's UUID
	TenantUuid *string `json:"tenant_uuid,omitempty"`
}

// NewAgentStatus instantiates a new AgentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentStatus() *AgentStatus {
	this := AgentStatus{}
	return &this
}

// NewAgentStatusWithDefaults instantiates a new AgentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentStatusWithDefaults() *AgentStatus {
	this := AgentStatus{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *AgentStatus) GetContext() string {
	if o == nil || IsNil(o.Context) {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetContextOk() (*string, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *AgentStatus) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *AgentStatus) SetContext(v string) {
	o.Context = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *AgentStatus) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *AgentStatus) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *AgentStatus) SetExtension(v string) {
	o.Extension = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AgentStatus) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AgentStatus) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AgentStatus) SetId(v int32) {
	o.Id = &v
}

// GetLogged returns the Logged field value if set, zero value otherwise.
func (o *AgentStatus) GetLogged() bool {
	if o == nil || IsNil(o.Logged) {
		var ret bool
		return ret
	}
	return *o.Logged
}

// GetLoggedOk returns a tuple with the Logged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetLoggedOk() (*bool, bool) {
	if o == nil || IsNil(o.Logged) {
		return nil, false
	}
	return o.Logged, true
}

// HasLogged returns a boolean if a field has been set.
func (o *AgentStatus) HasLogged() bool {
	if o != nil && !IsNil(o.Logged) {
		return true
	}

	return false
}

// SetLogged gets a reference to the given bool and assigns it to the Logged field.
func (o *AgentStatus) SetLogged(v bool) {
	o.Logged = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *AgentStatus) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *AgentStatus) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *AgentStatus) SetNumber(v string) {
	o.Number = &v
}

// GetOriginUuid returns the OriginUuid field value if set, zero value otherwise.
func (o *AgentStatus) GetOriginUuid() string {
	if o == nil || IsNil(o.OriginUuid) {
		var ret string
		return ret
	}
	return *o.OriginUuid
}

// GetOriginUuidOk returns a tuple with the OriginUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetOriginUuidOk() (*string, bool) {
	if o == nil || IsNil(o.OriginUuid) {
		return nil, false
	}
	return o.OriginUuid, true
}

// HasOriginUuid returns a boolean if a field has been set.
func (o *AgentStatus) HasOriginUuid() bool {
	if o != nil && !IsNil(o.OriginUuid) {
		return true
	}

	return false
}

// SetOriginUuid gets a reference to the given string and assigns it to the OriginUuid field.
func (o *AgentStatus) SetOriginUuid(v string) {
	o.OriginUuid = &v
}

// GetPaused returns the Paused field value if set, zero value otherwise.
func (o *AgentStatus) GetPaused() bool {
	if o == nil || IsNil(o.Paused) {
		var ret bool
		return ret
	}
	return *o.Paused
}

// GetPausedOk returns a tuple with the Paused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetPausedOk() (*bool, bool) {
	if o == nil || IsNil(o.Paused) {
		return nil, false
	}
	return o.Paused, true
}

// HasPaused returns a boolean if a field has been set.
func (o *AgentStatus) HasPaused() bool {
	if o != nil && !IsNil(o.Paused) {
		return true
	}

	return false
}

// SetPaused gets a reference to the given bool and assigns it to the Paused field.
func (o *AgentStatus) SetPaused(v bool) {
	o.Paused = &v
}

// GetPausedReason returns the PausedReason field value if set, zero value otherwise.
func (o *AgentStatus) GetPausedReason() string {
	if o == nil || IsNil(o.PausedReason) {
		var ret string
		return ret
	}
	return *o.PausedReason
}

// GetPausedReasonOk returns a tuple with the PausedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetPausedReasonOk() (*string, bool) {
	if o == nil || IsNil(o.PausedReason) {
		return nil, false
	}
	return o.PausedReason, true
}

// HasPausedReason returns a boolean if a field has been set.
func (o *AgentStatus) HasPausedReason() bool {
	if o != nil && !IsNil(o.PausedReason) {
		return true
	}

	return false
}

// SetPausedReason gets a reference to the given string and assigns it to the PausedReason field.
func (o *AgentStatus) SetPausedReason(v string) {
	o.PausedReason = &v
}

// GetStateInterface returns the StateInterface field value if set, zero value otherwise.
func (o *AgentStatus) GetStateInterface() string {
	if o == nil || IsNil(o.StateInterface) {
		var ret string
		return ret
	}
	return *o.StateInterface
}

// GetStateInterfaceOk returns a tuple with the StateInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetStateInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.StateInterface) {
		return nil, false
	}
	return o.StateInterface, true
}

// HasStateInterface returns a boolean if a field has been set.
func (o *AgentStatus) HasStateInterface() bool {
	if o != nil && !IsNil(o.StateInterface) {
		return true
	}

	return false
}

// SetStateInterface gets a reference to the given string and assigns it to the StateInterface field.
func (o *AgentStatus) SetStateInterface(v string) {
	o.StateInterface = &v
}

// GetTenantUuid returns the TenantUuid field value if set, zero value otherwise.
func (o *AgentStatus) GetTenantUuid() string {
	if o == nil || IsNil(o.TenantUuid) {
		var ret string
		return ret
	}
	return *o.TenantUuid
}

// GetTenantUuidOk returns a tuple with the TenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentStatus) GetTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TenantUuid) {
		return nil, false
	}
	return o.TenantUuid, true
}

// HasTenantUuid returns a boolean if a field has been set.
func (o *AgentStatus) HasTenantUuid() bool {
	if o != nil && !IsNil(o.TenantUuid) {
		return true
	}

	return false
}

// SetTenantUuid gets a reference to the given string and assigns it to the TenantUuid field.
func (o *AgentStatus) SetTenantUuid(v string) {
	o.TenantUuid = &v
}

func (o AgentStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Logged) {
		toSerialize["logged"] = o.Logged
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.OriginUuid) {
		toSerialize["origin_uuid"] = o.OriginUuid
	}
	if !IsNil(o.Paused) {
		toSerialize["paused"] = o.Paused
	}
	if !IsNil(o.PausedReason) {
		toSerialize["paused_reason"] = o.PausedReason
	}
	if !IsNil(o.StateInterface) {
		toSerialize["state_interface"] = o.StateInterface
	}
	if !IsNil(o.TenantUuid) {
		toSerialize["tenant_uuid"] = o.TenantUuid
	}
	return toSerialize, nil
}

type NullableAgentStatus struct {
	value *AgentStatus
	isSet bool
}

func (v NullableAgentStatus) Get() *AgentStatus {
	return v.value
}

func (v *NullableAgentStatus) Set(val *AgentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentStatus(val *AgentStatus) *NullableAgentStatus {
	return &NullableAgentStatus{value: val, isSet: true}
}

func (v NullableAgentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
