/*
accent-agentd

Agent service

API version: 1.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package agentd

import (
	"encoding/json"
)

// checks if the AgentPauseReason type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentPauseReason{}

// AgentPauseReason struct for AgentPauseReason
type AgentPauseReason struct {
	// Pause Reason
	Reason *string `json:"reason,omitempty"`
}

// NewAgentPauseReason instantiates a new AgentPauseReason object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentPauseReason() *AgentPauseReason {
	this := AgentPauseReason{}
	return &this
}

// NewAgentPauseReasonWithDefaults instantiates a new AgentPauseReason object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentPauseReasonWithDefaults() *AgentPauseReason {
	this := AgentPauseReason{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *AgentPauseReason) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentPauseReason) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *AgentPauseReason) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *AgentPauseReason) SetReason(v string) {
	o.Reason = &v
}

func (o AgentPauseReason) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentPauseReason) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableAgentPauseReason struct {
	value *AgentPauseReason
	isSet bool
}

func (v NullableAgentPauseReason) Get() *AgentPauseReason {
	return v.value
}

func (v *NullableAgentPauseReason) Set(val *AgentPauseReason) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentPauseReason) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentPauseReason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentPauseReason(val *AgentPauseReason) *NullableAgentPauseReason {
	return &NullableAgentPauseReason{value: val, isSet: true}
}

func (v NullableAgentPauseReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentPauseReason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
