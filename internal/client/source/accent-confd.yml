host: api.accentvoice.io
basePath: /1.1
consumes:
- application/json
definitions:
  AccessFeature:
    properties:
      enabled:
        type: boolean
      feature:
        description: The feature to limit the access to
        enum:
        - phonebook
        type: string
      host:
        description: The host or subnet string (e.g. 10.0.0.0/24)
        type: string
      id:
        description: The access_feature ID
        type: integer
    required:
    - host
    - feature
    title: Access feature
  AccessFeatureItems:
    properties:
      items:
        items:
          $ref: '#/definitions/AccessFeature'
        type: array
      total:
        type: integer
    required:
    - total
    title: AccessFeatureItems
  Agent:
    allOf:
    - $ref: '#/definitions/AgentRelationBase'
    - properties:
        description:
          description: Additional information about the agent
          type: string
        language:
          description: Language used for the agent menu prompt
          type: string
        password:
          description: Numeric password used to log agent.
          type: string
        preprocess_subroutine:
          description: Name of the subroutine to execute in asterisk before receiving
            a call
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/AgentRelationQueues'
    - $ref: '#/definitions/AgentRelationUsers'
    - $ref: '#/definitions/AgentRelationSkills'
    - required:
      - number
    title: Agent
  AgentItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Agent'
        type: array
      total:
        type: integer
    required:
    - total
    title: AgentItems
  AgentRelationBase:
    properties:
      firstname:
        type: string
      id:
        description: The id of the agent
        readOnly: true
        type: integer
      lastname:
        type: string
      number:
        description: Agent number. Cannot be modified after creation
        type: string
  AgentRelationQueue:
    allOf:
    - $ref: '#/definitions/QueueRelationBase'
    - properties:
        penalty:
          description: Agent's penalty. A priority used for distributing calls.
          type: integer
  AgentRelationQueues:
    properties:
      queues:
        items:
          $ref: '#/definitions/AgentRelationQueue'
        readOnly: true
        type: array
  AgentRelationSkill:
    allOf:
    - $ref: '#/definitions/SkillRelationBase'
    - $ref: '#/definitions/AgentSkillRelationBase'
  AgentRelationSkills:
    properties:
      skills:
        items:
          $ref: '#/definitions/AgentRelationSkill'
        readOnly: true
        type: array
  AgentRelationUser:
    allOf:
    - $ref: '#/definitions/UserRelationBase'
  AgentRelationUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/AgentRelationUser'
        readOnly: true
        type: array
  AgentSkill:
    allOf:
    - $ref: '#/definitions/AgentSkillRelationBase'
    title: AgentSkill
  AgentSkillRelationBase:
    properties:
      skill_weight:
        description: Skill's weight.
        type: integer
  Application:
    allOf:
    - $ref: '#/definitions/ApplicationRelationBase'
    - properties:
        destination:
          description: Destination where the call entering in the application will
            be sent
          enum:
          - node
          type: string
        destination_options:
          $ref: '#/definitions/ApplicationDestinationNode'
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/ApplicationRelationLines'
    type: object
  ApplicationDestinationNode:
    properties:
      answer:
        description: Automatically answer the call when the call enters the destination
          node
        type: boolean
      music_on_hold:
        description: Name of the MOH category to use for music on hold
        type: string
      type:
        description: type of the default node
        enum:
        - holding
        type: string
    type: object
  ApplicationItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Application'
        type: array
    type: object
  ApplicationRelationBase:
    properties:
      name:
        description: Application name
        type: string
      uuid:
        description: Application UUID
        readOnly: true
        type: string
  ApplicationRelationLines:
    properties:
      lines:
        items:
          $ref: '#/definitions/LineRelationBase'
        readOnly: true
        type: array
  AuthUserPost:
    properties:
      auth:
        properties:
          emails:
            items:
              properties:
                address:
                  type: string
                confirmed:
                  type: boolean
                main:
                  type: boolean
              type: object
            type: array
          purpose:
            enum:
            - user
            - internal
            - external_api
            type: string
          username:
            type: string
          uuid:
            type: string
        type: object
  BaseUser:
    allOf:
    - $ref: '#/definitions/UserRelationBase'
    - properties:
        call_permission_password:
          description: Overwrite all passwords set in call permissions associated
            to the user
          type: string
        call_record_enabled:
          default: false
          description: Record all calls made by this user (deprecated). If set, all
            `call_record_*_enabled` will be affected
          type: boolean
        call_record_incoming_external_enabled:
          default: false
          description: Record all external calls received by this user.
          type: boolean
        call_record_incoming_internal_enabled:
          default: false
          description: Record all internal calls received by this user.
          type: boolean
        call_record_outgoing_external_enabled:
          default: false
          description: Record all external calls made by this user
          type: boolean
        call_record_outgoing_internal_enabled:
          default: false
          description: Record all internal calls received by this user
          type: boolean
        call_transfer_enabled:
          default: false
          description: Authorize call transfers
          type: boolean
        caller_id:
          description: Name that appears on the phone when calling. Formatted as "Firstname
            Lastname" < number >
          type: string
        description:
          description: Additional information about the user
          type: string
        dtmf_hangup_enabled:
          default: false
          description: Authorize to hangup with DTMF
          type: boolean
        email:
          description: User's email. Used for directories (i.e. by accent-dird)
          type: string
        enabled:
          default: true
          description: Enable/Disable the user
          type: boolean
        id:
          description: User ID
          readOnly: true
          type: integer
        language:
          description: User language (e.g. "en_US")
          enum:
          - de_DE
          - en_US
          - es_ES
          - fr_FR
          - fr_CA
          - it_IT
          - nl_NL
          type: string
        mobile_phone_number:
          description: "Phone number for the user\u2019s mobile device"
          type: string
        music_on_hold:
          description: Name of the MOH category to use for music on hold
          type: string
        online_call_record_enabled:
          default: false
          description: Allow user to record a call by pressing *3
          type: boolean
        outgoing_caller_id:
          description: Name that appears on the phone when calling
          enum:
          - default
          - anonymous
          - '"Firstname Lastname" < number >'
          type: string
        password:
          description: Password for connecting to the CTI (deprecated)
          minLength: 4
          type: string
        preprocess_subroutine:
          description: Name of the subroutine to execute in asterisk before receiving
            a call
          type: string
        ring_seconds:
          default: 30
          description: Number of seconds a user's phone will ring before falling back
          type: integer
        simultaneous_calls:
          default: 5
          description: Number of allowed simultaneous calls on a user's phone
          type: integer
        supervision_enabled:
          default: true
          description: Activate presence sharing in the accent client
          type: boolean
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        timezone:
          description: User timezone
          type: string
        userfield:
          description: A custom field which purpose is left to the client. If the
            user has no userfield, then this field is an empty string.
          type: string
        username:
          description: Username for connecting to the CTI (deprecated)
          type: string
    title: User
  BaseVoicemail:
    properties:
      ask_password:
        default: true
        description: Ask for password when accessing the voicemail menu
        type: boolean
      attach_audio:
        description: Attach an audio file of the recorded message when sending an
          email
        type: boolean
      context:
        description: Voicemail context
        type: string
      delete_messages:
        default: false
        description: "Delete messages after reception. \nThis can only be set along\
          \ with 'email' and 'attach_audio' configured.\n"
        type: boolean
      email:
        description: Email address. Notifications and audio attachments will be sent
          to this address
        type: string
      enabled:
        default: true
        description: Voicemail can be used when it is enabled
        type: boolean
      language:
        description: Language used for the voicemail menu prompt
        enum:
        - de_DE
        - en_US
        - es_ES
        - fr_FR
        - fr_CA
        - it_IT
        - nl_NL
        type: string
      max_messages:
        description: Maximum number of messages to store
        type: integer
      number:
        description: Mailbox number, for example `0001`
        type: string
      options:
        description: "Advanced configuration options. Options are appended at the\
          \ end of a \nvoicemail line in the file 'voicemail.conf' used by asterisk.\n\
          Please consult the asterisk documentation for further details on available\n\
          parameters. Options must have the following the form:\n\n```\n{\n  \"options\"\
          : [\n    [\"name1\", \"value1\"],\n    [\"name2\", \"value2\"]\n  ]\n}\n\
          ```\n\nThe resulting configuration in voicemail.conf will have the following\
          \ form:\n\n```\n1000 => ,Firstname Lastname,,,name1=value1|name2=value2\n\
          ```\n"
        items:
          $ref: '#/definitions/KeyValueOption'
        type: array
      pager:
        description: Email address. Summarized notifications will be sent to this
          address
        type: string
      password:
        description: Numeric password used to access the voicemail
        type: string
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
      timezone:
        default: The system default timezone
        description: Timezone used for announcing at what time a message was recorded
        type: string
    required:
    - name
    - number
    - context
    title: Voicemail
  CallFilter:
    allOf:
    - properties:
        caller_id_mode:
          description: How the caller_id_name will be treated
          enum:
          - prepend
          - overwrite
          - append
          type: string
        caller_id_name:
          description: Name to display
          type: string
        description:
          description: Additional information about the call filter
          type: string
        enabled:
          default: true
          description: Disable or enable the call filter
          type: boolean
        id:
          description: The id of the call filter
          readOnly: true
          type: integer
        name:
          description: The name of the call filter
          type: string
        source:
          description: Call type to apply call filter
          enum:
          - internal
          - external
          - all
          type: string
        strategy:
          description: Determine which will ring.
          enum:
          - all-recipients-then-linear-surrogates
          - all-recipients-then-all-surrogates
          - all-surrogates-then-all-recipients
          - linear-surrogates-then-all-recipients
          - all
          type: string
        surrogates_timeout:
          description: Number of seconds the filter's surrogates will ring before
            falling back
          type: integer
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
      required:
      - name
      - source
      - strategy
    - $ref: '#/definitions/CallFilterRecipients'
    - $ref: '#/definitions/CallFilterSurrogates'
    title: CallFilter
  CallFilterFallbacks:
    example:
      noanswer_destination:
        type: user
        user_id: 1
    properties:
      noanswer_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are no answer
  CallFilterItems:
    properties:
      items:
        items:
          $ref: '#/definitions/CallFilter'
        type: array
      total:
        type: integer
    required:
    - total
    title: CallFilterItems
  CallFilterRecipientUser:
    allOf:
    - properties:
        timeout:
          type: integer
    - $ref: '#/definitions/UserRelationBase'
  CallFilterRecipientUserUuid:
    allOf:
    - properties:
        timeout:
          type: integer
    - $ref: '#/definitions/UserUuid'
  CallFilterRecipientUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/CallFilterRecipientUser'
        readOnly: true
        type: array
  CallFilterRecipientUsersUuid:
    properties:
      users:
        items:
          $ref: '#/definitions/CallFilterRecipientUserUuid'
        type: array
  CallFilterRecipients:
    properties:
      recipients:
        $ref: '#/definitions/CallFilterRecipientUsers'
        readOnly: true
  CallFilterSurrogateUser:
    allOf:
    - properties:
        exten:
          type: string
        member_id:
          type: integer
    - $ref: '#/definitions/UserRelationBase'
  CallFilterSurrogateUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/CallFilterSurrogateUser'
        readOnly: true
        type: array
  CallFilterSurrogates:
    properties:
      surrogates:
        $ref: '#/definitions/CallFilterSurrogateUsers'
        readOnly: true
  CallPermission:
    allOf:
    - $ref: '#/definitions/CallPermissionRelationBase'
    - properties:
        description:
          description: Additional information about the call permission
          type: string
        enabled:
          default: true
          description: Disable or enable the call permission
          type: boolean
        extensions:
          description: Extensions to apply the call permission
          items:
            type: string
          type: array
        mode:
          default: deny
          description: Determine how the call permission are applied
          enum:
          - allow
          - deny
          type: string
        password:
          description: The password to be able to call extensions
          type: string
      title: CallPermission
  CallPermissionItems:
    properties:
      items:
        items:
          $ref: '#/definitions/CallPermission'
        type: array
      total:
        type: integer
    required:
    - total
    title: CallPermissionItems
  CallPermissionRelationBase:
    properties:
      id:
        description: The id of the call permission
        readOnly: true
        type: integer
      name:
        description: The name of the call permission
        type: string
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
    required:
    - name
  CallPickup:
    allOf:
    - properties:
        description:
          description: Additional information about the call pickup
          type: string
        enabled:
          default: true
          description: Disable or enable the call pickup
          type: boolean
        id:
          description: The id of the call pickup
          readOnly: true
          type: integer
        name:
          description: The name of the call pickup
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
      required:
      - name
    - $ref: '#/definitions/CallPickupTargets'
    - $ref: '#/definitions/CallPickupInterceptors'
    title: CallPickup
  CallPickupInterceptorUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/UserRelationBase'
        readOnly: true
        type: array
  CallPickupInterceptors:
    properties:
      surrogates:
        $ref: '#/definitions/CallPickupInterceptorUsers'
        readOnly: true
  CallPickupItems:
    properties:
      items:
        items:
          $ref: '#/definitions/CallPickup'
        type: array
      total:
        type: integer
    required:
    - total
    title: CallPickupItems
  CallPickupTargetUser:
    allOf:
    - properties:
        timeout:
          type: integer
    - $ref: '#/definitions/UserRelationBase'
  CallPickupTargetUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/CallPickupTargetUser'
        readOnly: true
        type: array
  CallPickupTargets:
    properties:
      recipients:
        $ref: '#/definitions/CallPickupTargetUsers'
        readOnly: true
  ComponentWithStatus:
    properties:
      status:
        $ref: '#/definitions/StatusValue'
    type: object
  ConfBridgeConfiguration:
    description: 'This configuration will be in the file ''confbridge.conf'' used
      by asterisk.

      Please consult the asterisk documentation for further details on available parameters.'
    properties:
      options:
        description: "These options must be unique and unordered. Otherwise, use `ordered_options`.\
          \ Option must have the following form:\n\n```\n{\n  \"options\": {\n   \
          \ \"name1\": \"value1\",\n    ...\n  }\n}\n```\n\n"
        type: object
    title: ConfBridgeConfiguration
  Conference:
    allOf:
    - $ref: '#/definitions/ConferenceRelationBase'
    - properties:
        admin_pin:
          description: Administrator pin to enter in the conference
          type: string
        announce_join_leave:
          default: false
          description: Record name and announce join/leave
          type: boolean
        announce_only_user:
          default: true
          description: Announce when a participant is alone in conference
          type: boolean
        announce_user_count:
          default: false
          description: Announce the number of participants
          type: boolean
        max_users:
          description: Maximum users allowed in the conference. This exclude admin.
          type: integer
        music_on_hold:
          description: Name of the MOH category to use for music on hold
          type: string
        pin:
          description: Pin to enter in the conference
          type: string
        preprocess_subroutine:
          description: Name of the subroutine to execute in asterisk before entering
            the conference
          type: string
        quiet_join_leave:
          default: false
          description: Play 'beep' notification when join/leave a conference
          type: boolean
        record:
          default: false
          description: Record the conference
          type: boolean
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/ConferenceRelationExtensions'
    - $ref: '#/definitions/ConferenceRelationIncalls'
    title: Conference
  ConferenceItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Conference'
        type: array
      total:
        type: integer
    required:
    - total
    title: ConferenceItems
  ConferenceRelationBase:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        description: name to identify the conference
        type: string
  ConferenceRelationExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/ExtensionRelationBase'
        readOnly: true
        type: array
  ConferenceRelationIncall:
    allOf:
    - $ref: '#/definitions/IncallRelationBase'
    - $ref: '#/definitions/IncallRelationExtensions'
  ConferenceRelationIncalls:
    properties:
      incalls:
        items:
          $ref: '#/definitions/ConferenceRelationIncall'
        readOnly: true
        type: array
  Context:
    allOf:
    - $ref: '#/definitions/ContextRelationBase'
    - properties:
        conference_room_ranges:
          items:
            $ref: '#/definitions/ContextRange'
          type: array
        description:
          description: Additional information about the context
          type: string
        enabled:
          default: true
          type: boolean
        group_ranges:
          items:
            $ref: '#/definitions/ContextRange'
          type: array
        incall_ranges:
          items:
            $ref: '#/definitions/ContextIncallRange'
          type: array
        label:
          description: The label of the context
          type: string
        queue_ranges:
          items:
            $ref: '#/definitions/ContextRange'
          type: array
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        type:
          default: internal
          enum:
          - internal
          - incall
          - outcall
          - services
          - others
          type: string
        user_ranges:
          items:
            $ref: '#/definitions/ContextRange'
          type: array
    - $ref: '#/definitions/ContextRelationContexts'
    - required:
      - label
    title: Context
  ContextId:
    properties:
      id:
        type: integer
    title: ContextId
  ContextIncallRange:
    allOf:
    - $ref: '#/definitions/ContextRange'
    - properties:
        did_length:
          default: 0
          description: The length of the did
          type: integer
    title: ContextIncallRange
  ContextItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Context'
        type: array
      total:
        type: integer
    required:
    - total
    title: ContextItems
  ContextRange:
    properties:
      end:
        default: <end>
        type: string
      start:
        default: <start>
        type: string
    required:
    - start
    title: ContextRange
  ContextRangeItems:
    example:
      items:
      - end: 1006
        start: 1006
      - end: 1014
        start: 1010
      - end: 1999
        start: 1025
      total: 3
    properties:
      items:
        items:
          $ref: '#/definitions/ContextRange'
        type: array
      total:
        type: integer
    required:
    - total
    title: ContextRangeItems
  ContextRelation:
    properties:
      id:
        description: The ID of the context
        type: integer
    required:
    - id
  ContextRelationBase:
    properties:
      id:
        description: The id of the context
        readOnly: true
        type: integer
      name:
        description: The name used by Asterisk
        readOnly: true
        type: string
      uuid:
        description: The UUID of the context
        readOnly: true
        type: string
  ContextRelationContext:
    $ref: '#/definitions/ContextRelationBase'
  ContextRelationContexts:
    properties:
      contexts:
        items:
          $ref: '#/definitions/ContextRelationContext'
        readOnly: true
        type: array
  ContextsId:
    properties:
      contexts:
        items:
          $ref: '#/definitions/ContextId'
        type: array
    title: ContextsId
  DHCP:
    properties:
      active:
        description: Is the DHCP service enabled?
        type: boolean
      network_interfaces:
        description: A comma separated list of network interface that the DHCP server
          listens on
        items:
          type: string
        type: array
      pool_end:
        description: The last IP address that can be allocated by DHCP
        type: string
      pool_start:
        description: The first IP address that can be allocated by DHCP
        type: string
    title: DHCP
    type: object
  DestinationApplication:
    properties:
      type:
        description: MUST be 'application'
        type: string
    required:
    - type
    title: DestinationApplication
  DestinationApplicationApplication:
    properties:
      callback_disa:
        $ref: '#/definitions/DestinationApplicationCallbackDISA'
      custom:
        $ref: '#/definitions/DestinationApplicationCustom'
      directory:
        $ref: '#/definitions/DestinationApplicationDirectory'
      disa:
        $ref: '#/definitions/DestinationApplicationDISA'
      fax_to_mail:
        $ref: '#/definitions/DestinationApplicationFaxToMail'
      voicemail:
        $ref: '#/definitions/DestinationApplicationVoicemail'
    title: DestinationApplicationApplication
  DestinationApplicationCallbackDISA:
    allOf:
    - $ref: '#/definitions/DestinationApplication'
    - properties:
        application:
          description: MUST be 'callback_disa'
          type: string
        context:
          description: The context of the application
          type: integer
        pin:
          description: the pin of the application
          type: string
      required:
      - application
      - context
    title: DestinationApplicationCallbackDISA
  DestinationApplicationCustom:
    allOf:
    - $ref: '#/definitions/DestinationApplication'
    - properties:
        application:
          description: MUST be 'custom'
          type: string
        application_uuid:
          description: The UUID of the application.
          type: string
    required:
    - application
    - application_uuid
    title: DestinationApplicationCustom
  DestinationApplicationDISA:
    allOf:
    - $ref: '#/definitions/DestinationApplication'
    - properties:
        application:
          description: MUST be 'disa'
          type: string
        context:
          description: The context of the application
          type: integer
        pin:
          description: the pin of the application
          type: string
      required:
      - application
      - context
    title: DestinationApplicationDISA
  DestinationApplicationDirectory:
    allOf:
    - $ref: '#/definitions/DestinationApplication'
    - properties:
        application:
          description: MUST be 'directory'
          type: string
        context:
          description: The context of the application
          type: integer
      required:
      - application
      - context
    title: DestinationApplicationDirectory
  DestinationApplicationFaxToMail:
    allOf:
    - $ref: '#/definitions/DestinationApplication'
    - properties:
        application:
          description: MUST be 'fax_to_mail'
          type: string
        email:
          description: The email of the application
          type: string
    required:
    - application
    - email
    title: DestinationApplicationFaxToMail
  DestinationApplicationVoicemail:
    allOf:
    - $ref: '#/definitions/DestinationApplication'
    - properties:
        application:
          description: MUST be 'voicemail'
          type: string
        context:
          description: The context of the application
          type: integer
      required:
      - application
      - context
    title: DestinationApplicationVoicemail
  DestinationConference:
    properties:
      conference_id:
        description: The id of the conference
        type: integer
      type:
        description: MUST be 'conference'
        type: string
    required:
    - type
    - conference_id
    title: DestinationConference
  DestinationCustom:
    properties:
      command:
        description: The command to execute
        type: string
      type:
        description: MUST be 'custom'
        type: string
    required:
    - type
    - command
    title: DestinationCustom
  DestinationExtension:
    properties:
      context:
        description: Context of the extension
        type: string
      exten:
        type: string
      type:
        description: MUST be 'extension'
        type: string
    required:
    - type
    - exten
    - context
    title: DestinationExtension
  DestinationGroup:
    properties:
      group_id:
        description: The id of the group
        type: integer
      ring_time:
        format: float
        type: number
      type:
        description: MUST be 'group'
        type: string
    required:
    - type
    - group_id
    title: DestinationGroup
  DestinationHangup:
    properties:
      type:
        description: MUST be 'hangup'
        type: string
    required:
    - type
    title: DestinationHangup
  DestinationHangupBusy:
    allOf:
    - $ref: '#/definitions/DestinationHangup'
    - properties:
        cause:
          description: MUST be 'busy'
          type: string
        timeout:
          description: The timeout of the hangup
          type: integer
    required:
    - cause
    title: DestinationHangupBusy
  DestinationHangupCause:
    properties:
      busy:
        $ref: '#/definitions/DestinationHangupBusy'
      congestion:
        $ref: '#/definitions/DestinationHangupCongestion'
      normal:
        $ref: '#/definitions/DestinationHangupNormal'
    title: DestinationHangupCause
  DestinationHangupCongestion:
    allOf:
    - $ref: '#/definitions/DestinationHangup'
    - properties:
        cause:
          description: MUST be 'congestion'
          type: string
        timeout:
          description: The timeout of the hangup
          type: integer
    required:
    - cause
    title: DestinationHangupCongestion
  DestinationHangupNormal:
    allOf:
    - $ref: '#/definitions/DestinationHangup'
    - properties:
        cause:
          description: MUST be 'normal'
          type: string
    required:
    - cause
    title: DestinationHangupNormal
  DestinationIVR:
    properties:
      ivr_id:
        description: The id of the IVR
        type: integer
      type:
        description: MUST be 'ivr'
        type: string
    required:
    - type
    - ivr_id
    title: DestinationIVR
  DestinationNone:
    properties:
      type:
        description: MUST be 'none'
        type: string
    required:
    - type
    title: DestinationNone
  DestinationOutcall:
    properties:
      exten:
        type: string
      outcall_id:
        description: The id of the outcall
        type: integer
      type:
        description: MUST be 'outcall'
        type: string
    required:
    - type
    - exten
    - outcall_id
    title: DestinationOutcall
  DestinationQueue:
    properties:
      queue_id:
        description: The id of the queue
        type: integer
      ring_time:
        format: float
        type: number
      skill_rule_id:
        description: The id of the skill rule
        type: integer
      skill_rule_variables:
        description: key-value where key represents the variable of the skill rule
          and value represents a value
        type: object
      type:
        description: MUST be 'queue'
        type: string
    required:
    - type
    - queue_id
    title: DestinationQueue
  DestinationSound:
    properties:
      filename:
        description: The filename of the sound. The file MUST be imported by to webi
          in the playback directory. The extension of file SHOULD be not present.
        type: string
      no_answer:
        description: Play this sound without answering the call
        type: boolean
      skip:
        description: Do not play this sound if the call is not answered
        type: boolean
      type:
        description: MUST be 'sound'
        type: string
    required:
    - type
    - filename
    title: DestinationSound
  DestinationSwitchboard:
    properties:
      switchboard_uuid:
        description: The UUID of the switchboard.
        type: string
      type:
        description: MUST be 'switchboard'
        type: string
    required:
    - type
    - switchboard_uuid
    title: DestinationSwitchboard
  DestinationType:
    properties:
      application:
        $ref: '#/definitions/DestinationApplicationApplication'
      conference:
        $ref: '#/definitions/DestinationConference'
      custom:
        $ref: '#/definitions/DestinationCustom'
      extension:
        $ref: '#/definitions/DestinationExtension'
      group:
        $ref: '#/definitions/DestinationGroup'
      hangup:
        $ref: '#/definitions/DestinationHangupCause'
      ivr:
        $ref: '#/definitions/DestinationIVR'
      none:
        $ref: '#/definitions/DestinationNone'
      outcall:
        $ref: '#/definitions/DestinationOutcall'
      queue:
        $ref: '#/definitions/DestinationQueue'
      sound:
        $ref: '#/definitions/DestinationSound'
      switchboard:
        $ref: '#/definitions/DestinationSwitchboard'
      user:
        $ref: '#/definitions/DestinationUser'
      voicemail:
        $ref: '#/definitions/DestinationVoicemail'
    title: DestinationType
  DestinationUser:
    properties:
      moh_uuid:
        description: The UUID of the music on hold to use instead of a ringback tone.
        type: string
      ring_time:
        format: float
        type: number
      type:
        description: MUST be 'user'
        type: string
      user_id:
        description: The id of the user
        type: integer
    required:
    - type
    - user_id
    title: DestinationUser
  DestinationVoicemail:
    properties:
      greeting:
        description: Play the specified greeting
        enum:
        - busy
        - unavailable
        type: string
      skip_instructions:
        description: Skip the playback of instructions for leaving a message
        type: boolean
      type:
        description: MUST be 'voicemail'
        type: string
      voicemail_id:
        description: The id of the voicemail
        type: integer
    required:
    - type
    - voicemail_id
    title: DestinationVoicemail
  Device:
    properties:
      description:
        type: string
      id:
        description: Device ID
        readOnly: true
        type: string
      ip:
        description: IP address (10.0.0.0)
        type: string
      is_new:
        description: Indicates if the device is a new device, ie in the master tenant
        readOnly: true
        type: boolean
      mac:
        description: MAC address (aa:bb:cc:dd:ee:ff)
        type: string
      model:
        description: Device model
        type: string
      options:
        $ref: '#/definitions/DeviceOptions'
      plugin:
        description: Provisioning plugin to be used by device
        type: string
      sn:
        description: Serial number
        type: string
      status:
        default: not_configured
        description: 'Device status. autoprov: Device can be provisionned using a
          provisioning code, configured: Device is configured and ready to be used,
          not_configured : Device has not been completely configured'
        enum:
        - autoprov
        - configured
        - not_configured
        readOnly: true
        type: string
      template_id:
        description: ID of the device template. All device using a device template
          will have a certain number of common parameters preconfigured for the device
        type: string
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
      vendor:
        description: Vendor name
        type: string
      version:
        description: Firmware version
        type: string
    title: Device
  DeviceItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Device'
        type: array
      total:
        type: integer
    required:
    - total
    title: DeviceItems
  DeviceOptions:
    description: List of standard keys
    properties:
      switchboard:
        description: Indicate if this device is a switchboard
        type: boolean
    title: DeviceOptions
  EmailConfig:
    properties:
      address_rewriting_rules:
        description: Rules for local address to external address rewriting
        items:
          $ref: '#/definitions/RewritingRule'
        type: array
      domain_name:
        description: The domain name of the current mailing server, i.e. `example.com`
        type: string
      fallback_smtp_host:
        description: 'Fallback relay server hostname or address. It is possible to
          specify the port, for example

          `domain.com:587`

          '
        type: string
      from:
        description: 'The e-mail address or domain name to use in the `From` header
          for local services

          '
        type: string
      smtp_host:
        description: 'E-mail relay server hostname or address. It is possible to specify
          the port, for example

          `domain.com:587`

          '
        type: string
    title: E-mail configuration
  EndpointCustom:
    allOf:
    - $ref: '#/definitions/EndpointCustomRelationBase'
    - properties:
        enabled:
          default: true
          description: Endpoint can be used when it is enabled
          type: boolean
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/EndpointRelationTrunk'
    - $ref: '#/definitions/EndpointRelationLine'
    - required:
      - interface
    title: Custom Endpoint
  EndpointCustomItems:
    properties:
      items:
        items:
          $ref: '#/definitions/EndpointCustom'
        type: array
      total:
        type: integer
    title: Custom Endpoints
  EndpointCustomRelationBase:
    properties:
      id:
        description: Custom Endpoint ID
        readOnly: true
        type: integer
      interface:
        description: Asterisk interface to use. (e.g. 'dahdi/i1')
        type: string
  EndpointIAX:
    allOf:
    - $ref: '#/definitions/EndpointIAXRelationBase'
    - properties:
        host:
          default: dynamic
          description: Hosts that are allowed to use this IAX account
          type: string
        options:
          default: []
          description: "Advanced configuration: options. Options are appended at the\
            \ end of a IAX account in the file 'iax.conf' used by asterisk. Please\
            \ consult the asterisk documentation for further details on available\
            \ parameters. Because of database limitations, the following options can\
            \ only be configured once:\n\n* accountcode\n* adsi\n* allow\n* amaflags\n\
            * auth\n* callerid\n* category\n* cid_number\n* codecpriority\n* commented\n\
            * context\n* dbsecret\n* defaultip\n* deny\n* encryption\n* forceencryption\n\
            * forcejitterbuffer\n* fullname\n* immediate\n* inkeys\n* jitterbuffer\n\
            * keyrotate\n* language\n* mailbox\n* mask\n* maxauthreq\n* mohinterpret\n\
            * mohsuggest\n* outkey\n* parkinglot\n* peercontext\n* permit\n* port\n\
            * protocol\n* qualify\n* qualifyfreqnoto\n* qualifyfreqok\n* qualifysmoothing\n\
            * regexten\n* requirecalltoken\n* secret\n* sendani\n* setvar\n* sourceaddress\n\
            * timezone\n* transfer\n* trunk\n* username\n\nAny other options may be\
            \ repeated as many times as needed. Options must have the following form:\n\
            ```\n{\n  \"options\": [\n     [\"name1\", \"value1\"],\n     [\"name2\"\
            , \"value2\"]\n  ]\n}\n```\n\nThe resulting configuration in iax.conf\
            \ will have the following form:\n```\n[iaxusername]\ncontext=default\n\
            secret=iaxsecret\nname1=value1\nname2=value2\n```\n"
          items:
            $ref: '#/definitions/KeyValueOption'
          type: array
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        type:
          default: friend
          description: Type of IAX account
          enum:
          - friend
          - peer
          - user
          type: string
    - $ref: '#/definitions/EndpointRelationTrunk'
    - $ref: '#/definitions/EndpointRelationLine'
    title: IAX Endpoint
  EndpointIAXItems:
    properties:
      items:
        items:
          $ref: '#/definitions/EndpointIAX'
        type: array
      total:
        type: integer
    title: IAX Endpoints
  EndpointIAXRelationBase:
    properties:
      id:
        description: IAX Endpoint ID
        readOnly: true
        type: integer
      name:
        default: autogenerated
        description: IAX name
        type: string
  EndpointRelationLine:
    properties:
      line:
        items:
          $ref: '#/definitions/LineRelationBase'
        readOnly: true
        type: array
  EndpointRelationTrunk:
    properties:
      trunk:
        $ref: '#/definitions/TrunkRelationBase'
        readOnly: true
  EndpointSIP:
    properties:
      aor_section_options:
        description: A list of PJSIP AOR section options for this endpoint
        items:
          $ref: '#/definitions/SIPAORSectionOptions'
        type: array
      asterisk_id:
        description: The ID of the Asterisk onto which this configuration applies.
        type: string
      auth_section_options:
        description: A list of PJSIP auth section options for this endpoint
        items:
          $ref: '#/definitions/SIPAuthSectionOptions'
        type: array
      endpoint_section_options:
        description: A list of PJSIP endpoint section options for this endpoint
        items:
          $ref: '#/definitions/SIPEndpointSectionOptions'
        type: array
      identify_section_options:
        description: A list of PJSIP identify section options for this endpoint
        items:
          $ref: '#/definitions/SIPIdentifySectionOptions'
        type: array
      label:
        description: The human readable name for this configuration
        type: string
      name:
        description: The name of the PJSIP entity, auto-generated if missing
        type: string
      outbound_auth_section_options:
        description: A list of PJSIP auth section options for this endpoint
        items:
          $ref: '#/definitions/SIPAuthSectionOptions'
        type: array
      registration_outbound_auth_section_options:
        description: A list of PJSIP auth section options for this endpoint
        items:
          $ref: '#/definitions/SIPAuthSectionOptions'
        type: array
      registration_section_options:
        description: A list of PJSIP registration section options for this endpoint
        items:
          $ref: '#/definitions/SIPRegistrationSectionOptions'
        type: array
      templates:
        description: 'A list of templates this configuration will inherit from.


          The inheritance only applies to option sections. Not to the name, label
          and other fields.

          For a given list of templates [A, B, C] A will be applied over B. C will
          be applied over (A,B) etc.

          '
        items:
          $ref: '#/definitions/EndpointSIPTemplatesRelation'
        type: array
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
      transport:
        $ref: '#/definitions/SIPTransportRelation'
        description: The transport used by this endpoint
      uuid:
        description: The UUID of this resource
        readOnly: true
        type: string
    title: SIP Endpoint
  EndpointSIPItems:
    properties:
      items:
        items:
          $ref: '#/definitions/EndpointSIP'
        type: array
      total:
        type: integer
    title: SIP Endpoints
  EndpointSIPRelation:
    properties:
      uuid:
        description: The UUID of this resource
        type: string
    required:
    - uuid
  EndpointSIPTemplatesRelation:
    properties:
      label:
        description: The label of this resource
        readOnly: true
        type: string
      uuid:
        description: The UUID of this resource
        type: string
    required:
    - uuid
  EndpointSccp:
    allOf:
    - $ref: '#/definitions/EndpointSccpRelationBase'
    - properties:
        options:
          description: "Advanced configuration options. Options are appended at the\
            \ end of a \nSCCP account in the file 'sccp.conf' used by asterisk.\n\
            Please consult the asterisk documentation for further details on available\n\
            parameters. Because of database limitations, only the following options\
            \ are allowed:\n\n * cid_name\n * cid_num\n * allow\n * disallow\n \n\
            Options must have the following the form:\n\n```\n{\n  \"options\": [\n\
            \    [\"name1\", \"value1\"],\n    [\"name2\", \"value2\"]\n  ]\n}\n```\n\
            \nThe resulting configuration in sip.conf will have the following form:\n\
            \n```\n[1000]\nname1=value1\nname2=value2\n```\n"
          items:
            $ref: '#/definitions/KeyValueOption'
          type: array
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/EndpointRelationTrunk'
    - $ref: '#/definitions/EndpointRelationLine'
    title: SCCP Endpoint
  EndpointSccpItems:
    properties:
      items:
        items:
          $ref: '#/definitions/EndpointSccp'
        type: array
      total:
        type: integer
    title: SCCP Endpoints
  EndpointSccpRelationBase:
    properties:
      id:
        description: SCCP Endpoint ID
        readOnly: true
        type: integer
  EndpointSipRelationBase:
    properties:
      auth_section_options:
        description: A list of PJSIP auth section options for this endpoint. Only
          `username` is supported
        items:
          $ref: '#/definitions/SIPAuthSectionOptions'
        type: array
      label:
        description: The human readable name for this configuration
        type: string
      name:
        description: The name of the PJSIP entity, auto-generated if missing
        type: string
      uuid:
        description: The UUID of this resource
        readOnly: true
        type: string
  Error:
    items:
      type: string
    type: array
  Extension:
    allOf:
    - $ref: '#/definitions/ExtensionRelationBase'
    - properties:
        commented:
          description: If True the extension is disabled. Deprecated, use enabled
            instead
          type: boolean
        enabled:
          description: If False the extension is disabled.
          type: boolean
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/ExtensionRelationConference'
    - $ref: '#/definitions/ExtensionRelationGroup'
    - $ref: '#/definitions/ExtensionRelationIncall'
    - $ref: '#/definitions/ExtensionRelationLines'
    - $ref: '#/definitions/ExtensionRelationOutcall'
    - $ref: '#/definitions/ExtensionRelationParkingLot'
    - $ref: '#/definitions/ExtensionRelationQueue'
    - required:
      - context
      - exten
    title: Extension
  ExtensionFeature:
    properties:
      context:
        readOnly: true
        type: string
      enabled:
        description: If False the extension feature is disabled
        type: boolean
      exten:
        type: string
      feature:
        description: The feature of the extension
        readOnly: true
        type: string
      uuid:
        description: Extension UUID
        readOnly: true
        type: string
    required:
    - exten
    title: ExtensionFeature
  ExtensionFeatureItems:
    properties:
      items:
        items:
          $ref: '#/definitions/ExtensionFeature'
        type: array
      total:
        type: integer
    required:
    - total
    title: ExtensionFeatureItems
  ExtensionItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Extension'
        type: array
      total:
        type: integer
    required:
    - total
    title: ExtensionItems
  ExtensionRelationBase:
    properties:
      context:
        type: string
      exten:
        type: string
      id:
        description: Extension ID
        readOnly: true
        type: integer
  ExtensionRelationConference:
    properties:
      conference:
        $ref: '#/definitions/ConferenceRelationBase'
        readOnly: true
  ExtensionRelationGroup:
    properties:
      group:
        $ref: '#/definitions/GroupRelationBase'
        readOnly: true
  ExtensionRelationIncall:
    properties:
      incall:
        $ref: '#/definitions/IncallRelationBase'
        readOnly: true
  ExtensionRelationLines:
    properties:
      lines:
        items:
          $ref: '#/definitions/LineRelationBase'
        readOnly: true
        type: array
  ExtensionRelationOutcall:
    properties:
      outcall:
        $ref: '#/definitions/OutcallRelationBase'
        readOnly: true
  ExtensionRelationParkingLot:
    properties:
      parking_lot:
        $ref: '#/definitions/ParkingLotRelationBase'
        readOnly: true
  ExtensionRelationQueue:
    properties:
      queue:
        $ref: '#/definitions/QueueRelationBase'
        readOnly: true
  ExternalApp:
    properties:
      configuration:
        description: Arbitrary settings needed by an external app
        type: object
      label:
        description: The label of the external app
        type: string
      name:
        description: The name to identify the external app
        readOnly: true
        type: string
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
    title: ExternalApp
  ExternalAppItems:
    properties:
      items:
        items:
          $ref: '#/definitions/ExternalApp'
        type: array
      total:
        type: integer
    required:
    - total
    title: ExternalAppItems
  FeaturesConfiguration:
    description: 'This configuration will be in the file ''features.conf'' used by
      asterisk.

      Please consult the asterisk documentation for further details on available parameters.'
    properties:
      options:
        description: "These options must be unique and unordered. Otherwise, use `ordered_options`.\
          \ Option must have the following form:\n\n```\n{\n  \"options\": {\n   \
          \ \"name1\": \"value1\",\n    ...\n  }\n}\n```\n\n"
        type: object
    title: FeaturesConfiguration
  FuncKey:
    description: Further documentation at https://accentvoice.io/uc-doc/api_sdk/rest_api/confd/func_keys
    properties:
      blf:
        type: boolean
      destination:
        type: object
      label:
        type: string
    title: FuncKey
  FuncKeyDestination:
    properties:
      parameters:
        items:
          $ref: '#/definitions/FuncKeyDestinationParameter'
        type: array
      type:
        type: string
    title: FuncKeyDestination
  FuncKeyDestinationItems:
    description: Description of func key destinations and their parameters
    items:
      $ref: '#/definitions/FuncKeyDestination'
    title: FuncKeyDestinationItems
    type: array
  FuncKeyDestinationParameter:
    properties:
      collection:
        description: URL towards a collection of entities representing possible values
          as a destination
        type: string
      name:
        description: Parameter name
        type: string
      values:
        description: Array of values to choose from for this parameter
        items:
          type: string
        type: array
    title: FuncKeyDestinationParameter
  FuncKeyTemplate:
    description: Further documentation at https://accentvoice.io/uc-doc/administration/users/csv_import
    properties:
      id:
        description: The ID of the funckey template
        readOnly: true
        type: integer
      keys:
        type: object
      name:
        type: string
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
    title: FuncKeyTemplate
  Group:
    allOf:
    - $ref: '#/definitions/GroupRelationBase'
    - properties:
        caller_id_mode:
          description: How the caller_id_name will be treated
          enum:
          - prepend
          - overwrite
          - append
          type: string
        caller_id_name:
          description: Name to display
          type: string
        enabled:
          default: true
          description: Enable/Disable the group
          type: boolean
        mark_answered_elsewhere:
          default: false
          description: Mark all calls as "answered elsewhere" when cancelled
          type: boolean
        music_on_hold:
          description: Name of the MOH category to use for music on hold
          type: string
        preprocess_subroutine:
          type: string
        retry_delay:
          default: 5
          description: Number of seconds before the member of group will ring again
          type: integer
        ring_in_use:
          default: true
          description: Notify the member even if it already in communication
          type: boolean
        ring_strategy:
          default: all
          enum:
          - all
          - random
          - least_recent
          - linear
          - fewest_calls
          - memorized_round_robin
          - weight_random
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        timeout:
          description: Number of seconds the group will ring before falling back
          type: integer
        user_timeout:
          default: 15
          description: Number of seconds the member of group will ring
          type: integer
    - $ref: '#/definitions/GroupRelationExtensions'
    - $ref: '#/definitions/GroupRelationFallbacks'
    - $ref: '#/definitions/GroupRelationIncalls'
    - $ref: '#/definitions/GroupRelationMembers'
    - $ref: '#/definitions/GroupRelationSchedules'
    - $ref: '#/definitions/GroupRelationCallPermissions'
    - required:
      - name
    title: Group
  GroupFallbacks:
    example:
      noanswer_destination:
        type: user
        user_id: 1
    properties:
      noanswer_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are no answer
  GroupID:
    properties:
      id:
        type: integer
  GroupItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Group'
        type: array
      total:
        type: integer
    required:
    - total
    title: GroupItems
  GroupMemberExtension:
    properties:
      context:
        type: string
      exten:
        type: string
      priority:
        description: priority of extension in the group. Only used for linear ring
          strategy
        type: integer
  GroupMemberExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/GroupMemberExtension'
        type: array
    required:
    - extensions
  GroupMemberUser:
    properties:
      priority:
        description: priority of user in the group. Only used for linear ring strategy
        type: integer
      uuid:
        type: string
    required:
    - uuid
  GroupMemberUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/GroupMemberUser'
        type: array
    required:
    - users
  GroupRelationBase:
    properties:
      id:
        description: The id of the group
        readOnly: true
        type: integer
      name:
        description: The name of the group
        readOnly: true
        type: string
      uuid:
        description: Group UUID. This ID is globally unique across multiple Accent instances
        readOnly: true
        type: string
  GroupRelationCallPermissions:
    properties:
      call_permissions:
        items:
          $ref: '#/definitions/CallPermissionRelationBase'
        readOnly: true
        type: array
  GroupRelationExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/ExtensionRelationBase'
        readOnly: true
        type: array
  GroupRelationFallbacks:
    properties:
      fallbacks:
        $ref: '#/definitions/GroupFallbacks'
        readOnly: true
  GroupRelationIncall:
    allOf:
    - $ref: '#/definitions/IncallRelationBase'
    - $ref: '#/definitions/IncallRelationExtensions'
  GroupRelationIncalls:
    properties:
      incalls:
        items:
          $ref: '#/definitions/GroupRelationIncall'
        readOnly: true
        type: array
  GroupRelationMemberUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/UserRelationBase'
        readOnly: true
        type: array
  GroupRelationMembers:
    properties:
      members:
        $ref: '#/definitions/GroupRelationMemberUsers'
        readOnly: true
  GroupRelationSchedules:
    properties:
      schedules:
        items:
          $ref: '#/definitions/ScheduleRelationBase'
        readOnly: true
        type: array
  GroupsID:
    properties:
      groups:
        items:
          $ref: '#/definitions/GroupID'
        type: array
  HA:
    properties:
      node_type:
        description: The role of this server in a HA cluster.
        enum:
        - disabled
        - master
        - slave
        type: string
      remote_address:
        description: The remote IP address of the other machine in the HA cluster.
          Must be an IP address, a hostname is invalid.
        type: string
    required:
    - node_type
    title: HA
    type: object
  HEPConfiguration:
    description: 'This configuration will be in the file ''hep.conf'' used by asterisk.

      Please consult the asterisk documentation for further details on available parameters.'
    example:
      options:
        enabled: 'yes'
    properties:
      options:
        description: "These options must be unique and unordered. Otherwise, use `ordered_options`.\
          \ Option must have the following form:\n\n```\n{\n  \"options\": {\n   \
          \ \"name1\": \"value1\",\n    ...\n  }\n}\n```\n\n"
        type: object
    title: HEPConfiguration
  HTTPIngress:
    allOf:
    - $ref: '#/definitions/HTTPIngressRequest'
    - properties:
        uuid:
          readOnly: true
          type: string
    type: object
  HTTPIngressItems:
    properties:
      items:
        items:
          $ref: '#/definitions/HTTPIngress'
        type: array
    type: object
  HTTPIngressRequest:
    properties:
      uri:
        description: The public URI to contact this stack HTTP API
        type: string
    required:
    - uri
    type: object
  IAXCallNumberLimits:
    properties:
      ip_address:
        description: IPv4 address of the destination
        type: string
      limit:
        description: Maximum call for the ip_address destination
        type: string
      netmask:
        description: Netmask of the IP address (e.g. 255.255.255.255)
        type: string
    required:
    - ip_address
    - netmask
    - limit
    title: IAXCallNumberLimits
  IAXCallNumberLimitss:
    properties:
      items:
        description: 'IAX callnumberlimits configuration. This configuration will
          be in the file ''iax.conf'' used by asterisk.

          Please consult the asterisk documentation for further details on available
          parameters.'
        items:
          $ref: '#/definitions/IAXCallNumberLimits'
        type: array
    title: IAXCallNumberLimitss
  IAXGeneral:
    description: 'IAX general configuration. This configuration will be in the file
      ''iax.conf'' used by asterisk.

      Please consult the asterisk documentation for further details on available parameters.'
    properties:
      options:
        description: "General IAX options. These options must be unique and unordered.\
          \ Otherwise, use `ordered_options`. Option must have the following form:\n\
          \n```\n{\n  \"options\": {\n    \"name1\": \"value1\",\n    ...\n  }\n}\n\
          ```\n\n"
        type: object
      ordered_options:
        description: "Any options may be repeated as many times and ordered as needed.\
          \ Ordered options must have the following form:\n\n```\n{\n  \"ordered_options\"\
          : [\n    [\"name1\", \"value1\"],\n    [\"name2\", \"value2\"]\n  ]\n}\n\
          ```\n\nThe resulting configuration in iax.conf will have the following form:\n\
          \n```\n[general]\nname1=value1\nname2=value2\n```\n"
        items:
          $ref: '#/definitions/KeyValueOption'
        type: array
    title: IAXGeneral
  Incall:
    allOf:
    - $ref: '#/definitions/IncallRelationBase'
    - properties:
        caller_id_mode:
          description: How the caller_id_name will be treated
          enum:
          - prepend
          - overwrite
          - append
          type: string
        caller_id_name:
          description: Name to display when calling
          type: string
        description:
          description: Additional information about the incoming call
          type: string
        destination:
          $ref: '#/definitions/DestinationType'
          description: The destination where the incoming call will be redirected
        greeting_sound:
          description: The name of the sound file to be played before redirecting
            the caller to the destination
          type: string
        preprocess_subroutine:
          description: Name of the subroutine to execute in asterisk before receiving
            a call
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/IncallRelationExtensions'
    - $ref: '#/definitions/IncallRelationSchedules'
    - required:
      - destination
    example:
      caller_id_mode: prepend
      caller_id_name: incall_
      description: My incall
      destination:
        ring_time: 10.5
        type: user
        user_id: 2
      id: 1
      preprocess_subroutine: subroutine
    title: Incall
  IncallItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Incall'
        type: array
      total:
        type: integer
    required:
    - total
    title: IncallItems
  IncallRelationBase:
    properties:
      id:
        description: The id of the incoming call
        readOnly: true
        type: integer
    title: IncallRelation
  IncallRelationExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/ExtensionRelationBase'
        readOnly: true
        type: array
  IncallRelationSchedules:
    properties:
      schedules:
        items:
          $ref: '#/definitions/ScheduleRelationBase'
        readOnly: true
        type: array
  Info:
    properties:
      uuid:
        description: UUID of the Accent server
        type: string
      accent_version:
        description: Version of the Accent server
        type: string
    title: Info
  Ivr:
    allOf:
    - properties:
        abort_destination:
          $ref: '#/definitions/DestinationType'
          description: The destination to redirect the caller to when the maximum
            number of tries is reached. If not set, the call will be hanged up after
            playing the abort sound (if set)
        abort_sound:
          description: The sound played when the caller reach the maximum number of
            tries. Not used if an abort destination is set
          type: string
        choices:
          description: The menu's choices
          items:
            $ref: '#/definitions/IvrChoice'
          type: array
        description:
          description: Additional information about the IVR
          type: string
        greeting_sound:
          description: The sound played to greet the caller
          type: string
        id:
          description: The id of the IVR
          readOnly: true
          type: integer
        invalid_destination:
          $ref: '#/definitions/DestinationType'
          description: The destination to redirect the caller to when he choose an
            invalid option. If not set, the menu will be replayed
        invalid_sound:
          description: The sound played when the caller choose an invalid option.
            Not used if an invalid destination is set
          type: string
        max_tries:
          default: 3
          description: The maximum number of tries before aborting the call. Both
            a timeout and an invalid choice counts toward the number of tries
          type: integer
        menu_sound:
          description: The sound played to prompt the caller for input
          type: string
        name:
          description: The name of the IVR
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        timeout:
          default: 5
          description: Number of seconds to wait after the menu sound is played before
            either replaying the menu, redirecting the call to the timeout destination
            (if set) or aborting the call (if the maximum number of tries has been
            reached)
          type: integer
        timeout_destination:
          $ref: '#/definitions/DestinationType'
          description: The destination to redirect the caller to on timeout. If not
            set, the menu will be replayed
    - $ref: '#/definitions/IvrRelationIncalls'
    - required:
      - name
      - menu_sound
    example:
      abort_destination:
        group_id: 1
        type: group
      choices:
      - destination:
          type: user
          user_id: 2
        exten: '1'
      - destination:
          group_id: 1
          type: group
        exten: '0'
      description: My IVR
      greeting_sound: /var/lib/accent/sounds/playback/ivr1-greeting
      menu_sound: /var/lib/accent/sounds/playback/ivr1-menu
      name: ivr1
    title: IVR
  IvrChoice:
    properties:
      destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when this choice is
          selected
      exten:
        description: The extension the caller has to dial to select this choice. Can
          be an extension pattern
        type: string
    required:
    - destination
    - exten
    title: IvrChoice
  IvrItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Ivr'
        type: array
      total:
        type: integer
    required:
    - total
    title: IvrItems
  IvrRelationIncall:
    allOf:
    - $ref: '#/definitions/IncallRelationBase'
    - $ref: '#/definitions/IncallRelationExtensions'
  IvrRelationIncalls:
    properties:
      incalls:
        items:
          $ref: '#/definitions/IvrRelationIncall'
        readOnly: true
        type: array
  KeyValueOption:
    description: "Options must have the following form:\n```\n{\n  \"options\": [\n\
      \      [\"option\", \"value\"],\n  ]\n}\n```\n"
    example:
    - option
    - value
    items:
      type: string
    maxItems: 2
    minItems: 2
    title: Key Value
    type: array
  Line:
    properties:
      caller_id_name:
        description: Name to display when calling
        type: string
      caller_id_num:
        description: Number to display when calling
        type: string
      context:
        description: The name of an internal context
        type: string
      id:
        description: Line ID
        readOnly: true
        type: integer
      position:
        description: Line's position on the device
        type: integer
      provisioning_code:
        description: Code used to provision a device
        type: string
      registrar:
        description: Name of the template line used by the device
        type: string
    required:
    - context
    title: Line
  LineCreate:
    allOf:
    - $ref: '#/definitions/Line'
    - $ref: '#/definitions/LineExtensions'
    - $ref: '#/definitions/LineEndpointSIP'
    - $ref: '#/definitions/LineEndpointSCCP'
    - $ref: '#/definitions/LineEndpointCustom'
    title: LineCreate
  LineDevice:
    properties:
      device_id:
        description: Device's ID
        readOnly: true
        type: string
      line_id:
        description: Line's ID
        readOnly: true
        type: integer
    title: LineDevice
  LineDeviceItems:
    properties:
      items:
        items:
          $ref: '#/definitions/LineDevice'
        type: array
      total:
        type: integer
    required:
    - total
    title: LineDeviceItems
  LineEndpointCustom:
    properties:
      endpoint_custom:
        $ref: '#/definitions/EndpointCustom'
    title: LineEndpointCustom
  LineEndpointSCCP:
    properties:
      endpoint_sccp:
        $ref: '#/definitions/EndpointSccp'
    title: LineEndpointSCCP
  LineEndpointSIP:
    properties:
      endpoint_sip:
        $ref: '#/definitions/EndpointSIP'
    title: LineEndpointSIP
  LineExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/ExtensionRelationBase'
        type: array
    title: LineExtensions
  LineID:
    properties:
      id:
        type: integer
  LineItems:
    properties:
      items:
        items:
          $ref: '#/definitions/LineView'
        type: array
      total:
        type: integer
    required:
    - total
    title: LineItems
  LineRelationApplication:
    properties:
      application:
        $ref: '#/definitions/ApplicationRelationBase'
  LineRelationBase:
    properties:
      id:
        description: Line ID
        readOnly: true
        type: integer
      name:
        description: The name of the line
        readOnly: true
        type: string
  LineRelationEndpoints:
    properties:
      endpoint_custom:
        $ref: '#/definitions/EndpointCustomRelationBase'
        readOnly: true
      endpoint_sccp:
        $ref: '#/definitions/EndpointSccpRelationBase'
        readOnly: true
      endpoint_sip:
        $ref: '#/definitions/EndpointSipRelationBase'
        readOnly: true
  LineRelationExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/ExtensionRelationBase'
        readOnly: true
        type: array
  LineRelationUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/UserRelationBase'
        readOnly: true
        type: array
  LineView:
    allOf:
    - $ref: '#/definitions/LineRelationBase'
    - properties:
        caller_id_name:
          description: Name to display when calling
          type: string
        caller_id_num:
          description: Number to display when calling
          type: string
        context:
          description: The name of an internal context
          type: string
        device_id:
          description: ID of the device associated to the line
          readOnly: true
          type: string
        device_slot:
          description: '*Deprecated* Please use `position`'
          readOnly: true
          type: integer
        position:
          description: Line's position on the device
          type: integer
        protocol:
          description: Line's protocol
          enum:
          - sip
          readOnly: true
          type: string
        provisioning_code:
          description: Code used to provision a device
          type: string
        provisioning_extension:
          description: '*Deprecated* Please use `provisioning_code`'
          readOnly: true
          type: string
        registrar:
          description: Name of the template line used by the device
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
      required:
      - context
    - $ref: '#/definitions/LineRelationApplication'
    - $ref: '#/definitions/LineRelationEndpoints'
    - $ref: '#/definitions/LineRelationExtensions'
    - $ref: '#/definitions/LineRelationUsers'
    title: Line
  LinesID:
    properties:
      lines:
        items:
          $ref: '#/definitions/LineID'
        type: array
  LiveReload:
    properties:
      enabled:
        type: boolean
    title: LiveReload
  Meeting:
    properties:
      creation_time:
        format: date-time
        readOnly: true
        type: string
      exten:
        description: the external extension to dial to reach this meeting
        readOnly: true
        type: string
      guest_sip_authorization:
        description: 'Format: base64(username:password), same as HTTP Basic Auth.'
        readOnly: true
        type: string
      ingress_http_uri:
        description: URI to reach this stack (configured by the Ingress HTTP resource)
        type: string
      name:
        type: string
      owner_uuids:
        items:
          type: string
        type: array
      persistent:
        description: Persistent meetings will not get deleted automatically
        type: boolean
      require_authorization:
        description: when `true`, the `guest_sip_authorization` is always `null`.
          Instead, clients must request an authorization to access the meeting.
        type: boolean
      uuid:
        type: string
    type: object
  MeetingAuthorization:
    properties:
      creation_time:
        format: date-time
        type: string
      guest_name:
        type: string
      sip_authorization:
        type: string
      status:
        description: The status of the authorization. If the meeting does not require
          an authorization, the authorization will always be `accepted`.
        enum:
        - pending
        - accepted
        - rejected
        type: string
      uuid:
        format: uuid
        type: string
    type: object
  MeetingAuthorizationItems:
    properties:
      items:
        items:
          $ref: '#/definitions/MeetingAuthorization'
        type: array
      total:
        type: integer
    type: object
  MeetingAuthorizationRequest:
    properties:
      guest_name:
        type: string
    type: object
  MeetingItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Meeting'
        type: array
    type: object
  MeetingRequest:
    allOf:
    - $ref: '#/definitions/MeetingUserRequest'
    - properties:
        owner_uuids:
          items:
            type: string
          type: array
    type: object
  MeetingUserRequest:
    properties:
      name:
        type: string
      persistent:
        description: Persistent meetings will not get deleted automatically
        type: boolean
    type: object
  Moh:
    allOf:
    - properties:
        application:
          description: The command to run (only used when mode is "custom")
          type: string
        files:
          description: The audio files
          items:
            $ref: '#/definitions/MohFile'
          readOnly: true
          type: array
        label:
          description: The label of the MOH class
          type: string
        mode:
          default: files
          description: 'The play mode of the MOH class. Notice: `mp3` is deprecated
            and should not be used'
          enum:
          - custom
          - files
          - mp3
          type: string
        name:
          description: The name used by Asterisk
          readOnly: true
          type: string
        sort:
          description: The order in which files are played (only used when mode is
            "files")
          enum:
          - alphabetical
          - random
          - random_start
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        uuid:
          description: The UUID of the MOH class
          readOnly: true
          type: string
    - required:
      - label
      - mode
  MohFile:
    properties:
      name:
        description: The name of the file
        type: string
  MohItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Moh'
        type: array
      total:
        type: integer
    required:
    - total
  Outcall:
    allOf:
    - $ref: '#/definitions/OutcallRelationBase'
    - properties:
        description:
          description: Additional information about the outgoing call
          type: string
        enabled:
          default: true
          type: boolean
        internal_caller_id:
          default: false
          description: Use the internal caller id
          type: boolean
        preprocess_subroutine:
          description: Name of the subroutine to execute in asterisk before receiving
            a call
          type: string
        ring_time:
          description: Ringing time before hangup
          type: integer
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
    - $ref: '#/definitions/OutcallRelationTrunks'
    - $ref: '#/definitions/OutcallRelationExtensions'
    - $ref: '#/definitions/OutcallRelationSchedules'
    - $ref: '#/definitions/OutcallRelationCallPermissions'
    - required:
      - name
    title: Outcall
  OutcallExtension:
    properties:
      caller_id:
        type: string
      external_prefix:
        description: The prefix added to the outgoing call when sent on the trunk
        type: string
      prefix:
        description: The prefix that the user need to dial before the pattern
        type: string
      strip_digits:
        description: The number of leading digits to strip
        type: integer
    title: OutcallExtension
  OutcallItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Outcall'
        type: array
      total:
        type: integer
    required:
    - total
    title: OutcallItems
  OutcallRelationBase:
    properties:
      id:
        description: The id of the outgoing call
        readOnly: true
        type: integer
      name:
        description: The name of the outcall
        type: string
  OutcallRelationCallPermissions:
    properties:
      call_permissions:
        items:
          $ref: '#/definitions/CallPermissionRelationBase'
        readOnly: true
        type: array
  OutcallRelationExtension:
    allOf:
    - $ref: '#/definitions/ExtensionRelationBase'
    - properties:
        caller_id:
          type: string
        external_prefix:
          description: The prefix added to the outgoing call when sent on the trunk
          type: string
        prefix:
          description: The prefix that the user need to dial before the extension
          type: string
        strip_digits:
          description: The number of leading digits to strip
          type: integer
  OutcallRelationExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/OutcallRelationExtension'
        readOnly: true
        type: array
  OutcallRelationSchedule:
    allOf:
    - $ref: '#/definitions/ScheduleRelationBase'
  OutcallRelationSchedules:
    properties:
      schedules:
        items:
          $ref: '#/definitions/OutcallRelationSchedule'
        readOnly: true
        type: array
  OutcallRelationTrunk:
    allOf:
    - $ref: '#/definitions/TrunkRelationBase'
    - $ref: '#/definitions/TrunkRelationEndpoints'
  OutcallRelationTrunks:
    properties:
      trunks:
        items:
          $ref: '#/definitions/OutcallRelationTrunk'
        readOnly: true
        type: array
  PJSIPConfigurationOption:
    properties:
      default:
        description: The default value for this option
        type: string
      description:
        description: A long description of the option
        type: string
      name:
        description: The name of the option
        type: string
      synopsis:
        description: A brief description of the option
        type: string
  PJSIPConfigurationOptions:
    properties:
      aor:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      auth:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      contact:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      domain_alias:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      endpoint:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      global:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      registration:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      system:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
      transport:
        description: A list of all configuration options for this section
        items:
          $ref: '#/definitions/PJSIPConfigurationOption'
        type: array
  PJSIPGlobal:
    description: 'PJSIP global configuration.

      This configuration will be in the file ''''pjsip.conf'''' used by asterisk.

      '
    example:
      options:
        debug: false
        keep_alive_interval: '30'
        max_forwards: '5'
        user_agent: Accent
    properties:
      options:
        type: object
  PJSIPSystem:
    description: 'PJSIP system configuration.

      This configuration will be in the file ''''pjsip.conf'''' used by asterisk.

      '
    example:
      options:
        accept_multiple_sdp_answers: 'yes'
        compact_headers: 'yes'
        disable_tcp_switch: 'yes'
        follow_early_media_fork: 'no'
    properties:
      options:
        type: object
  Paging:
    allOf:
    - properties:
        announce_caller:
          default: true
          description: Play the announce sound to the caller
          type: boolean
        announce_sound:
          description: The sound played to everyone
          type: string
        caller_notification:
          default: true
          description: Play a notification to caller
          type: boolean
        duplex:
          default: false
          description: Duplex audio
          type: boolean
        enabled:
          default: true
          type: boolean
        id:
          readOnly: true
          type: integer
        ignore_forward:
          default: false
          description: Ignore attemps to forward the call
          type: boolean
        name:
          description: The name to identify the paging
          type: string
        number:
          description: The number of the paging
          type: string
        record:
          default: false
          description: Record the paging
          type: boolean
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
      required:
      - number
    - $ref: '#/definitions/PagingRelationCallers'
    - $ref: '#/definitions/PagingRelationMembers'
    title: Paging
  PagingItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Paging'
        type: array
      total:
        type: integer
    required:
    - total
    title: PagingItems
  PagingRelationCallers:
    properties:
      callers:
        $ref: '#/definitions/PagingRelationMemberUsers'
        readOnly: true
  PagingRelationMemberUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/UserRelationBase'
        readOnly: true
        type: array
  PagingRelationMembers:
    properties:
      members:
        $ref: '#/definitions/PagingRelationMemberUsers'
        readOnly: true
  ParkingLot:
    allOf:
    - $ref: '#/definitions/ParkingLotRelationBase'
    - properties:
        music_on_hold:
          default: default
          description: Name of the MOH category to use for music on hold
          type: string
        slots_end:
          description: Ending extension to park calls
          type: string
        slots_start:
          description: Starting extension to park calls
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        timeout:
          default: 45
          description: Maximum time on parking
          type: integer
    - $ref: '#/definitions/GroupRelationExtensions'
    - required:
      - slots_start
      - slots_end
  ParkingLotItems:
    properties:
      items:
        items:
          $ref: '#/definitions/ParkingLot'
        type: array
      total:
        type: integer
    required:
    - total
  ParkingLotRelationBase:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        description: name to identify the parking lot
        type: string
  ParkingLotRelationExtensions:
    properties:
      extensions:
        items:
          $ref: '#/definitions/ExtensionRelationBase'
        readOnly: true
        type: array
  ProvisioningNetworking:
    properties:
      provision_host:
        description: The hostname or IP address used for HTTP and TFTP provisioning
          requests for DHCP integration.
        type: string
      provision_http_base_url:
        description: The base URL on which the provisioning server will be accessible
          from outside the network.
        type: string
      provision_http_port:
        description: The port used by the HTTP provisioning server.
        type: integer
    title: Provisioning Networking
    type: object
  Queue:
    allOf:
    - $ref: '#/definitions/QueueRelationBase'
    - properties:
        announce_hold_time_on_entry:
          default: false
          description: Announce hold time on entry
          type: boolean
        caller_id_mode:
          description: How the caller_id_name will be treated
          enum:
          - prepend
          - overwrite
          - append
          type: string
        caller_id_name:
          description: Name to display
          type: string
        data_quality:
          default: false
          description: 'Asterisk definition: data-quality (modem) call (minimum delay)'
          type: boolean
        dtmf_hangup_callee_enabled:
          default: false
          description: Enable DTMF hangup by callee
          type: boolean
        dtmf_hangup_caller_enabled:
          default: false
          description: Enable DTMF hangup by caller
          type: boolean
        dtmf_record_callee_enabled:
          default: false
          description: Enable DTMF records by callee
          type: boolean
        dtmf_record_caller_enabled:
          default: false
          description: Enable DTMF records by caller
          type: boolean
        dtmf_transfer_callee_enabled:
          default: false
          description: Enable DTMF transfers by callee
          type: boolean
        dtmf_transfer_caller_enabled:
          default: false
          description: Enable DTMF transfers by caller
          type: boolean
        enabled:
          default: true
          description: Enable/Disable the queue
          type: boolean
        ignore_forward:
          default: false
          description: Ignore call forward requests from members
          type: boolean
        mark_answered_elsewhere:
          default: true
          description: Mark all calls as "answered elsewhere" when cancelled
          type: boolean
        music_on_hold:
          description: Name of the MOH category to use for music on hold
          type: string
        options:
          default: []
          description: "Advanced configuration options. Options are appended at the\
            \ end of\na queue account in the file 'queues.conf' used by asterisk.\
            \ Please\nconsult the asterisk documentation for further details on available\n\
            parameters. Because of database limitations, only the following\noptions\
            \ can be configured:\n\n* announce\n* context\n* timeout\n* monitor-type\n\
            * monitor-format\n* queue-youarenext\n* queue-thereare\n* queue-callswaiting\n\
            * queue-holdtime\n* queue-minutes\n* queue-seconds\n* queue-thankyou\n\
            * queue-reporthold\n* periodic-announce\n* announce-frequency\n* periodic-announce-frequency\n\
            * announce-round-seconds\n* announce-holdtime\n* retry\n* wrapuptime\n\
            * maxlen\n* servicelevel\n* strategy\n* joinempty\n* leavewhenempty\n\
            * ringinuse\n* reportholdtime\n* memberdelay\n* weight\n* timeoutrestart\n\
            * timeoutpriority\n* autofill\n* autopause\n* setinterfacevar\n* setqueueentryvar\n\
            * setqueuevar\n* membermacro\n* min-announce-frequency\n* random-periodic-announce\n\
            * announce-position\n* announce-position-limit\n* defaultrule\n\nOptions\
            \ must have the following form:\n```\n{\n  \"options\": [\n     [\"name1\"\
            , \"value1\"],\n     [\"name2\", \"value2\"]\n  ]\n}\n```\n\nThe resulting\
            \ configuration in queues.conf will have the following form:\n```\n[queuename]\n\
            name1=value1\nname2=value2\n```\n"
          items:
            $ref: '#/definitions/KeyValueOption'
          type: array
        preprocess_subroutine:
          type: string
        retry_on_timeout:
          default: true
          description: Retry when time has elapsed
          type: boolean
        ring_on_hold:
          default: false
          description: Ring instead of On-Hold Music
          type: boolean
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        timeout:
          description: Number of seconds the queue will ring before falling back
          type: integer
        wait_ratio_destination:
          $ref: '#/definitions/DestinationType'
          description: Go to that destination when 'wait_ratio_threshold' is reached
        wait_ratio_threshold:
          description: Wait ratio (waiting calls per logged-in agent) threshold before
            fallback on 'wait_ratio_destination'. Set to 'null' to disable it.
          type: integer
        wait_time_destination:
          $ref: '#/definitions/DestinationType'
          description: Go to that destination when 'wait_time_threshold' is reached
        wait_time_threshold:
          description: Wait time threshold before fallback on 'wait_time_destination'.
            Set to 'null' to disable it.
          type: integer
    - $ref: '#/definitions/QueueRelationSchedules'
    - $ref: '#/definitions/QueueRelationMembers'
    - required:
      - name
    title: Queue
  QueueFallbacks:
    example:
      busy_destination:
        group_id: 2
        type: group
      congestion_destination:
        ivr_id: 3
        type: ivr
      fail_destination:
        type: voicemail
        voicemail_id: 4
      noanswer_destination:
        type: user
        user_id: 1
    properties:
      busy_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are busy
      congestion_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are congestion
      fail_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when the call fail
      noanswer_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are no answer
  QueueGeneral:
    description: 'Queue general configuration. This configuration will be in the file
      ''queue.conf'' used by asterisk.

      Please consult the asterisk documentation for further details on available parameters.'
    properties:
      options:
        description: "General Queue options. These options must be unique and unordered.\
          \ Option must have the following form:\n\n```\n{\n  \"options\": {\n   \
          \ \"name1\": \"value1\",\n    ...\n  }\n}\n```\n\n"
        type: object
    title: QueueGeneral
  QueueItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Queue'
        type: array
      total:
        type: integer
    required:
    - total
    title: QueueItems
  QueueMemberAgent:
    allOf:
    - $ref: '#/definitions/QueueMemberAgentRelationBase'
    description: An association between an agent and a queue. Agents associated to
      a Queue will receive calls when they are logged in.
    title: QueueMemberAgent
  QueueMemberAgentRelationBase:
    properties:
      penalty:
        description: Agent's penalty. A priority used for distributing calls.
        type: integer
      priority:
        description: Priority of agent in the queue. Only used for linear ring strategy
        type: integer
  QueueMemberUser:
    allOf:
    - $ref: '#/definitions/QueueMemberUserRelationBase'
    description: An association between a user and a queue.
    title: QueueMemberUser
  QueueMemberUserRelationBase:
    properties:
      priority:
        description: Priority of user in the queue. Only used for linear ring strategy
        minimum: 0
        type: integer
  QueueRelationBase:
    properties:
      id:
        description: The id of the queue
        readOnly: true
        type: integer
      label:
        description: The label of the queue
        type: string
      name:
        description: The name of the queue. Cannot be modified
        type: string
  QueueRelationMemberAgent:
    allOf:
    - $ref: '#/definitions/AgentRelationBase'
    - $ref: '#/definitions/QueueMemberAgentRelationBase'
  QueueRelationMemberAgents:
    properties:
      agents:
        items:
          $ref: '#/definitions/QueueRelationMemberAgent'
        readOnly: true
        type: array
      users:
        items:
          $ref: '#/definitions/QueueRelationMemberUser'
        readOnly: true
        type: array
  QueueRelationMemberUser:
    allOf:
    - $ref: '#/definitions/UserRelationBase'
    - $ref: '#/definitions/QueueMemberUserRelationBase'
  QueueRelationMembers:
    properties:
      members:
        $ref: '#/definitions/QueueRelationMemberAgents'
        readOnly: true
  QueueRelationSchedules:
    properties:
      schedules:
        items:
          $ref: '#/definitions/ScheduleRelationBase'
        readOnly: true
        type: array
  RTPConfiguration:
    description: 'This configuration will be in the file ''rtp.conf'' used by asterisk.

      Please consult the asterisk documentation for further details on available parameters.'
    properties:
      options:
        description: "These options must be unique and unordered. Otherwise, use `ordered_options`.\
          \ Option must have the following form:\n\n```\n{\n  \"options\": {\n   \
          \ \"name1\": \"value1\",\n    ...\n  }\n}\n```\n\n"
        type: object
    title: RTPConfiguration
  RegisterIAX:
    allOf:
    - $ref: '#/definitions/RegisterIAXRelationBase'
    - properties:
        auth_password:
          description: The password to authenticate to the remote_host
          type: string
        auth_username:
          description: The username used by the remote_host for the authentication
          type: string
        callback_context:
          description: The callback context to use for the register
          type: string
        callback_extension:
          description: The callback extension to use for the register
          type: string
        remote_host:
          description: The register domain
          type: string
        remote_port:
          description: The port of the remote_host
          type: integer
      required:
      - remote_host
    title: Register IAX
  RegisterIAXItems:
    properties:
      items:
        items:
          $ref: '#/definitions/RegisterIAX'
        type: array
      total:
        type: integer
    title: RegisterItems
  RegisterIAXRelationBase:
    properties:
      id:
        description: The id of the register IAX
        readOnly: true
        type: integer
  Registrar:
    properties:
      backup_host:
        description: Backup registrar host
        type: string
      backup_port:
        description: Backup registrar port
        type: integer
      deletable:
        description: Define if the registrar can be deleted
        type: boolean
      id:
        description: Registrar identifier
        type: string
      main_host:
        description: Registrar host
        type: string
      main_port:
        description: Registrar port
        type: integer
      name:
        description: Display name of the registrar
        type: string
      outbound_proxy_host:
        description: Outbound proxy host
        type: string
      outbound_proxy_port:
        description: Outbound proxy port
        type: integer
      proxy_backup_host:
        description: Backup proxy host
        type: string
      proxy_backup_port:
        description: Backup proxy port
        type: integer
      proxy_main_host:
        description: 'Proxy host. Using IPv4 is recommended to have a better integration
          with some provisioning plugins. (ex: Yealink DND integration)'
        type: string
      proxy_main_port:
        description: Proxy port
        type: integer
    required:
    - main_host
    - proxy_main_host
    title: Registrar
  RegistrarItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Registrar'
        type: array
      total:
        type: integer
    title: RegistrarItems
  RewritingRule:
    properties:
      match:
        description: The local address matching rule. Supports regular expressions
        example: '`/^.*@example.org/` or `user-name` or `user-name@example.org`'
        type: string
      replacement:
        description: The replacement for the matched rule
        example: '`no-reply@example.org`'
        type: string
    title: Rewriting rule
  SCCPGeneral:
    description: SCCP general configuration. This configuration will be in the file
      'sccp.conf' used by asterisk.
    properties:
      options:
        description: "General SCCP options. These options must be unique and unordered.\
          \ Option must have the following form:\n\n```\n{\n  \"options\": {\n   \
          \ \"name1\": \"value1\",\n    ...\n  }\n}\n```\n\n"
        type: object
    title: SCCPGeneral
  SIPAORSectionOptions:
    $ref: '#/definitions/KeyValueOption'
    # title: PJSIP AOR Section Options
  SIPAuthSectionOptions:
    $ref: '#/definitions/KeyValueOption'
    # title: PJSIP Auth Section Options
  SIPEndpointSectionOptions:
    $ref: '#/definitions/KeyValueOption'
    # title: SIP Endpoint Section Options
  SIPIdentifySectionOptions:
    $ref: '#/definitions/KeyValueOption'
    # title: PJSIP Identify Section Options
  SIPRegistrationSectionOptions:
    $ref: '#/definitions/KeyValueOption'
    # title: PJSIP Registration Section Options
  SIPTransport:
    example:
      name: transport-udp
      options:
      - - protocol
        - udp
      - - bind
        - 0.0.0.0:5060
    properties:
      name:
        type: string
      options:
        items:
          $ref: '#/definitions/KeyValueOption'
        type: array
      uuid:
        readOnly: true
        type: string
    required:
    - name
    - options
  SIPTransportItems:
    properties:
      items:
        items:
          $ref: '#/definitions/SIPTransport'
        type: array
      total:
        type: integer
  SIPTransportRelation:
    properties:
      uuid:
        type: string
    required:
    - uuid
  Schedule:
    allOf:
    - $ref: '#/definitions/ScheduleRelationBase'
    - properties:
        closed_destination:
          $ref: '#/definitions/DestinationType'
          description: The destination to redirect the caller to when the schedule
            is not opened
        enabled:
          default: true
          type: boolean
        exceptional_periods:
          items:
            $ref: '#/definitions/ScheduleExceptionalPeriod'
          type: array
        open_periods:
          items:
            $ref: '#/definitions/ScheduleOpenPeriod'
          type: array
        timezone:
          description: The number of the schedule
          type: string
      required:
      - closed_destination
    - $ref: '#/definitions/ScheduleRelationIncalls'
    - $ref: '#/definitions/ScheduleRelationGroups'
    - $ref: '#/definitions/ScheduleRelationQueues'
    - $ref: '#/definitions/ScheduleRelationUsers'
    - $ref: '#/definitions/ScheduleRelationOutcalls'
    title: Schedule
  ScheduleExceptionalPeriod:
    allOf:
    - $ref: '#/definitions/ScheduleOpenPeriod'
    - properties:
        destination:
          $ref: '#/definitions/DestinationType'
          description: The destination to redirect the caller to when the given period
            is satisfied
  ScheduleItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Schedule'
        type: array
      total:
        type: integer
    required:
    - total
    title: ScheduleItems
  ScheduleOpenPeriod:
    properties:
      hours_end:
        description: The end hour of the period. Format <HH:MM>
        type: string
      hours_start:
        description: The start hour of the period. Format <HH:MM>
        type: string
      month_days:
        description: The month days of the period.
        items:
          type: integer
        type: array
      months:
        description: The months of the period. Month start with January(1) and end
          with December(12)
        items:
          type: integer
        type: array
      week_days:
        description: The week days of the period. Week day start with Monday(1) and
          end with Sunday(7)
        items:
          type: integer
        type: array
  ScheduleRelationBase:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        description: The name to identify the schedule
        type: string
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
  ScheduleRelationGroups:
    properties:
      incalls:
        items:
          $ref: '#/definitions/GroupRelationBase'
        readOnly: true
        type: array
  ScheduleRelationIncalls:
    properties:
      incalls:
        items:
          $ref: '#/definitions/IncallRelationBase'
        readOnly: true
        type: array
  ScheduleRelationOutcalls:
    properties:
      incalls:
        items:
          $ref: '#/definitions/OutcallRelationBase'
        readOnly: true
        type: array
  ScheduleRelationQueues:
    properties:
      incalls:
        items:
          $ref: '#/definitions/QueueRelationBase'
        readOnly: true
        type: array
  ScheduleRelationUsers:
    properties:
      incalls:
        items:
          $ref: '#/definitions/UserRelationBase'
        readOnly: true
        type: array
  Skill:
    allOf:
    - $ref: '#/definitions/SkillRelationBase'
    - properties:
        description:
          type: string
    - $ref: '#/definitions/SkillRelationAgents'
    - required:
      - name
    title: Skill
  SkillItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Skill'
        type: array
      total:
        type: integer
    required:
    - total
    title: SkillItems
  SkillRelationAgent:
    allOf:
    - $ref: '#/definitions/AgentRelationBase'
    - $ref: '#/definitions/AgentSkillRelationBase'
  SkillRelationAgents:
    properties:
      agents:
        items:
          $ref: '#/definitions/SkillRelationAgent'
        readOnly: true
        type: array
  SkillRelationBase:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        description: The name to identify the skill
        type: string
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
  SkillRule:
    properties:
      id:
        readOnly: true
        type: integer
      name:
        description: The name to identify the skill rule
        type: string
      rules:
        items:
          $ref: '#/definitions/SkillRuleRule'
        type: array
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
    required:
    - name
    title: SkillRule
  SkillRuleItems:
    properties:
      items:
        items:
          $ref: '#/definitions/SkillRule'
        type: array
      total:
        type: integer
    required:
    - total
    title: SkillRuleItems
  SkillRuleRule:
    properties:
      definition:
        description: The rule definition
        type: string
    title: SkillRuleRule
  Sound:
    properties:
      files:
        description: The audio files
        items:
          $ref: '#/definitions/SoundFile'
        readOnly: true
        type: array
      name:
        description: The name of the category (can only by set on create and must
          be unique)
        type: string
      tenant_uuid:
        description: The UUID of the tenant of the category
        type: string
    required:
    - name
  SoundFile:
    properties:
      formats:
        description: The audio file formats
        items:
          $ref: '#/definitions/SoundFormat'
        readOnly: true
        type: array
      name:
        description: The name of the file
        type: string
      tenant_uuid:
        description: The UUID of the tenant of the file
        type: string
  SoundFormat:
    properties:
      format:
        type: string
      language:
        type: string
      path:
        type: string
      tenant_uuid:
        description: The UUID of the tenant of the file
        type: string
      text:
        type: string
  SoundItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Sound'
        type: array
      total:
        type: integer
    required:
    - total
  SoundLanguage:
    properties:
      tag:
        type: string
    title: SoundLanguage
  SoundLanguageItems:
    properties:
      items:
        items:
          $ref: '#/definitions/SoundLanguage'
        type: array
      total:
        type: integer
    title: SoundLanguageItems
  StatusSummary:
    properties:
      bus_consumer:
        $ref: '#/definitions/ComponentWithStatus'
      master_tenant:
        $ref: '#/definitions/ComponentWithStatus'
      rest_api:
        $ref: '#/definitions/ComponentWithStatus'
      service_token:
        $ref: '#/definitions/ComponentWithStatus'
    type: object
  StatusValue:
    enum:
    - fail
    - ok
    type: string
  Switchboard:
    allOf:
    - properties:
        name:
          type: string
        queue_music_on_hold:
          type: string
        tenant_uuid:
          description: The UUID of the tenant
          readOnly: true
          type: string
        timeout:
          description: Maximum time allowed for a call to be queued. When the timeout
            expires, the call is redirected to the no-answer fallback.
          type: integer
        uuid:
          readOnly: true
          type: string
        waiting_room_music_on_hold:
          type: string
    - $ref: '#/definitions/SwitchboardRelationIncalls'
    - $ref: '#/definitions/SwitchboardRelationMembers'
    - $ref: '#/definitions/SwitchboardRelationFallbacks'
    type: object
  SwitchboardFallbacks:
    example:
      noanswer_destination:
        type: user
        user_id: 1
    properties:
      noanswer_destination:
        $ref: '#/definitions/DestinationType'
        description: If a call has not been answered before the switchboard `timeout`,
          the call will be redirected to this destination.
  SwitchboardRelationBase:
    properties:
      name:
        description: Switchboard name
        type: string
      uuid:
        description: Switchboard UUID
        readOnly: true
        type: string
  SwitchboardRelationFallbacks:
    properties:
      fallbacks:
        $ref: '#/definitions/SwitchboardFallbacks'
        readOnly: true
  SwitchboardRelationIncall:
    allOf:
    - $ref: '#/definitions/IncallRelationBase'
    - $ref: '#/definitions/IncallRelationExtensions'
  SwitchboardRelationIncalls:
    properties:
      incalls:
        items:
          $ref: '#/definitions/SwitchboardRelationIncall'
        readOnly: true
        type: array
  SwitchboardRelationMemberUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/UserRelationBase'
        readOnly: true
        type: array
  SwitchboardRelationMembers:
    properties:
      members:
        $ref: '#/definitions/SwitchboardRelationMemberUsers'
        readOnly: true
  Tenant:
    properties:
      global_sip_template_uuid:
        readOnly: true
        type: string
      registration_trunk_sip_template_uuid:
        readOnly: true
        type: string
      sip_templates_generated:
        description: Wether or not the SIP templates have been generated
        readOnly: true
        type: boolean
      uuid:
        description: The UUID of the Tenant
        readOnly: true
        type: string
      webrtc_sip_template_uuid:
        readOnly: true
        type: string
  TenantItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Tenant'
        type: array
      total:
        type: integer
    title: TenantItems
  Timezone:
    properties:
      zone_name:
        type: string
    title: Timezone
  TimezoneItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Timezone'
        type: array
      total:
        type: integer
    title: TimezoneItems
  Trunk:
    allOf:
    - $ref: '#/definitions/TrunkRelationBase'
    - properties:
        context:
          description: The context of the trunk
          type: string
        twilio_incoming:
          description: Use this trunk's settings to handle incoming calls from Twilio
          type: boolean
    - $ref: '#/definitions/TrunkRelationEndpoints'
    - $ref: '#/definitions/TrunkRelationOutcalls'
    title: Trunk
  TrunkId:
    properties:
      id:
        type: integer
    title: TrunkId
  TrunkItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Trunk'
        type: array
      total:
        type: integer
    title: TrunkItems
  TrunkRelationBase:
    properties:
      id:
        description: The id of the trunk
        readOnly: true
        type: integer
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
  TrunkRelationEndpoints:
    properties:
      endpoint_custom:
        $ref: '#/definitions/EndpointCustomRelationBase'
        readOnly: true
      endpoint_iax:
        $ref: '#/definitions/EndpointIAXRelationBase'
        readOnly: true
      endpoint_sip:
        $ref: '#/definitions/EndpointSipRelationBase'
        readOnly: true
  TrunkRelationOutcalls:
    properties:
      outcalls:
        items:
          $ref: '#/definitions/OutcallRelationBase'
        readOnly: true
        type: array
  TrunksId:
    properties:
      trunks:
        items:
          $ref: '#/definitions/TrunkId'
        type: array
    title: TrunksId
  User:
    allOf:
    - $ref: '#/definitions/BaseUser'
    - $ref: '#/definitions/UserRelationAgent'
    - $ref: '#/definitions/UserRelationFallbacks'
    - $ref: '#/definitions/UserRelationForwards'
    - $ref: '#/definitions/UserRelationGroups'
    - $ref: '#/definitions/UserRelationIncalls'
    - $ref: '#/definitions/UserRelationLines'
    - $ref: '#/definitions/UserRelationServices'
    - $ref: '#/definitions/UserRelationSwitchboards'
    - $ref: '#/definitions/UserRelationVoicemail'
    - $ref: '#/definitions/UserRelationQueues'
    - $ref: '#/definitions/UserRelationCallPickupTargets'
    - required:
      - firstname
    title: User
  UserCallPermission:
    properties:
      call_permission_id:
        description: Call Permission's ID
        type: integer
      user_id:
        description: User's ID
        type: integer
    required:
    - user_id
    - call_permission_id
    title: UserCallPermission
  UserCallPermissionItems:
    properties:
      items:
        items:
          $ref: '#/definitions/UserCallPermission'
        type: array
      total:
        type: integer
    title: UserCallPermissionItems
  UserCreate:
    allOf:
    - $ref: '#/definitions/BaseUser'
    - $ref: '#/definitions/UserRelationVoicemailCreate'
    - $ref: '#/definitions/UserRelationAgent'
    - $ref: '#/definitions/UserRelationFallbacks'
    - $ref: '#/definitions/UserRelationForwards'
    - $ref: '#/definitions/UserRelationGroups'
    - $ref: '#/definitions/UserRelationIncalls'
    - $ref: '#/definitions/UserRelationLines'
    - $ref: '#/definitions/UserRelationServices'
    - $ref: '#/definitions/UserRelationSwitchboards'
    - $ref: '#/definitions/UserRelationQueues'
    - $ref: '#/definitions/UserRelationCallPickupTargets'
    title: User Create
  UserExport:
    title: UserExport
    type: string
  UserExternalApp:
    properties:
      configuration:
        description: Arbitrary settings needed by an external app
        type: object
      label:
        description: The label of the external app
        type: string
      name:
        description: The name to identify the external app
        readOnly: true
        type: string
    title: UserExternalApp
  UserExternalAppItems:
    properties:
      items:
        items:
          $ref: '#/definitions/UserExternalApp'
        type: array
      total:
        type: integer
    required:
    - total
    title: UserExternalAppItems
  UserFallbacks:
    example:
      busy_destination:
        group_id: 2
        type: group
      congestion_destination:
        ivr_id: 3
        type: ivr
      fail_destination:
        type: voicemail
        voicemail_id: 4
      noanswer_destination:
        type: user
        user_id: 1
    properties:
      busy_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are busy
      congestion_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are congestion
      fail_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when the call fail
      noanswer_destination:
        $ref: '#/definitions/DestinationType'
        description: The destination to redirect the caller to when there are no answer
  UserForward:
    properties:
      destination:
        type: string
      enabled:
        type: boolean
    title: UserForward
  UserForwards:
    properties:
      busy:
        $ref: '#/definitions/UserForward'
      noanswer:
        $ref: '#/definitions/UserForward'
      unconditional:
        $ref: '#/definitions/UserForward'
    title: UserForwards
  UserFuncKeyTemplate:
    description: Association between a User and a FuncKey Template
    properties:
      template_id:
        description: FuncKey Template's ID
        format: int32
        type: integer
      user_id:
        description: User's ID
        format: int32
        type: integer
    title: UserFuncKeyTemplate
  UserGroupID:
    properties:
      id:
        type: integer
      uuid:
        type: string
  UserGroupsID:
    properties:
      groups:
        items:
          $ref: '#/definitions/UserGroupID'
        type: array
  UserImport:
    description: List of users successfully imported
    properties:
      created:
        items:
          properties:
            extension_id:
              description: Extension ID
              type: integer
            incall_extension_id:
              description: ID of the Extension used for incoming calls
              type: integer
            line_id:
              description: Line ID
              type: integer
            row_number:
              description: Line number corresponding to the CSV data
              type: integer
            sip_uuid:
              description: SIP UUID
              type: string
            user_id:
              description: User ID
              type: integer
            voicemail_id:
              description: Voicemail ID
              type: integer
          title: UserImportIDs
          type: object
        type: array
    title: UserImport
  UserImportError:
    description: List of errors that occurred during import
    properties:
      errors:
        items:
          properties:
            details:
              properties:
                row:
                  description: Original data that caused the error
                  type: object
                row_number:
                  description: Line number corresponding to the CSV data
                  type: integer
              type: object
            message:
              description: Error message
              type: string
            timestamp:
              description: Time at which the error occurred
              type: integer
          type: object
        type: array
    title: UserImportError
  UserItems:
    properties:
      items:
        items:
          $ref: '#/definitions/User'
        type: array
      total:
        type: integer
    required:
    - total
    title: UserItems
  UserPost:
    allOf:
    - $ref: '#/definitions/UserPostRelationIncalls'
    properties:
      agent:
        $ref: '#/definitions/UserRelationAgent'
        description: The agent related to the user
      auth:
        properties:
          email_address:
            description: The main email address of the new username
            type: string
          enabled:
            type: boolean
          firstname:
            description: The user's firstname
            type: string
          lastname:
            description: The user's lastname
            type: string
          password:
            description: The password of the newly created username
            type: string
          purpose:
            default: user
            enum:
            - user
            - internal
            - external_api
            type: string
          username:
            description: The username that will identify that new username
            type: string
          uuid:
            description: The user's UUID
            readOnly: true
            type: string
        type: object
      call_permission_password:
        description: Overwrite all passwords set in call permissions associated to
          the user
        type: string
      call_record_enabled:
        default: false
        description: Record all calls made by this user (deprecated). If set, all
          `call_record_*_enabled` will be affected
        type: boolean
      call_record_incoming_external_enabled:
        default: false
        description: Record all external calls received by this user.
        type: boolean
      call_record_incoming_internal_enabled:
        default: false
        description: Record all internal calls received by this user.
        type: boolean
      call_record_outgoing_external_enabled:
        default: false
        description: Record all external calls made by this user
        type: boolean
      call_record_outgoing_internal_enabled:
        default: false
        description: Record all internal calls received by this user
        type: boolean
      call_transfer_enabled:
        default: false
        description: Authorize call transfers
        type: boolean
      caller_id:
        description: Name that appears on the phone when calling. Formatted as "Firstname
          Lastname" < number >
        type: string
      description:
        description: Additional information about the user
        type: string
      dtmf_hangup_enabled:
        default: false
        description: Authorize to hangup with DTMF
        type: boolean
      email:
        description: User's email. Used for directories (i.e. by accent-dird)
        type: string
      enabled:
        default: true
        description: Enable/Disable the user
        type: boolean
      fallbacks:
        $ref: '#/definitions/UserFallbacks'
        description: The fallbacks related to the user
      firstname:
        description: User firstname
        type: string
      forwards:
        $ref: '#/definitions/UserForwards'
        description: The forwards related to the user
      groups:
        items:
          description: One identifier(id or uuid) must be provided
          properties:
            id:
              type: integer
            uuid:
              type: string
          type: object
        type: array
      id:
        description: User ID
        readOnly: true
        type: integer
      language:
        description: User language (e.g. "en_US")
        enum:
        - de_DE
        - en_US
        - es_ES
        - fr_FR
        - fr_CA
        - it_IT
        - nl_NL
        type: string
      lastname:
        description: User lastname
        type: string
      lines:
        items:
          $ref: '#/definitions/UserPostRelationLine'
        type: array
      mobile_phone_number:
        description: "Phone number for the user\u2019s mobile device"
        type: string
      music_on_hold:
        description: Name of the MOH category to use for music on hold
        type: string
      online_call_record_enabled:
        default: false
        description: Allow user to record a call by pressing *3
        type: boolean
      outgoing_caller_id:
        description: Name that appears on the phone when calling
        enum:
        - default
        - anonymous
        - '"Firstname Lastname" < number >'
        type: string
      password:
        description: Password for connecting to the CTI (deprecated)
        minLength: 4
        type: string
      preprocess_subroutine:
        description: Name of the subroutine to execute in asterisk before receiving
          a call
        type: string
      ring_seconds:
        default: 30
        description: Number of seconds a user's phone will ring before falling back
        type: integer
      simultaneous_calls:
        default: 5
        description: Number of allowed simultaneous calls on a user's phone
        type: integer
      supervision_enabled:
        default: true
        description: Activate presence sharing in the accent client
        type: boolean
      switchboards:
        items:
          properties:
            uuid:
              type: string
          type: object
        type: array
      tenant_uuid:
        description: The UUID of the tenant
        readOnly: true
        type: string
      timezone:
        description: User timezone
        type: string
      userfield:
        description: A custom field which purpose is left to the client. If the user
          has no userfield, then this field is an empty string.
        type: string
      username:
        description: Username for connecting to the CTI (deprecated)
        type: string
      uuid:
        description: User UUID. This ID is globally unique across multiple Accent instances
        readOnly: true
        type: string
      voicemail:
        $ref: '#/definitions/Voicemail'
        description: The body of a new voicemail or a body containing an existing
          voicemail ID that should be associated to the user.
    title: User
  UserPostRelationIncalls:
    properties:
      incalls:
        items:
          properties:
            caller_id_mode:
              description: How the caller_id_name will be treated
              enum:
              - prepend
              - overwrite
              - append
              type: string
            caller_id_name:
              description: Name to display when calling
              type: string
            extensions:
              items:
                properties:
                  context:
                    type: string
                  exten:
                    type: string
                  id:
                    description: Extension ID
                    readOnly: true
                    type: integer
                type: object
              type: array
            greeting_sound:
              description: The name of the sound file to be played before redirecting
                the caller to the destination
              type: string
            id:
              description: The id of the incoming call
              readOnly: true
              type: integer
            preprocess_subroutine:
              description: Name of the subroutine to execute in asterisk before receiving
                a call
              type: string
          type: object
        type: array
  UserPostRelationLine:
    allOf:
    - $ref: '#/definitions/Line'
    - $ref: '#/definitions/LineExtensions'
    - $ref: '#/definitions/LineEndpointSIP'
    - $ref: '#/definitions/LineEndpointSCCP'
    - $ref: '#/definitions/LineEndpointCustom'
    properties:
      device_id:
        description: ID of the device associated to the line
        type: string
  UserPostResponse:
    allOf:
    - $ref: '#/definitions/UserPost'
    - $ref: '#/definitions/AuthUserPost'
    - $ref: '#/definitions/UserPostRelationIncalls'
    title: UserCreateResponse
  UserRelationAgent:
    properties:
      agent:
        $ref: '#/definitions/AgentRelationBase'
        readOnly: true
  UserRelationBase:
    properties:
      firstname:
        description: User firstname
        type: string
      lastname:
        description: User lastname
        type: string
      uuid:
        description: User UUID. This ID is globally unique across multiple Accent instances
        readOnly: true
        type: string
  UserRelationCallPickupTargets:
    properties:
      call_pickup_target_users:
        items:
          $ref: '#/definitions/UserRelationBase'
        type: array
    title: UserRelationCallPickupTargets
  UserRelationFallbacks:
    properties:
      fallbacks:
        $ref: '#/definitions/UserFallbacks'
        readOnly: true
  UserRelationForwards:
    properties:
      forwards:
        $ref: '#/definitions/UserForwards'
        readOnly: true
  UserRelationGroups:
    properties:
      groups:
        items:
          $ref: '#/definitions/GroupRelationBase'
        readOnly: true
        type: array
  UserRelationIncall:
    allOf:
    - $ref: '#/definitions/IncallRelationBase'
    - $ref: '#/definitions/IncallRelationExtensions'
  UserRelationIncalls:
    properties:
      incalls:
        items:
          $ref: '#/definitions/UserRelationIncall'
        readOnly: true
        type: array
  UserRelationLine:
    allOf:
    - $ref: '#/definitions/LineRelationBase'
    - $ref: '#/definitions/LineRelationEndpoints'
    - $ref: '#/definitions/LineRelationExtensions'
  UserRelationLines:
    properties:
      lines:
        items:
          $ref: '#/definitions/UserRelationLine'
        readOnly: true
        type: array
  UserRelationQueues:
    properties:
      queues:
        items:
          $ref: '#/definitions/QueueRelationBase'
        readOnly: true
        type: array
  UserRelationServices:
    properties:
      services:
        $ref: '#/definitions/UserServices'
        readOnly: true
  UserRelationSwitchboards:
    properties:
      switchboards:
        items:
          $ref: '#/definitions/SwitchboardRelationBase'
        readOnly: true
        type: array
  UserRelationVoicemail:
    properties:
      voicemail:
        $ref: '#/definitions/VoicemailRelationBase'
        readOnly: true
  UserRelationVoicemailCreate:
    properties:
      voicemail:
        allOf:
        - $ref: '#/definitions/BaseVoicemail'
        - properties:
            id:
              description: The voicemail is associated if the ID is specified
              type: integer
  UserService:
    properties:
      enabled:
        type: boolean
    required:
    - enabled
    title: UserService
  UserServices:
    properties:
      dnd:
        $ref: '#/definitions/UserService'
      incallfilter:
        $ref: '#/definitions/UserService'
    title: UserServices
  UserSubscription:
    properties:
      count:
        description: Total of assigned subscription
        type: integer
      id:
        type: integer
    title: UserSubscription
  UserSubscriptionItems:
    properties:
      items:
        items:
          $ref: '#/definitions/UserSubscription'
        type: array
      total:
        type: integer
    required:
    - total
    title: UserSubscriptionItems
  UserUpdate:
    description: List of users successfully updated
    properties:
      updated:
        items:
          properties:
            extension_id:
              description: Extension ID
              type: integer
            incall_extension_id:
              description: ID of the Extension used for incoming calls
              type: integer
            line_id:
              description: Line ID
              type: integer
            row_number:
              description: Line number corresponding to the CSV data
              type: integer
            sip_uuid:
              description: SIP UUID
              type: string
            user_id:
              description: User ID
              type: integer
            voicemail_id:
              description: Voicemail ID
              type: integer
          title: UserUpdateIDs
          type: object
        type: array
    title: UserUpdate
  UserUuid:
    properties:
      uuid:
        type: string
  UsersUuid:
    properties:
      users:
        items:
          $ref: '#/definitions/UserUuid'
        type: array
  Voicemail:
    allOf:
    - $ref: '#/definitions/BaseVoicemail'
    - $ref: '#/definitions/VoicemailRelationBase'
    - $ref: '#/definitions/VoicemailRelationUsers'
  VoicemailGeneral:
    description: 'Voicemail general configuration. This configuration will be in the
      file ''voicemail.conf'' used by asterisk.

      Please consult the asterisk documentation for further details on available parameters.'
    properties:
      options:
        description: "General Voicemail options. These options must be unique and\
          \ unordered. Option must have the following form:\n\n```\n{\n  \"options\"\
          : {\n    \"name1\": \"value1\",\n    ...\n  }\n}\n```\n\n"
        type: object
    title: VoicemailGeneral
  VoicemailItems:
    properties:
      items:
        items:
          $ref: '#/definitions/Voicemail'
        type: array
      total:
        type: integer
    title: VoicemailItems
  VoicemailRelationBase:
    properties:
      id:
        description: Voicemail ID
        readOnly: true
        type: integer
      name:
        description: Voicemail name
        type: string
  VoicemailRelationUsers:
    properties:
      users:
        items:
          $ref: '#/definitions/UserRelationBase'
        readOnly: true
        type: array
  VoicemailZoneMessage:
    properties:
      message:
        description: Message that each user hears.
        type: string
      name:
        description: label on which each voicemail is mapped
        type: string
      timezone:
        description: Timezone as define in '/usr/share/zoneinfo/'
        type: string
    required:
    - name
    - timezone
    title: VoicemailZoneMessage
  VoicemailZoneMessages:
    properties:
      items:
        description: 'Voicemail zonemessages configuration. This configuration will
          be in the file ''voicemail.conf'' used by asterisk.

          Please consult the asterisk documentation for further details on available
          parameters.'
        items:
          $ref: '#/definitions/VoicemailZoneMessage'
        type: array
    title: VoicemailZoneMessages
  Wizard:
    properties:
      admin_password:
        description: Accent administrator ``root`` password
        type: string
      language:
        default: en_US
        description: The language in which the Accent will play sounds
        enum:
        - de_DE
        - en_US
        - es_ES
        - fr_FR
        - fr_CA
        - it_IT
        - nl_NL
        type: string
      license:
        description: 'Accept/decline the GPLv3: http://www.gnu.org/licenses/gpl-3.0.en.html'
        type: boolean
      network:
        $ref: '#/definitions/WizardNetwork'
      steps:
        $ref: '#/definitions/WizardSteps'
      timezone:
        description: 'System timezone. Example: America/Montreal. For the complete
          list of supported timezones, see ``/usr/share/zoneinfo/``'
        type: string
    required:
    - admin_password
    - license
    - timezone
    - network
    title: Wizard
  WizardConfigured:
    properties:
      configurable:
        description: Whether all services which the wizard depends on are started
          or not
        type: boolean
      configurable_status:
        description: A mapping of all dependencies and there statuses
        type: object
      configured:
        description: Whether Accent has already been configured or not
        type: boolean
    title: WizardConfigured
  WizardDiscover:
    properties:
      domain:
        description: System domain name
        type: string
      gateways:
        items:
          $ref: '#/definitions/WizardDiscoverGateway'
        type: array
      hostname:
        description: System hostname
        type: string
      interfaces:
        items:
          $ref: '#/definitions/WizardDiscoverInterface'
        type: array
      nameservers:
        description: Nameservers from file ``/etc/resolv.conf``
        items:
          type: string
        maxItems: 3
        type: array
      timezone:
        description: System timezone from file ``/etc/timezone``
        type: string
    title: WizardDiscover
  WizardDiscoverGateway:
    properties:
      gateway:
        description: Gateway IPv4 address
        type: string
      interface:
        description: Interface name (e.g. eth0)
        type: string
    title: WizardDiscoverGateway
  WizardDiscoverInterface:
    properties:
      interface:
        description: Interface name (e.g. eth0)
        type: string
      ip_address:
        description: IPv4 address of the interface
        type: string
      netmask:
        description: Netmask of the IP address
        type: string
    title: WizardDiscoverInterface
  WizardNetwork:
    properties:
      domain:
        description: Domain name
        type: string
      gateway:
        description: Gateway IPv4 address
        type: string
      hostname:
        description: System hostname
        type: string
      interface:
        description: Interface name (e.g. eth0)
        type: string
      ip_address:
        description: IPv4 address of the VoIP interface (connected to phones)
        type: string
      nameservers:
        description: List of IPv4 addresses. Nameservers are used in resolv.conf.
        items:
          type: string
        maxItems: 3
        type: array
      netmask:
        description: Netmask of the IP address (e.g. 255.255.0.0)
        type: string
    required:
    - hostname
    - domain
    - ip_address
    - interface
    - netmask
    - gateway
    - nameservers
    title: WizardNetwork
  WizardSteps:
    properties:
      admin:
        default: true
        description: Create admin in accent-auth?
        type: boolean
      commonconf:
        default: true
        description: Generate /etc/accent/common.conf
        type: boolean
      database:
        default: true
        description: Initialize Accent database?
        type: boolean
      manage_hosts_file:
        default: true
        description: Modify /etc/hosts?
        type: boolean
      manage_resolv_file:
        default: true
        description: Modify /etc/resolv.conf?
        type: boolean
      manage_services:
        default: true
        description: Enable/start Accent services?
        type: boolean
      provisioning:
        default: true
        description: Initialize accent-provd database?
        type: boolean
    title: WizardSteps
info:
  contact:
    email: help@accentvoice.io
    name: Accent Team
    url: https://accentvoice.io/
  description: "Confd exposes an API for managing core resources on a Accent server\
    \ such as users, extensions, devices, voicemails, queues, etc. Resources can be\
    \ associated together to provide additional functionality. For example: By associating\
    \ a voicemail with a user, calls will automatically fallback on to the voicemail\
    \ when the user cannot answer.\n\nImplementation notes\n====================\n\
    \nErrors\n------\n\nResponses containing errors will have a status code in the\
    \ 400 or 500 class. A list of error messages will be returned in the body of the\
    \ response as a JSON-encoded array:\n\n~~~\n[\n    \"Input error - User not found\"\
    ,\n    \"Resource error - User not associated to a line\"\n]\n~~~\n\n\nUpdating\
    \ resources via PUT\n--------------------------\n\nWhen updating a resource, all\
    \ fields become optional. In other words, only values that have been changed need\
    \ to be sent to the server. Please note that this behavior may change in future\
    \ versions of the API."
  license:
    name: GPL v3
    url: http://www.gnu.org/licenses/gpl.txt
  title: accent-confd
  version: '1.1'
  x-logo:
    altText: Accent Logo
    backgroundColor: '#FAFAFA'
    url: https://accentvoice.io/images/logo-black.svg
parameters:
  access_featureid:
    description: Access feature ID
    in: path
    name: access_feature_id
    required: true
    type: integer
  agentid:
    description: "Agent\u2019s ID"
    in: path
    name: agent_id
    required: true
    type: integer
  application_uuid:
    description: Application's UUID
    in: path
    name: application_uuid
    required: true
    type: integer
  authorization_uuid:
    description: Authorization UUID
    in: path
    name: authorization_uuid
    required: true
    type: string
  availability:
    default: available
    description: Determines if the ranges are going to be split to display only ranges
      with available extensions.
    enum:
    - available
    - all
    in: query
    name: availability
    required: false
    type: string
  callfilterid:
    description: Call Filter's ID
    in: path
    name: callfilter_id
    required: true
    type: integer
  callpermissionid:
    description: Call Permission's ID
    in: path
    name: callpermission_id
    required: true
    type: integer
  callpickupid:
    description: Call Pickup's ID
    in: path
    name: callpickup_id
    required: true
    type: integer
  conferenceid:
    description: Conference's ID
    in: path
    name: conference_id
    required: true
    type: integer
  contextid:
    description: context's ID
    in: path
    name: context_id
    required: true
    type: integer
  csvbody:
    description: CSV field list available at https://accentvoice.io/uc-doc/administration/users/csv_import
    in: body
    name: body
    required: true
    schema:
      type: string
  customid:
    in: path
    name: custom_id
    required: true
    type: integer
  deviceid:
    description: Device's ID
    in: path
    name: device_id
    required: true
    type: string
  direction:
    description: Sort list of items in 'asc' (ascending) or 'desc' (descending) order
    enum:
    - asc
    - desc
    in: query
    name: direction
    required: false
    type: string
  enddate:
    description: filter before end date. Format YYYY-MM-DDTHH:MM:SS. Empty means 'until
      the current time'.
    format: date-time
    in: query
    name: end_date
    required: false
    type: string
  endpoint_sip_view:
    description: 'Different view of the SIP endpoint


      The `default` view, when the argument is omitted, is to include only options
      that

      are defined on the specified endpoint.


      The `merged` view includes all options from included templates.

      '
    enum:
    - merged
    in: query
    name: view
    required: false
    type: string
  extensionid:
    in: path
    name: extension_id
    required: true
    type: integer
  extensionuuid:
    in: path
    name: extension_uuid
    required: true
    type: string
  externalappname:
    description: External App's name
    in: path
    name: app_name
    required: true
    type: string
  fallback_transport:
    description: 'The UUID of the transport that should be associated to orphaned

      SIP configurations

      '
    in: query
    name: fallback
    required: false
    type: string
  forward:
    description: the forward name
    enum:
    - busy
    - noanswer
    - unconditional
    in: path
    name: forward_name
    required: true
    type: string
  funckeyposition:
    description: position of the funckey
    in: path
    name: position
    required: true
    type: integer
  groupid:
    description: the group's ID
    in: path
    name: group_id
    required: true
    type: integer
  groupuuid:
    description: the group's UUID
    in: path
    name: group_uuid
    required: true
    type: string
  guest_uuid:
    description: Guest UUID. It must be generated by the guest.
    in: path
    name: guest_uuid
    required: true
    type: string
  http_ingress_uuid:
    in: path
    name: http_ingress_uuid
    required: true
    type: string
  iaxid:
    in: path
    name: iax_id
    required: true
    type: integer
  incallid:
    description: Incoming call's ID
    in: path
    name: incall_id
    required: true
    type: integer
  ivrid:
    description: IVR's ID
    in: path
    name: ivr_id
    required: true
    type: integer
  limit:
    description: Maximum number of items to return in the list
    in: query
    name: limit
    required: false
    type: integer
  lineid:
    in: path
    name: line_id
    required: true
    type: integer
  meeting_uuid:
    description: Meeting UUID
    in: path
    name: meeting_uuid
    required: true
    type: string
  moh_filename:
    in: path
    name: moh_filename
    required: true
    type: string
  moh_uuid:
    in: path
    name: moh_uuid
    required: true
    type: string
  offset:
    description: Number of items to skip over in the list. Useful for pagination.
    in: query
    name: offset
    required: false
    type: integer
  order:
    description: Name of the field to use for sorting the list of items returned.
    in: query
    name: order
    required: false
    type: string
  outcallid:
    description: Outgoing call's ID
    in: path
    name: outcall_id
    required: true
    type: integer
  pagingid:
    description: Paging's ID
    in: path
    name: paging_id
    required: true
    type: integer
  parkinglotid:
    description: Parking Lot's ID
    in: path
    name: parking_lot_id
    required: true
    type: integer
  queueid:
    description: queue's ID
    in: path
    name: queue_id
    required: true
    type: integer
  rangetype:
    description: The extension range destination type
    enum:
    - user
    - group
    - queue
    - conference
    - incall
    in: path
    name: range_type
    required: true
    type: string
  recurse:
    default: false
    description: Should the query include sub-tenants
    in: query
    name: recurse
    required: false
    type: boolean
  registeriaxid:
    description: Register IAX's ID
    in: path
    name: register_iax_id
    required: true
    type: integer
  registrar_id:
    description: Registrar ID
    in: path
    name: registrar_id
    required: true
    type: string
  sccpid:
    in: path
    name: sccp_id
    required: true
    type: integer
  scheduleid:
    description: Schedule's ID
    in: path
    name: schedule_id
    required: true
    type: integer
  search:
    description: Search term for filtering a list of items. Only items with a field
      containing the search term will be returned.
    in: query
    name: search
    required: false
    type: string
  service:
    description: the service name
    enum:
    - dnd
    - incallfilter
    in: path
    name: service_name
    required: true
    type: string
  sipuuid:
    in: path
    name: sip_uuid
    required: true
    type: string
  skillid:
    description: Skill's ID
    in: path
    name: skill_id
    required: true
    type: integer
  skillruleid:
    description: Skill's ID
    in: path
    name: skillrule_id
    required: true
    type: integer
  sound_category:
    in: path
    name: sound_category
    required: true
    type: string
  sound_filename:
    in: path
    name: sound_filename
    required: true
    type: string
  sound_format:
    description: Format of the sound
    in: query
    name: format
    required: false
    type: string
  sound_language:
    description: Language of the sound
    in: query
    name: language
    required: false
    type: string
  startdate:
    description: filter after start date. Format YYYY-MM-DDTHH:MM:SS. Empty means
      'since the earliest'.
    format: date-time
    in: query
    name: start_date
    required: false
    type: string
  switchboard_uuid:
    in: path
    name: switchboard_uuid
    required: true
    type: string
  template_uuid:
    in: path
    name: template_uuid
    required: true
    type: string
  templateid:
    in: path
    name: template_id
    required: true
    type: integer
  tenantuuid:
    description: The tenant's UUID, defining the ownership of a given resource.
    in: header
    name: Accent-Tenant
    required: false
    type: string
  transportuuid:
    description: The UUID of the transport
    in: path
    name: transport_uuid
    required: true
    type: string
  trunkid:
    description: Trunk's ID
    in: path
    name: trunk_id
    required: true
    type: integer
  urltenantuuid:
    description: Resource UUID
    in: path
    name: tenant_uuid
    required: true
    type: string
  user_external_app_view:
    description: 'Different view of the external app endpoint


      The `default` view, when the argument is omitted, is to return the user value
      for this

      external app


      The `fallback` view return the user value for this external app, but if not
      found, will

      fallback to the tenant configured value


      **WARNING**: Using fallback view on list will disabled all pagination and search
      features

      '
    enum:
    - fallback
    in: query
    name: view
    required: false
    type: string
  useriduuid:
    description: the user's ID or UUID
    in: path
    name: user_id
    required: true
    type: string
  useruuid:
    description: the user's UUID
    format: uuid
    in: path
    name: user_uuid
    required: true
    type: string
  view:
    description: Different view of the list of users.
    enum:
    - directory
    - summary
    in: query
    name: view
    required: false
    type: string
  voicemailid:
    in: path
    name: voicemail_id
    required: true
    type: integer
paths:
  /access_features:
    get:
      description: '**Required ACL:** `confd.access_features.read`'
      operationId: list_access_features
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: AccessFeatures list
          schema:
            $ref: '#/definitions/AccessFeatureItems'
      summary: List access features
      tags:
      - access_features
    post:
      description: '**Required ACL:** `confd.access_features.create`'
      operationId: create_access_feature
      parameters:
      - description: Access feature to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccessFeature'
      responses:
        '201':
          description: AccessFeature created
          schema:
            $ref: '#/definitions/AccessFeature'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create access_feature
      tags:
      - access_features
  /access_features/{access_feature_id}:
    delete:
      description: '**Required ACL:** `confd.access_features.{access_feature_id}.delete`'
      operationId: delete_access_feature
      parameters:
      - $ref: '#/parameters/access_featureid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete access feature
      tags:
      - access_features
    get:
      description: '**Required ACL:** `confd.access_features.{access_feature_id}.read`'
      operationId: get_access_feature
      parameters:
      - $ref: '#/parameters/access_featureid'
      responses:
        '200':
          description: AccessFeature
          schema:
            $ref: '#/definitions/AccessFeature'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get access_feature
      tags:
      - access_features
    put:
      description: '**Required ACL:** `confd.access_features.{access_feature_id}.update`'
      operationId: update_access_feature
      parameters:
      - $ref: '#/parameters/access_featureid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AccessFeature'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update access_feature
      tags:
      - access_features
  /agents:
    get:
      description: '**Required ACL:** `confd.agents.read`'
      operationId: list_agents
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Agents list
          schema:
            $ref: '#/definitions/AgentItems'
      summary: List agents
      tags:
      - agents
    post:
      description: '**Required ACL:** `confd.agents.create`'
      operationId: create_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Agent to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Agent'
      responses:
        '201':
          description: Agent created
          schema:
            $ref: '#/definitions/Agent'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create agent
      tags:
      - agents
  /agents/skills:
    get:
      description: '**Required ACL:** `confd.agents.skills.read`'
      operationId: list_skills
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Skills list
          schema:
            $ref: '#/definitions/SkillItems'
      summary: List skill
      tags:
      - agents
      - skills
    post:
      description: '**Required ACL:** `confd.agents.skills.create`'
      operationId: create_skill
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Skill to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Skill'
      responses:
        '201':
          description: Skill created
          schema:
            $ref: '#/definitions/Skill'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create skill
      tags:
      - agents
      - skills
  /agents/skills/{skill_id}:
    delete:
      description: '**Required ACL:** `confd.agents.skills.{skill_id}.delete`'
      operationId: delete_skill
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/skillid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete skill
      tags:
      - skills
    get:
      description: '**Required ACL:** `confd.agents.skills.{skill_id}.read`'
      operationId: get_skill
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/skillid'
      responses:
        '200':
          description: Skill
          schema:
            $ref: '#/definitions/Skill'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get skill
      tags:
      - agents
      - skills
    put:
      description: '**Required ACL:** `confd.agents.skills.{skill_id}.update`'
      operationId: update_skill
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/skillid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Skill'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update skill
      tags:
      - skills
  /agents/{agent_id}:
    delete:
      description: '**Required ACL:** `confd.agents.{agent_id}.delete`'
      operationId: delete_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/agentid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete agent
      tags:
      - agents
    get:
      description: '**Required ACL:** `confd.agents.{agent_id}.read`'
      operationId: get_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/agentid'
      responses:
        '200':
          description: Agent
          schema:
            $ref: '#/definitions/Agent'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get agent
      tags:
      - agents
    put:
      description: '**Required ACL:** `confd.agents.{agent_id}.update`'
      operationId: update_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/agentid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Agent'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update agent
      tags:
      - agents
  /agents/{agent_id}/skills/{skill_id}:
    delete:
      description: '**Required ACL:** `confd.agents.{agent_id}.skills.{skill_id}.delete`'
      operationId: dissociate_agent_skill
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/agentid'
      - $ref: '#/parameters/skillid'
      responses:
        '204':
          description: Skill and Agent dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate agent and skill
      tags:
      - skills
      - agents
    put:
      description: '**Required ACL:** `confd.agents.{agent_id}.skills.{skill_id}.update`'
      operationId: associate_agent_skill
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/agentid'
      - $ref: '#/parameters/skillid'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AgentSkill'
      responses:
        '204':
          description: Association updated
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate agent and skill
      tags:
      - skills
      - agents
  /applications:
    get:
      description: '**Required ACL:** `confd.applications.read`'
      operationId: list_applications
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Applications list
          schema:
            $ref: '#/definitions/ApplicationItems'
      summary: List application
      tags:
      - applications
    post:
      description: '**Required ACL:** `confd.applications.create`'
      operationId: create_application
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Application parameters
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Application'
      responses:
        '201':
          description: The Application has been created
          schema:
            $ref: '#/definitions/Application'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create application
      tags:
      - applications
  /applications/{application_uuid}:
    delete:
      description: '**Required ACL:** `confd.applications.{application_uuid}.delete`'
      operationId: delete_application
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/application_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete application
      tags:
      - applications
    get:
      description: '**Required ACL:** `confd.applications.{application_uuid}.read`'
      operationId: get_application
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/application_uuid'
      responses:
        '200':
          description: Application
          schema:
            $ref: '#/definitions/Application'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get application
      tags:
      - applications
    put:
      description: '**Required ACL:** `confd.applications.{application_uuid}.update`'
      operationId: update_application
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/application_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Application'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update application
      tags:
      - applications
  /asterisk/confbridge/accent_default_bridge:
    get:
      description: '**Required ACL:** `confd.asterisk.confbridge.accent_default_bridge.read`'
      operationId: list_asterisk_confbridge_accent_default_bridge
      responses:
        '200':
          description: ConfBridge accent_default_bridge
          schema:
            $ref: '#/definitions/ConfBridgeConfiguration'
      summary: List ConfBridge accent_default_bridge options
      tags:
      - asterisk
      - conferences
    put:
      description: '**Required ACL:** `confd.asterisk.confbridge.accent_default_bridge.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.
        All available configuration options are listed in the
        [sample](https://raw.githubusercontent.com/asterisk/asterisk/master/configs/samples/confbridge.conf.sample)
        Asterisk configuration file.
        '
      operationId: update_asterisk_confbridge_accent_default_bridge
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ConfBridgeConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update ConfBridge accent_default_bridge option
      tags:
      - asterisk
      - conferences
  /asterisk/confbridge/accent_default_user:
    get:
      description: '**Required ACL:** `confd.asterisk.confbridge.accent_default_user.read`'
      operationId: list_asterisk_confbridge_accent_default_user
      responses:
        '200':
          description: ConfBridge accent_default_user
          schema:
            $ref: '#/definitions/ConfBridgeConfiguration'
      summary: List ConfBridge accent_default_user options
      tags:
      - asterisk
      - conferences
    put:
      description: '**Required ACL:** `confd.asterisk.confbridge.accent_default_user.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.
        All available configuration options are listed in the
        [sample](https://raw.githubusercontent.com/asterisk/asterisk/master/configs/samples/confbridge.conf.sample)
        Asterisk configuration file.
        '
      operationId: update_asterisk_confbridge_accent_default_user
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ConfBridgeConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update ConfBridge accent_default_user option
      tags:
      - asterisk
      - conferences
  /asterisk/features/applicationmap:
    get:
      description: '**Required ACL:** `confd.asterisk.features.applicationmap.read`'
      operationId: list_asterisk_features_applicationmap
      responses:
        '200':
          description: Features applicationmap
          schema:
            $ref: '#/definitions/FeaturesConfiguration'
      summary: List Features applicationmap options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.features.applicationmap.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_features_applicationmap
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/FeaturesConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Features applicationmap option
      tags:
      - asterisk
  /asterisk/features/featuremap:
    get:
      description: '**Required ACL:** `confd.asterisk.features.featuremap.read`'
      operationId: list_asterisk_features_featuremap
      responses:
        '200':
          description: Features featuremap
          schema:
            $ref: '#/definitions/FeaturesConfiguration'
      summary: List Features featuremap options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.features.featuremap.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_features_featuremap
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/FeaturesConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Features featuremap option
      tags:
      - asterisk
  /asterisk/features/general:
    get:
      description: '**Required ACL:** `confd.asterisk.features.general.read`'
      operationId: list_asterisk_features_general
      responses:
        '200':
          description: Features general
          schema:
            $ref: '#/definitions/FeaturesConfiguration'
      summary: List Features general options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.features.general.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_features_general
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/FeaturesConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Features general option
      tags:
      - asterisk
  /asterisk/hep/general:
    get:
      description: '**Required ACL:** `confd.asterisk.hep.general.read`'
      operationId: list_asterisk_hep_general
      responses:
        '200':
          description: HEP general
          schema:
            $ref: '#/definitions/HEPConfiguration'
      summary: List HEP general options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.hep.general.update`


        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_hep_general
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/HEPConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update HEP general option
      tags:
      - asterisk
  /asterisk/iax/callnumberlimits:
    get:
      description: '**Required ACL:** `confd.asterisk.iax.callnumberlimits.read`'
      operationId: list_asterisk_iax_callnumberlimits
      responses:
        '200':
          description: IAX callnumberlimits
          schema:
            $ref: '#/definitions/IAXCallNumberLimitss'
      summary: List IAX callnumberlimits options
      tags:
      - asterisk
      - iax
    put:
      description: '**Required ACL:** `confd.asterisk.iax.callnumberlimits.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_iax_callnumberlimits
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/IAXCallNumberLimitss'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update IAX callnumberlimits option
      tags:
      - asterisk
      - iax
  /asterisk/iax/general:
    get:
      description: '**Required ACL:** `confd.asterisk.iax.general.read`'
      operationId: list_asterisk_iax_general
      responses:
        '200':
          description: IAX general
          schema:
            $ref: '#/definitions/IAXGeneral'
      summary: List IAX general options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.iax.general.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_iax_general
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/IAXGeneral'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update IAX general option
      tags:
      - asterisk
  /asterisk/pjsip/doc:
    get:
      description: '**Required ACL:**: `confd.asterisk.pjsip.doc.read`
        List all available configuration options for PJSIP, those values are
        used to validate to content of POST and PUT requests.
        '
      operationId: show_pjsip_doc
      responses:
        '200':
          description: A list of all PJSIP configuration options
          schema:
            $ref: '#/definitions/PJSIPConfigurationOptions'
        '400':
          description: accent-confd could not read the PJSIP documentation file
          schema:
            $ref: '#/definitions/Error'
      summary: List all PJSIP configuration options
      tags:
      - asterisk
      - sip
  /asterisk/pjsip/global:
    get:
      description: '**Required ACL:** `confd.asterisk.pjsip.global.read`'
      operationId: list_asterisk_pjsip_global
      responses:
        '200':
          description: SIP global
          schema:
            $ref: '#/definitions/PJSIPGlobal'
      summary: List of PJSIP options for the `global` section
      tags:
      - asterisk
      - sip
    put:
      description: '**Required ACL:** `confd.asterisk.pjsip.global.update`
        The PJSIP global configuration is shared among all tenants of an instance.
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.
        '
      operationId: update_asterisk_pjsip_global
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/PJSIPGlobal'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update PJSIP section options
      tags:
      - sip
      - asterisk
  /asterisk/pjsip/system:
    get:
      description: '**Required ACL:** `confd.asterisk.pjsip.system.read`'
      operationId: list_asterisk_pjsip_system
      responses:
        '200':
          description: SIP system
          schema:
            $ref: '#/definitions/PJSIPSystem'
      summary: List of PJSIP options for the `system` section
      tags:
      - asterisk
      - sip
    put:
      description: '**Required ACL:** `confd.asterisk.pjsip.system.update`
        The PJSIP system configuration is shared among all tenants of an instance.
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.
        '
      operationId: update_asterisk_pjsip_system
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/PJSIPSystem'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update PJSIP section options
      tags:
      - sip
      - asterisk
  /asterisk/queues/general:
    get:
      description: '**Required ACL:** `confd.asterisk.queue.general.read`'
      operationId: list_asterisk_queue_general
      responses:
        '200':
          description: Queue general
          schema:
            $ref: '#/definitions/QueueGeneral'
      summary: List Queue general options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.queue.general.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_queue_general
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/QueueGeneral'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Queue general option
      tags:
      - asterisk
  /asterisk/rtp/general:
    get:
      description: '**Required ACL:** `confd.asterisk.rtp.general.read`'
      operationId: list_asterisk_rtp_general
      responses:
        '200':
          description: RTP general
          schema:
            $ref: '#/definitions/RTPConfiguration'
      summary: List RTP general options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.rtp.general.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_rtp_general
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/RTPConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update RTP general option
      tags:
      - asterisk
  /asterisk/rtp/ice_host_candidates:
    get:
      description: '**Required ACL:** `confd.asterisk.rtp.ice_host_candidates.read`'
      operationId: list_asterisk_rtp_ice_host_candidates
      responses:
        '200':
          description: RTP ice_host_candidates
          schema:
            $ref: '#/definitions/RTPConfiguration'
      summary: List RTP ice_host_candidates options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.rtp.ice_host_candidates.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_rtp_ice_host_candidates
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/RTPConfiguration'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update RTP ice_host_candidates option
      tags:
      - asterisk
  /asterisk/sccp/general:
    get:
      description: '**Required ACL:** `confd.asterisk.sccp.general.read`'
      operationId: list_asterisk_sccp_general
      responses:
        '200':
          description: SCCP general
          schema:
            $ref: '#/definitions/SCCPGeneral'
      summary: List SCCP general options
      tags:
      - asterisk
      - sccp
    put:
      description: '**Required ACL:** `confd.asterisk.sccp.general.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_sccp_general
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SCCPGeneral'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update SCCP general option
      tags:
      - asterisk
      - sccp
  /asterisk/voicemail/general:
    get:
      description: '**Required ACL:** `confd.asterisk.voicemail.general.read`'
      operationId: list_asterisk_voicemail_general
      responses:
        '200':
          description: Voicemail general
          schema:
            $ref: '#/definitions/VoicemailGeneral'
      summary: List Voicemail general options
      tags:
      - asterisk
    put:
      description: '**Required ACL:** `confd.asterisk.voicemail.general.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_voicemail_general
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/VoicemailGeneral'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Voicemail general option
      tags:
      - asterisk
  /asterisk/voicemail/zonemessages:
    get:
      description: '**Required ACL:** `confd.asterisk.voicemail.zonemessages.read`'
      operationId: list_asterisk_voicemail_zonemessages
      responses:
        '200':
          description: Voicemail zonemessages
          schema:
            $ref: '#/definitions/VoicemailZoneMessages'
      summary: List Voicemail zonemessages options
      tags:
      - asterisk
      - voicemails
    put:
      description: '**Required ACL:** `confd.asterisk.voicemail.zonemessages.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_asterisk_voicemail_zonemessages
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/VoicemailZoneMessages'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Voicemail zonemessages option
      tags:
      - asterisk
      - voicemails
  /callfilters:
    get:
      description: '**Required ACL:** `confd.callfilters.read`'
      operationId: list_call_filters
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Call Filters list
          schema:
            $ref: '#/definitions/CallFilterItems'
      summary: List call filters
      tags:
      - callfilters
    post:
      description: '**Required ACL:** `confd.callfilters.create`'
      operationId: create_callfilter
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Call Filter to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallFilter'
      responses:
        '201':
          description: Call Filter created
          schema:
            $ref: '#/definitions/CallFilter'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create call filter
      tags:
      - callfilters
  /callfilters/{callfilter_id}:
    delete:
      description: '**Required ACL:** `confd.callfilters.{callfilter_id}.delete`
        . The call filter will also be removed from all users, groups, incoming calls
        and outgoing calls.'
      operationId: delete_callfilter
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callfilterid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete call filter
      tags:
      - callfilters
    get:
      description: '**Required ACL:** `confd.callfilters.{callfilter_id}.read`'
      operationId: get_callfilter
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callfilterid'
      responses:
        '200':
          description: Call Filter
          schema:
            $ref: '#/definitions/CallFilter'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get call filter
      tags:
      - callfilters
    put:
      description: '**Required ACL:** `confd.callfilters.{callfilter_id}.update`'
      operationId: update_callfilter
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callfilterid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallFilter'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call filter
      tags:
      - callfilters
  /callfilters/{callfilter_id}/fallbacks:
    get:
      description: '**Required ACL:** `confd.callfilters.{callfilter_id}.fallbacks.read`'
      operationId: get_call_filter_fallback
      parameters:
      - $ref: '#/parameters/callfilterid'
      responses:
        '200':
          description: Fallbacks for call filter
          schema:
            $ref: '#/definitions/CallFilterFallbacks'
      summary: List all fallbacks for call filter
      tags:
      - callfilters
    put:
      description: '**Required ACL:** `confd.callfilters.{callfilter_id}.fallbacks.update`
        **WARNING** This endpoint delete all fields that are not defined.'
      operationId: update_call_filter_fallback
      parameters:
      - $ref: '#/parameters/callfilterid'
      - description: Fallbacks for call filter
        in: body
        name: body
        schema:
          $ref: '#/definitions/CallFilterFallbacks'
      responses:
        '204':
          description: CallFilter's fallbacks updated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call filter's fallbacks
      tags:
      - callfilters
  /callfilters/{callfilter_id}/recipients/users:
    put:
      description: '**Required ACL:** `confd.callfilters.{callfilter_id}.recipients.users.update`
        **WARNING**
        This endpoint remove all recipients which are not defined.
        '
      operationId: update_call_filter_caller_users
      parameters:
      - $ref: '#/parameters/callfilterid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallFilterRecipientUsersUuid'
      responses:
        '204':
          description: Call Filter and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call filter and recipients
      tags:
      - callfilters
      - users
  /callfilters/{callfilter_id}/surrogates/users:
    put:
      description: '**Required ACL:** `confd.callfilters.{callfilter_id}.surrogates.users.update`
        **WARNING**
        This endpoint remove all surrogates which are not defined.
        '
      operationId: update_call_filter_member_users
      parameters:
      - $ref: '#/parameters/callfilterid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UsersUuid'
      responses:
        '204':
          description: Call Filter and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call filter and surrogates
      tags:
      - callfilters
      - users
  /callpermissions:
    get:
      description: '**Required ACL:** `confd.callpermissions.read`'
      operationId: list_callpermissions
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Call Permissions list
          schema:
            $ref: '#/definitions/CallPermissionItems'
      summary: List call permissions
      tags:
      - callpermissions
    post:
      description: '**Required ACL:** `confd.callpermissions.create`'
      operationId: create_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Call Permission to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallPermission'
      responses:
        '201':
          description: Call Permission created
          schema:
            $ref: '#/definitions/CallPermission'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create call permission
      tags:
      - callpermissions
  /callpermissions/{callpermission_id}:
    delete:
      description: '**Required ACL:** `confd.callpermissions.{callpermission_id}.delete`
        . The call permission will also be removed from all users, groups, incoming
        calls and outgoing calls.'
      operationId: delete_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete call permission
      tags:
      - callpermissions
    get:
      description: '**Required ACL:** `confd.callpermissions.{callpermission_id}.read`'
      operationId: get_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '200':
          description: Call Permission
          schema:
            $ref: '#/definitions/CallPermission'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get call permission
      tags:
      - callpermissions
    put:
      description: '**Required ACL:** `confd.callpermissions.{callpermission_id}.update`'
      operationId: update_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpermissionid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallPermission'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call permission
      tags:
      - callpermissions
  /callpickups:
    get:
      description: '**Required ACL:** `confd.callpickups.read`'
      operationId: list_call_pickups
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Call Pickups list
          schema:
            $ref: '#/definitions/CallPickupItems'
      summary: List call pickups
      tags:
      - callpickups
    post:
      description: '**Required ACL:** `confd.callpickups.create`'
      operationId: create_callpickup
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Call Pickup to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallPickup'
      responses:
        '201':
          description: Call Pickup created
          schema:
            $ref: '#/definitions/CallPickup'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create call pickup
      tags:
      - callpickups
  /callpickups/{callpickup_id}:
    delete:
      description: '**Required ACL:** `confd.callpickups.{callpickup_id}.delete`'
      operationId: delete_callpickup
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpickupid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete call pickup
      tags:
      - callpickups
    get:
      description: '**Required ACL:** `confd.callpickups.{callpickup_id}.read`'
      operationId: get_callpickup
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpickupid'
      responses:
        '200':
          description: Call Pickup
          schema:
            $ref: '#/definitions/CallPickup'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get call pickup
      tags:
      - callpickups
    put:
      description: '**Required ACL:** `confd.callpickups.{callpickup_id}.update`'
      operationId: update_callpickup
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpickupid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CallPickup'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call pickup
      tags:
      - callpickups
  /callpickups/{callpickup_id}/interceptors/groups:
    put:
      description: '**Required ACL:** `confd.callpickups.{callpickup_id}.interceptors.groups.update`
        **WARNING**
        This endpoint remove all interceptors which are not defined.
        '
      operationId: update_call_pickup_interceptor_groups
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpickupid'
      - description: Groups to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupsID'
      responses:
        '204':
          description: Call Filter and Groups associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call pickup and interceptors
      tags:
      - callpickups
      - groups
  /callpickups/{callpickup_id}/interceptors/users:
    put:
      description: '**Required ACL:** `confd.callpickups.{callpickup_id}.interceptors.users.update`
        **WARNING**
        This endpoint remove all interceptors which are not defined.
        '
      operationId: update_call_pickup_interceptor_users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpickupid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UsersUuid'
      responses:
        '204':
          description: Call Filter and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call pickup and interceptors
      tags:
      - callpickups
      - users
  /callpickups/{callpickup_id}/targets/groups:
    put:
      description: '**Required ACL:** `confd.callpickups.{callpickup_id}.targets.groups.update`
        **WARNING**
        This endpoint remove all targets which are not defined.
        '
      operationId: update_call_pickup_target_groups
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpickupid'
      - description: Groups to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupsID'
      responses:
        '204':
          description: Call Filter and Groups associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call pickup and targets
      tags:
      - callpickups
      - groups
  /callpickups/{callpickup_id}/targets/users:
    put:
      description: '**Required ACL:** `confd.callpickups.{callpickup_id}.targets.users.update`
        **WARNING**
        This endpoint remove all targets which are not defined.
        '
      operationId: update_call_pickup_target_users
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/callpickupid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UsersUuid'
      responses:
        '204':
          description: Call Filter and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update call pickup and targets
      tags:
      - callpickups
      - users
  /conferences:
    get:
      description: '**Required ACL:** `confd.conferences.read`'
      operationId: list_conferences
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Conferences list
          schema:
            $ref: '#/definitions/ConferenceItems'
      summary: List conference
      tags:
      - conferences
    post:
      description: '**Required ACL:** `confd.conferences.create`
        All conferences have the same menu. Please consult the asterisk
        [documentation](https://raw.githubusercontent.com/asterisk/asterisk/master/configs/samples/confbridge.conf.sample)
        for definitions:
        ```
        * = playback_and_continue
        1 = toggle_mute
        4 = decrease_listening_volume
        5 = reset_listening_volume
        6 = increase_listening_volume
        7 = decrease_talking_volume
        8 = reset_talking_volume
        9 = increase_talking_volume
        ```

        And the following options are added to the admin user:

        ```
        2 = admin_toggle_conference_lock
        3 = admin_kick_last
        0 = admin_toggle_mute_participants''
        ```
        '
      operationId: create_conference
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Conference to create
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Conference'
      responses:
        '201':
          description: Conference created
          schema:
            $ref: '#/definitions/Conference'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create conference
      tags:
      - conferences
  /conferences/{conference_id}:
    delete:
      description: '**Required ACL:** `confd.conferences.{conference_id}.delete`'
      operationId: delete_conference
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/conferenceid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete conference
      tags:
      - conferences
    get:
      description: '**Required ACL:** `confd.conferences.{conference_id}.read`'
      operationId: get_conference
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/conferenceid'
      responses:
        '200':
          description: Conference
          schema:
            $ref: '#/definitions/Conference'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get conference
      tags:
      - conferences
    put:
      description: '**Required ACL:** `confd.conferences.{conference_id}.update`'
      operationId: update_conference
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/conferenceid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Conference'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update conference
      tags:
      - conferences
  /conferences/{conference_id}/extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.conferences.{conference_id}.extensions.{extension_id}.delete`'
      operationId: dissociate_conference_extension
      parameters:
      - $ref: '#/parameters/conferenceid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Conference and Extension dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate conference and extension
      tags:
      - conferences
      - extensions
    put:
      description: '**Required ACL:** `confd.conferences.{conference_id}.extensions.{extension_id}.update`'
      operationId: associate_conference_extension
      parameters:
      - $ref: '#/parameters/conferenceid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Conference and Extension associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate conference and extension
      tags:
      - conferences
      - extensions
  /configuration/live_reload:
    get:
      description: '**Required ACL:** `confd.configuration.live_reload.read`'
      operationId: get_configuration
      responses:
        '200':
          description: Live reload status
          schema:
            $ref: '#/definitions/LiveReload'
      summary: Get live reload status
      tags:
      - configuration
    put:
      description: '**Required ACL:** `confd.configuration.live_reload.update`'
      operationId: update_configuration
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/LiveReload'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update live reload status
      tags:
      - configuration
  /contexts:
    get:
      description: '**Required ACL:** `confd.contexts.read`'
      operationId: list_contexts
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Contexts list
          schema:
            $ref: '#/definitions/ContextItems'
      summary: List contexts
      tags:
      - contexts
    post:
      description: '**Required ACL:** `confd.contexts.create`'
      operationId: create_context
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Context to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Context'
      responses:
        '201':
          description: Context created
          schema:
            $ref: '#/definitions/Context'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create context
      tags:
      - contexts
  /contexts/{context_id}:
    delete:
      description: '**Required ACL:** `confd.contexts.{context_id}.delete`'
      operationId: delete_context
      parameters:
      - $ref: '#/parameters/contextid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete context
      tags:
      - contexts
    get:
      description: '**Required ACL:** `confd.contexts.{context_id}.read`'
      operationId: get_context
      parameters:
      - $ref: '#/parameters/contextid'
      responses:
        '200':
          description: Context
          schema:
            $ref: '#/definitions/Context'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get context
      tags:
      - contexts
    put:
      description: '**Required ACL:** `confd.contexts.{context_id}.update`'
      operationId: update_context
      parameters:
      - $ref: '#/parameters/contextid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Context'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update context
      tags:
      - contexts
  /contexts/{context_id}/contexts:
    put:
      description: '**Required ACL:** `confd.contexts.{context_id}.contexts.update`'
      operationId: associate_context_contexts
      parameters:
      - $ref: '#/parameters/contextid'
      - description: Contexts to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ContextsId'
      responses:
        '204':
          description: Context and Contexts associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Include contexts inside context
      tags:
      - contexts
  /contexts/{context_id}/ranges/{range_type}:
    get:
      description: '**Required ACL:** `confd.contexts.{context_id}.ranges.{range_type}.read`


        List the extension range for a given context and resource type. When filtering

        using the `availability=available` query string the range will be split into
        multiple

        sub-ranges to only contain extension numbers that are available.


        If a given extension exists but is not assigned to any resource it will still

        be considered to be unavailable and therefore will not be included in the
        list

        of available extension

        '
      operationId: list_contexts_range
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/rangetype'
      - $ref: '#/parameters/availability'
      - $ref: '#/parameters/contextid'
      responses:
        '200':
          description: Contexts list of ranges for that destination type in that context
          schema:
            $ref: '#/definitions/ContextRangeItems'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: List contexts range
      tags:
      - contexts
  /devices:
    get:
      description: '**Required ACL:** `confd.devices.read`'
      operationId: list_devices
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Device list
          schema:
            $ref: '#/definitions/DeviceItems'
        '400':
          $ref: '#/responses/GenericError'
      summary: List devices
      tags:
      - devices
    post:
      description: '**Required ACL:** `confd.devices.create`'
      operationId: create_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Device to create
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Device'
      responses:
        '201':
          description: Device created
          schema:
            $ref: '#/definitions/Device'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create device
      tags:
      - devices
  /devices/unallocated:
    get:
      description: '**Required ACL:** `confd.devices.unallocated.read`'
      operationId: list_unallocated_devices
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Device list
          schema:
            $ref: '#/definitions/DeviceItems'
        '400':
          $ref: '#/responses/GenericError'
      summary: List unallocated devices
      tags:
      - devices
  /devices/unallocated/{device_id}:
    put:
      description: '**Required ACL:** `confd.devices.unallocated.{device_id}.update`'
      operationId: assign_unallocated_device_tenant
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/deviceid'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Assign unallocated device tenant
      tags:
      - devices
  /devices/{device_id}:
    delete:
      description: '**Required ACL:** `confd.devices.{device_id}.delete`


        A device can not be deleted if it is linked to a line. You must dissociate
        the line and the device first.'
      operationId: delete_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/deviceid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete device
      tags:
      - devices
    get:
      description: '**Required ACL:** `confd.devices.{device_id}.read`'
      operationId: get_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/deviceid'
      responses:
        '200':
          description: Device
          schema:
            $ref: '#/definitions/Device'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get device
      tags:
      - devices
    put:
      description: '**Required ACL:** `confd.devices.{device_id}.update`'
      operationId: update_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/deviceid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Device'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update device
      tags:
      - devices
  /devices/{device_id}/autoprov:
    get:
      description: "**Required ACL:** `confd.devices.{device_id}.autoprov.read`\n\n\
        Resets a device into \u2018autoprov\u2019 mode. Once in autoprov, a device\
        \ can be reprovisionned using another provisioning code. The device\u2019\
        s configuration will be lost when reset to autoprov mode."
      operationId: reset_device_autoprov
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/deviceid'
      responses:
        '204':
          description: Device synchronized
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Reset device to autoprov
      tags:
      - devices
  /devices/{device_id}/lines:
    get:
      description: '**Required ACL:** `confd.devices.{device_id}.lines.read`'
      operationId: get_device_line_association
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/deviceid'
      responses:
        '200':
          description: Line-Device association
          schema:
            $ref: '#/definitions/LineDeviceItems'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: List lines associated to device
      tags:
      - lines
      - devices
  /devices/{device_id}/synchronize:
    get:
      description: "**Required ACL:** `confd.devices.{device_id}.synchronize.read`\n\
        \nSynchronize a device\u2019s configuration. Used when a configuration has\
        \ been modified and the changes need to be sent to the device."
      operationId: synchronize_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/deviceid'
      responses:
        '204':
          description: Device synchronized
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Synchronize device
      tags:
      - devices
  /dhcp:
    get:
      description: '**Required ACL:** `confd.dhcp.read`'
      operationId: get_dhcp
      responses:
        '200':
          description: DHCP configuration
          schema:
            $ref: '#/definitions/DHCP'
      summary: Get DHCP configuration
      tags:
      - dhcp
    put:
      description: '**Required ACL:** `confd.dhcp.update`'
      operationId: update_dhcp
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DHCP'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
      summary: Update DHCP configuration
      tags:
      - dhcp
  /emails:
    get:
      description: '**Required ACL:** `confd.emails.read`'
      operationId: get_emails_config
      responses:
        '200':
          description: E-mail configuration
          schema:
            $ref: '#/definitions/EmailConfig'
      summary: Get e-mail configuration
      tags:
      - emails
    put:
      description: '**Required ACL:** `confd.emails.update`
        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_emails_config
      parameters:
      - description: E-mail configuration
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EmailConfig'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update e-mail configuration
      tags:
      - emails
  /endpoints/custom:
    get:
      description: '**Required ACL:** `confd.endpoints.custom.read`'
      operationId: list_endpoints_custom
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Custom endpoint list
          schema:
            $ref: '#/definitions/EndpointCustomItems'
      summary: List Custom endpoints
      tags:
      - endpoints
      - custom
    post:
      description: '**Required ACL:** `confd.endpoints.custom.create`'
      operationId: create_endpoint_custom
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Custom Endpoint to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EndpointCustom'
      responses:
        '201':
          description: Custom endpoint created
          schema:
            $ref: '#/definitions/EndpointCustom'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create Custom endpoint
      tags:
      - endpoints
      - custom
  /endpoints/custom/{custom_id}:
    delete:
      description: '**Required ACL:** `confd.endpoints.custom.{custom_id}.delete`'
      operationId: delete_endpoint_custom
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/customid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete Custom Endpoint
      tags:
      - endpoints
      - custom
    get:
      description: '**Required ACL:** `confd.endpoints.custom.{custom_id}.read`'
      operationId: get_endpoint_custom
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/customid'
      responses:
        '200':
          description: Custom Endpoint
          schema:
            $ref: '#/definitions/EndpointCustom'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get Custom Endpoint
      tags:
      - endpoints
      - custom
    put:
      description: '**Required ACL:** `confd.endpoints.custom.{custom_id}.update`'
      operationId: update_endpoint_custom
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/customid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EndpointCustom'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Custom Endpoint
      tags:
      - endpoints
      - custom
  /endpoints/iax:
    get:
      description: '**Required ACL:** `confd.endpoints.iax.read`'
      operationId: list_endpoints_iax
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: IAX endpoint list
          schema:
            $ref: '#/definitions/EndpointIAXItems'
      summary: List IAX endpoints
      tags:
      - endpoints
      - iax
    post:
      description: '**Required ACL:** `confd.endpoints.iax.create`'
      operationId: create_endpoint_iax
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: IAX Endpoint to create
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/EndpointIAX'
      responses:
        '201':
          description: IAX endpoint created
          schema:
            $ref: '#/definitions/EndpointIAX'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create IAX endpoint
      tags:
      - endpoints
      - iax
  /endpoints/iax/{iax_id}:
    delete:
      description: '**Required ACL:** `confd.endpoints.iax.{iax_id}.delete`'
      operationId: delete_endpoint_iax
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/iaxid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete IAX Endpoint
      tags:
      - endpoints
      - iax
    get:
      description: '**Required ACL:** `confd.endpoints.iax.{iax_id}.read`'
      operationId: get_endpoint_iax
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/iaxid'
      responses:
        '200':
          description: IAX Endpoint
          schema:
            $ref: '#/definitions/EndpointIAX'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get IAX Endpoint
      tags:
      - endpoints
      - iax
    put:
      description: '**Required ACL:** `confd.endpoints.iax.{iax_id}.update`'
      operationId: update_endpoint_iax
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/iaxid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EndpointIAX'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update IAX Endpoint
      tags:
      - endpoints
      - iax
  /endpoints/sccp:
    get:
      description: '**Required ACL:** `confd.endpoints.sccp.read`'
      operationId: list_endpoints_sccp
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: SCCP endpoint list
          schema:
            $ref: '#/definitions/EndpointSccpItems'
      summary: List SCCP endpoints
      tags:
      - endpoints
      - sccp
    post:
      description: '**Required ACL:** `confd.endpoints.sccp.create`'
      operationId: create_endpoint_sccp
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: SCCP Endpoint to create
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/EndpointSccp'
      responses:
        '201':
          description: SCCP endpoint created
          schema:
            $ref: '#/definitions/EndpointSccp'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create SCCP endpoint
      tags:
      - endpoints
      - sccp
  /endpoints/sccp/{sccp_id}:
    delete:
      description: '**Required ACL:** `confd.endpoints.sccp.{sccp_id}.delete`'
      operationId: delete_endpoint_sccp
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sccpid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete SCCP Endpoint
      tags:
      - endpoints
      - sccp
    get:
      description: '**Required ACL:** `confd.endpoints.sccp.{sccp_id}.read`'
      operationId: get_endpoint_sccp
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sccpid'
      responses:
        '200':
          description: SCCP Endpoint
          schema:
            $ref: '#/definitions/EndpointSccp'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get SCCP Endpoint
      tags:
      - endpoints
      - sccp
    put:
      description: '**Required ACL:** `confd.endpoints.sccp.{sccp_id}.update`'
      operationId: update_endpoint_sccp
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sccpid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EndpointSccp'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update SCCP Endpoint
      tags:
      - endpoints
      - sccp
  /endpoints/sip:
    get:
      description: '**Required ACL:** `confd.endpoints.sip.read`


        List all SIP configurations, each individual configuration includes only fields
        that it

        defines. Inherited fields from the templates or default values are not returned
        here.

        '
      operationId: list_endpoints_sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: SIP endpoint list
          schema:
            $ref: '#/definitions/EndpointSIPItems'
      summary: List SIP endpoints
      tags:
      - endpoints
      - sip
    post:
      description: '**Required ACL:** `confd.endpoints.sip.create`
        Create a new SIP endpoint. This endpoint can inherit from other endpoints,
        only modify
        fields that have to be modified.
        '
      operationId: create_endpoint_sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: SIP Endpoint to create
        in: body
        name: body
        schema:
          $ref: '#/definitions/EndpointSIP'
      responses:
        '201':
          description: SIP endpoint created
          schema:
            $ref: '#/definitions/EndpointSIP'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create a SIP endpoint
      tags:
      - endpoints
      - sip
  /endpoints/sip/templates:
    get:
      description: '**Required ACL:** `confd.endpoints.sip.templates.read`
        List all SIP configuration templates, each individual configuration includes
        only fields that it
        defines. Inherited fields from the templates or default values are not returned
        here.
        '
      operationId: list_endpoints_sip_templates
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: SIP endpoint template list
          schema:
            $ref: '#/definitions/EndpointSIPItems'
      summary: List SIP endpoints templates
      tags:
      - endpoints
      - sip
    post:
      description: '**Required ACL:** `confd.endpoints.sip.templates.create`
        Create a new SIP endpoint configuration template. This endpoint can inherit
        from other templates,
        only modify fields that have to be modified.
        '
      operationId: create_endpoint_sip_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: SIP Endpoint to create
        in: body
        name: body
        schema:
          $ref: '#/definitions/EndpointSIP'
      responses:
        '201':
          description: SIP endpoint created
          schema:
            $ref: '#/definitions/EndpointSIP'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create a SIP endpoint template
      tags:
      - endpoints
      - sip
  /endpoints/sip/templates/{template_uuid}:
    delete:
      description: '**Required ACL:** `confd.endpoints.sip.templates.{template_uuid}.delete`'
      operationId: delete_endpoint_sip_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/template_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete SIP Endpoint Template
      tags:
      - endpoints
      - sip
    get:
      description: '**Required ACL:** `confd.endpoints.sip.templates.{template_uuid}.read`'
      operationId: get_endpoint_sip_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/template_uuid'
      responses:
        '200':
          description: SIP Endpoint template
          schema:
            $ref: '#/definitions/EndpointSIP'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get SIP Endpoint template
      tags:
      - sip
      - endpoints
    put:
      description: '**Required ACL:** `confd.endpoints.sip.templates.{template_uuid}.update`'
      operationId: update_endpoint_sip_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/template_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EndpointSIP'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update SIP Endpoint Template
      tags:
      - endpoints
      - sip
  /endpoints/sip/{sip_uuid}:
    delete:
      description: '**Required ACL:** `confd.endpoints.sip.{sip_uuid}.delete`'
      operationId: delete_endpoint_sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sipuuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete SIP Endpoint
      tags:
      - endpoints
      - sip
    get:
      description: '**Required ACL:** `confd.endpoints.sip.{sip_uuid}.read`'
      operationId: get_endpoint_sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sipuuid'
      - $ref: '#/parameters/endpoint_sip_view'
      responses:
        '200':
          description: SIP Endpoint
          schema:
            $ref: '#/definitions/EndpointSIP'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get SIP Endpoint
      tags:
      - sip
      - endpoints
    put:
      description: '**Required ACL:** `confd.endpoints.sip.{sip_uuid}.update`'
      operationId: update_endpoint_sip
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sipuuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/EndpointSIP'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update SIP Endpoint
      tags:
      - endpoints
      - sip
  /extensions:
    get:
      description: '**Required ACL:** `confd.extensions.read`'
      operationId: list_extensions
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - description: "Filter extensions of a certain type. Internal: Used for calling\
          \ a line with an internal number (e.g. \u201C1000@default\u201D). Incall:\
          \ Used for calling a line from the outside (e.g. \u201Cfrom-extern\u201D\
          \ with a DID)"
        enum:
        - internal
        - incall
        in: query
        name: type
        type: string
      - description: Filter extensions by exten number
        in: query
        name: exten
        type: string
      - description: Filter extensions by context name
        in: query
        name: context
        type: string
      responses:
        '200':
          description: Extension list
          schema:
            $ref: '#/definitions/ExtensionItems'
      summary: List extensions
      tags:
      - extensions
    post:
      description: '**Required ACL:** `confd.extensions.create`


        The extension number must be included in one of the extension ranges for the
        given context.'
      operationId: create_extension
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Extension to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Extension'
      responses:
        '201':
          description: Extension created
          schema:
            $ref: '#/definitions/Extension'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create extension
      tags:
      - extensions
  /extensions/features:
    get:
      description: '**Required ACL:** `confd.extensions.features.read`'
      operationId: list_extensions_features
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Extension feature list
          schema:
            $ref: '#/definitions/ExtensionFeatureItems'
      summary: List extensions features
      tags:
      - extensions
  /extensions/features/{extension_uuid}:
    get:
      description: '**Required ACL:** `confd.extensions.features.{extension_uuid}.read`'
      operationId: get_extension_feature
      parameters:
      - $ref: '#/parameters/extensionuuid'
      responses:
        '200':
          description: Extension feature
          schema:
            $ref: '#/definitions/ExtensionFeature'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get extension feature
      tags:
      - extensions
    put:
      description: '**Required ACL:** `confd.extensions.features.{extension_uuid}.update`'
      operationId: update_extension_feature
      parameters:
      - $ref: '#/parameters/extensionuuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ExtensionFeature'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update extension
      tags:
      - extensions
  /extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.extensions.{extension_id}.delete`


        An extension can not be deleted if it is associated to a line. You must delete
        the association first.'
      operationId: delete_extension
      parameters:
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete extension
      tags:
      - extensions
    get:
      description: '**Required ACL:** `confd.extensions.{extension_id}.read`'
      operationId: get_extension
      parameters:
      - $ref: '#/parameters/extensionid'
      responses:
        '200':
          description: Extension
          schema:
            $ref: '#/definitions/Extension'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get extension
      tags:
      - extensions
    put:
      description: '**Required ACL:** `confd.extensions.{extension_id}.update`


        The new extension number must be included in one of the extension ranges for
        the new context.'
      operationId: update_extension
      parameters:
      - $ref: '#/parameters/extensionid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Extension'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update extension
      tags:
      - extensions
  /external/apps:
    get:
      description: '**Required ACL:** `confd.external.apps.read`'
      operationId: list_external_apps
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: External apps list
          schema:
            $ref: '#/definitions/ExternalAppItems'
      summary: List external apps
      tags:
      - external_apps
  /external/apps/{app_name}:
    delete:
      description: '**Required ACL:** `confd.external.apps.{app_name}.delete`'
      operationId: delete_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/externalappname'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete external app
      tags:
      - external_apps
    get:
      description: '**Required ACL:** `confd.external.apps.{app_name}.read`'
      operationId: get_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/externalappname'
      responses:
        '200':
          description: External App
          schema:
            $ref: '#/definitions/ExternalApp'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get external app
      tags:
      - external_apps
    post:
      description: '**Required ACL:** `confd.external.apps.{app_name}.create`'
      operationId: create_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/externalappname'
      - description: External app to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ExternalApp'
      responses:
        '201':
          description: External app created
          schema:
            $ref: '#/definitions/ExternalApp'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create external app
      tags:
      - external_apps
    put:
      description: '**Required ACL:** `confd.external.apps.{app_name}.update`'
      operationId: update_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/externalappname'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ExternalApp'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update external app
      tags:
      - external_apps
  /funckeys/destinations:
    get:
      description: '**Required ACL:** `confd.funckeys.destinations.read`'
      operationId: list_func_key_destinations
      responses:
        '200':
          description: List of destinations
          schema:
            $ref: '#/definitions/FuncKeyDestinationItems'
      summary: List of possible func key destinations and their parameters
      tags:
      - funckeys
  /funckeys/templates:
    get:
      description: '**Required ACL:** `confd.funckeys.templates.read`'
      operationId: list_func_key_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      responses:
        '200':
          description: List Func key template
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: List a func key template
      tags:
      - funckeys
    post:
      description: '**Required ACL:** `confd.funckeys.templates.create`'
      operationId: create_func_key_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Template to create
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/FuncKeyTemplate'
      responses:
        '201':
          description: Template created
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create a template of func keys
      tags:
      - funckeys
  /funckeys/templates/{template_id}:
    delete:
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.delete`'
      operationId: delete_func_key_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete func key template
      tags:
      - funckeys
    get:
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.read`'
      operationId: get_func_key_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      responses:
        '200':
          description: Func key template
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get a func key template
      tags:
      - funckeys
    put:
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.update`


        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_func_key_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/FuncKeyTemplate'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update a func key template
      tags:
      - funckeys
  /funckeys/templates/{template_id}/users:
    get:
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.users.read`'
      operationId: list_func_key_template_user_associations
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      responses:
        '200':
          description: User-FuncKeyTemplate associations
          schema:
            $ref: '#/definitions/UserFuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: List users associated to template
      tags:
      - funckeys
      - users
  /funckeys/templates/{template_id}/{position}:
    delete:
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.{position}.delete`'
      operationId: delete_func_key
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Remove func key from template
      tags:
      - funckeys
    get:
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.{position}.read`'
      operationId: get_func_key
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '200':
          description: Func key
          schema:
            $ref: '#/definitions/FuncKey'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get a func key inside template
      tags:
      - funckeys
    put:
      description: '**Required ACL:** `confd.funckeys.templates.{template_id}.{position}.update`'
      operationId: update_func_key
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/templateid'
      - $ref: '#/parameters/funckeyposition'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/FuncKey'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Add/Replace a func key in a template
      tags:
      - funckeys
  /groups:
    get:
      description: '**Required ACL:** `confd.groups.read`'
      operationId: list_groups
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Groups list
          schema:
            $ref: '#/definitions/GroupItems'
      summary: List groups
      tags:
      - groups
    post:
      description: '**Required ACL:** `confd.groups.create`'
      operationId: create_group
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Group to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        '201':
          description: Group created
          schema:
            $ref: '#/definitions/Group'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create group
      tags:
      - groups
  /groups/{group_uuid}:
    delete:
      description: '**Required ACL:** `confd.groups.{group_uuid}.delete`'
      operationId: delete_group
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/groupuuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete group
      tags:
      - groups
    get:
      description: '**Required ACL:** `confd.groups.{group_uuid}.read`'
      operationId: get_group
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/groupuuid'
      responses:
        '200':
          description: Group
          schema:
            $ref: '#/definitions/Group'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get group
      tags:
      - groups
    put:
      description: '**Required ACL:** `confd.groups.{group_uuid}.update`'
      operationId: update_group
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/groupuuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update group
      tags:
      - groups
  /groups/{group_uuid}/callpermissions/{callpermission_id}:
    delete:
      description: '**Required ACL:** `confd.groups.{group_id}.callpermissions.{call_permission_id}.delete`'
      operationId: dissociate_group_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/groupuuid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '204':
          description: Group and Call Permission dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate group and call permission
      tags:
      - groups
      - callpermissions
    put:
      description: '**Required ACL:** `confd.groups.{group_uuid}.callpermissions.{call_permission_id}.update`'
      operationId: associate_group_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/groupuuid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate group and call permission
      tags:
      - groups
      - callpermissions
  /groups/{group_uuid}/extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.groups.{group_uuid}.extensions.{extension_id}.delete`'
      operationId: dissociate_group_extension
      parameters:
      - $ref: '#/parameters/groupuuid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Group and Extension dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate group and extension
      tags:
      - groups
      - extensions
    put:
      description: '**Required ACL:** `confd.groups.{group_uuid}.extensions.{extension_id}.update`'
      operationId: associate_group_extension
      parameters:
      - $ref: '#/parameters/groupuuid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Group and Extension associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate group and extension
      tags:
      - groups
      - extensions
  /groups/{group_uuid}/fallbacks:
    get:
      description: '**Required ACL:** `confd.groups.{group_uuid}.fallbacks.read`'
      operationId: get_group_fallback
      parameters:
      - $ref: '#/parameters/groupuuid'
      responses:
        '200':
          description: Fallbacks for group
          schema:
            $ref: '#/definitions/GroupFallbacks'
      summary: List all fallbacks for group
      tags:
      - groups
    put:
      description: '**Required ACL:** `confd.groups.{group_uuid}.fallbacks.update`


        **WARNING** This endpoint delete all fields that are not defined.'
      operationId: update_group_fallback
      parameters:
      - $ref: '#/parameters/groupuuid'
      - description: Fallbacks for group
        in: body
        name: body
        schema:
          $ref: '#/definitions/GroupFallbacks'
      responses:
        '204':
          description: Group's fallbacks updated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update group's fallbacks
      tags:
      - groups
  /groups/{group_uuid}/members/extensions:
    put:
      description: '**Required ACL:** `confd.groups.{group_uuid}.members.extensions.update`


        **WARNING** This endpoint remove all members which are not defined.'
      operationId: update_group_member_extensions
      parameters:
      - $ref: '#/parameters/groupuuid'
      - description: Extensions to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupMemberExtensions'
      responses:
        '204':
          description: Group and Extensions associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update group and extensions
      tags:
      - groups
  /groups/{group_uuid}/members/users:
    put:
      description: '**Required ACL:** `confd.groups.{group_uuid}.members.users.update`


        **WARNING** This endpoint remove all members which are not defined.'
      operationId: update_group_member_users
      parameters:
      - $ref: '#/parameters/groupuuid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/GroupMemberUsers'
      responses:
        '204':
          description: Group and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update group and users
      tags:
      - groups
      - users
  /groups/{group_uuid}/schedules/{schedule_id}:
    delete:
      description: '**Required ACL:** `confd.groups.{group_uuid}.schedules.{schedule_id}.delete`'
      operationId: dissociate_group_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/groupuuid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Group and Schedule dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate group and schedule
      tags:
      - groups
      - schedules
    put:
      description: '**Required ACL:** `confd.groups.{group_uuid}.schedules.{schedule_id}.update`'
      operationId: associate_group_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/groupuuid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Group and Schedule associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate group and schedule
      tags:
      - groups
      - schedules
  /guests/me/meetings/{meeting_uuid}:
    get:
      description: '**Required ACL:** none'
      operationId: get_guest_meeting
      parameters:
      - $ref: '#/parameters/meeting_uuid'
      responses:
        '200':
          description: Meetings list
          schema:
            $ref: '#/definitions/Meeting'
      summary: Get one guest meeting
      tags:
      - meetings
      - guests
  /guests/{guest_uuid}/meetings/{meeting_uuid}/authorizations:
    post:
      description: '**Required ACL:** none. A single meeting only accepts a maximum
        amount of 128 authorizations. Authorizations are valid for 24h.'
      operationId: create_guest_meeting_authorization
      parameters:
      - $ref: '#/parameters/guest_uuid'
      - $ref: '#/parameters/meeting_uuid'
      - description: Details to request authorization
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/MeetingAuthorizationRequest'
      responses:
        '201':
          description: Authorization created
          schema:
            $ref: '#/definitions/MeetingAuthorization'
        '400':
          $ref: '#/responses/CreateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Request guest authorization to enter a meeting
      tags:
      - meeting_authorizations
      - meetings
      - guests
  /guests/{guest_uuid}/meetings/{meeting_uuid}/authorizations/{authorization_uuid}:
    get:
      description: '**Required ACL:** none'
      operationId: get_guest_meeting_authorization
      parameters:
      - $ref: '#/parameters/guest_uuid'
      - $ref: '#/parameters/meeting_uuid'
      - $ref: '#/parameters/authorization_uuid'
      responses:
        '200':
          description: Authorization details
          schema:
            $ref: '#/definitions/MeetingAuthorization'
        '400':
          $ref: '#/responses/CreateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Read the guest authorization to enter a meeting
      tags:
      - meeting_authorizations
      - meetings
      - guests
  /ha:
    get:
      description: '**Required ACL:** `confd.ha.read`'
      operationId: get_ha
      responses:
        '200':
          description: High Availability configuration
          schema:
            $ref: '#/definitions/HA'
      summary: Get High Availability configuration
      tags:
      - ha
    put:
      description: '**Required ACL:** `confd.ha.update`'
      operationId: update_ha
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/HA'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
      summary: Update High Availability configuration
      tags:
      - ha
  /incalls:
    get:
      description: '**Required ACL:** `confd.incalls.read`'
      operationId: list_incalls
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Incoming calls list
          schema:
            $ref: '#/definitions/IncallItems'
      summary: List incoming calls
      tags:
      - incalls
    post:
      description: '**Required ACL:** `confd.incalls.create`'
      operationId: create_incall
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Incoming call to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Incall'
      responses:
        '201':
          description: Incoming call created
          schema:
            $ref: '#/definitions/Incall'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create incoming call
      tags:
      - incalls
  /incalls/{incall_id}:
    delete:
      description: '**Required ACL:** `confd.incalls.{incall_id}.delete`'
      operationId: delete_incall
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/incallid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete incoming call
      tags:
      - incalls
    get:
      description: '**Required ACL:** `confd.incalls.{incall_id}.read`'
      operationId: get_incall
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/incallid'
      responses:
        '200':
          description: Incoming call
          schema:
            $ref: '#/definitions/Incall'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get incoming call
      tags:
      - incalls
    put:
      description: '**Required ACL:** `confd.incalls.{incall_id}.update`'
      operationId: update_incall
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/incallid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Incall'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update incoming call
      tags:
      - incalls
  /incalls/{incall_id}/extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.incalls.{incall_id}.extensions.{extension_id}.delete`'
      operationId: dissociate_incall_extension
      parameters:
      - $ref: '#/parameters/incallid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Incall and Extension dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate incall and extension
      tags:
      - incalls
      - extensions
    put:
      description: '**Required ACL:** `confd.incalls.{incall_id}.extensions.{extension_id}.update`'
      operationId: associate_incall_extension
      parameters:
      - $ref: '#/parameters/incallid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Incall and Extension associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate incall and extension
      tags:
      - incalls
      - extensions
  /incalls/{incall_id}/schedules/{schedule_id}:
    delete:
      description: '**Required ACL:** `confd.incalls.{incall_id}.schedules.{schedule_id}.delete`'
      operationId: dissociate_incall_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/incallid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Incall and Schedule dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate incall and schedule
      tags:
      - incalls
      - schedules
    put:
      description: '**Required ACL:** `confd.incalls.{incall_id}.schedules.{schedule_id}.update`'
      operationId: associate_incall_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/incallid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Incall and Schedule associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate incall and schedule
      tags:
      - incalls
      - schedules
  /infos:
    get:
      description: '**Required ACL:** `confd.infos.read`'
      operationId: get_infos
      responses:
        '200':
          description: Server information
          schema:
            $ref: '#/definitions/Info'
      summary: Get server info
      tags:
      - infos
  /ingresses/http:
    get:
      description: '**Required ACL:** `confd.ingresses.http.read`'
      operationId: list_http_ingresses
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: HTTP ingress list
          schema:
            $ref: '#/definitions/HTTPIngressItems'
      summary: List HTTP ingresses
      tags:
      - ingresses
    post:
      description: '**Required ACL:** `confd.ingresses.http.create`'
      operationId: create_http_ingress
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: HTTP Ingress to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/HTTPIngressRequest'
      responses:
        '201':
          description: HTTP ingress ceated
          schema:
            $ref: '#/definitions/HTTPIngress'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create HTTP Ingress
      tags:
      - ingresses
  /ingresses/http/{http_ingress_uuid}:
    delete:
      description: '**Required ACL:** `confd.ingresses.http.{http_ingress_uuid}.delete`'
      operationId: delete_http_ingress
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/http_ingress_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete HTTP ingress
      tags:
      - ingresses
    get:
      description: '**Required ACL:** `confd.ingresses.http.{http_ingress_uuid}.read`'
      operationId: get_http_ingress
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/http_ingress_uuid'
      responses:
        '200':
          description: HTTP ingress
          schema:
            $ref: '#/definitions/HTTPIngress'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get HTTP ingress
      tags:
      - ingresses
    put:
      description: '**Required ACL:** `confd.ingresses.http.{http_ingress_uuid}.update`'
      operationId: update_http_ingress
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/http_ingress_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/HTTPIngressRequest'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update HTTP ingress
      tags:
      - ingresses
  /ivr:
    get:
      description: '**Required ACL:** `confd.ivr.read`'
      operationId: list_ivr
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: IVR list
          schema:
            $ref: '#/definitions/IvrItems'
      summary: List IVR
      tags:
      - ivr
    post:
      description: '**Required ACL:** `confd.ivr.create`'
      operationId: create_ivr
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: IVR to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Ivr'
      responses:
        '201':
          description: IVR created
          schema:
            $ref: '#/definitions/Ivr'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create IVR
      tags:
      - ivr
  /ivr/{ivr_id}:
    delete:
      description: '**Required ACL:** `confd.ivr.{ivr_id}.delete`'
      operationId: delete_ivr
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/ivrid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete IVR
      tags:
      - ivr
    get:
      description: '**Required ACL:** `confd.ivr.{ivr_id}.read`'
      operationId: get_ivr
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/ivrid'
      responses:
        '200':
          description: IVR
          schema:
            $ref: '#/definitions/Ivr'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get IVR
      tags:
      - ivr
    put:
      description: '**Required ACL:** `confd.ivr.{ivr_id}.update`'
      operationId: update_ivr
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/ivrid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Ivr'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update IVR
      tags:
      - ivr
  /lines:
    get:
      description: '**Required ACL:** `confd.lines.read`'
      operationId: list_lines
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Line list
          schema:
            $ref: '#/definitions/LineItems'
      summary: List lines
      tags:
      - lines
    post:
      description: '**Required ACL:** `confd.lines.create`


        When creating a line with an extension or a SIP endpoint as part of it''s
        body, the line''s context

        will be used as a default for the endpoint and context if ommited.

        '
      operationId: create_line
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/LineCreate'
      - $ref: '#/parameters/tenantuuid'
      responses:
        '201':
          description: Line created
          schema:
            $ref: '#/definitions/LineView'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create line
      tags:
      - lines
  /lines/{line_id}:
    delete:
      description: '**Required ACL:** `confd.lines.{line_id}.delete`


        **Disclaimer**: if `recursive=true`, the line is deleted, all their associations
        with any related resources are removed.'
      operationId: delete_line
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete line
      tags:
      - lines
    get:
      description: '**Required ACL:** `confd.lines.{line_id}.read`'
      operationId: get_line
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      responses:
        '200':
          description: Line
          schema:
            $ref: '#/definitions/LineView'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get line
      tags:
      - lines
    put:
      description: '**Required ACL:** `confd.lines.{line_id}.update`'
      operationId: update_line
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Line'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update line
      tags:
      - lines
  /lines/{line_id}/applications/{application_uuid}:
    delete:
      description: '**Required ACL:** `confd.lines.{line_id}.applications.{application_uuid}.delete`'
      operationId: dissociate_line_application
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/application_uuid'
      responses:
        '204':
          description: Line and application dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate line and application
      tags:
      - lines
      - applications
    put:
      description: '''**Required ACL:** `confd.lines.{line_id}.applications.{application_uuid}.update`''


        **WARNING**: Association will disable the effect of the line `context` field

        '
      operationId: associate_line_application
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/application_uuid'
      responses:
        '204':
          description: Line and application associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate line and application
      tags:
      - lines
      - applications
  /lines/{line_id}/devices:
    get:
      description: '**Required ACL:** `confd.lines.{line_id}.devices.read`'
      operationId: get_line_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      responses:
        '200':
          description: Association between Line and Device
          schema:
            $ref: '#/definitions/LineDevice'
        '400':
          description: No device associated to line
          schema:
            $ref: '#/definitions/Error'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get Device associated to Line
      tags:
      - lines
      - devices
  /lines/{line_id}/devices/{device_id}:
    delete:
      description: '**Required ACL:** `confd.lines.{line_id}.devices.{device_id}.delete`'
      operationId: dissociate_line_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/deviceid'
      responses:
        '204':
          description: Line and device dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate line and device
      tags:
      - lines
      - devices
    put:
      description: '**Required ACL:** `confd.lines.{line_id}.devices.{device_id}.update`'
      operationId: associate_line_device
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/deviceid'
      responses:
        '204':
          description: Line and device associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate line and device
      tags:
      - lines
      - devices
  /lines/{line_id}/endpoints/custom/{custom_id}:
    delete:
      description: '**Required ACL:** `confd.lines.{line_id}.endpoints.custom.{custom_id}.delete`'
      operationId: dissociate_line_endpoint_custom
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/customid'
      responses:
        '204':
          description: Line and Custom endpoint dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate line and Custom endpoint
      tags:
      - lines
      - endpoints
      - custom
    put:
      description: '**Required ACL:** `confd.lines.{line_id}.endpoints.custom.{custom_id}.update`'
      operationId: associate_line_endpoint_custom
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/customid'
      responses:
        '204':
          description: Line and Custom endpoint associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate line and Custom endpoint
      tags:
      - lines
      - endpoints
      - custom
  /lines/{line_id}/endpoints/sccp/{sccp_id}:
    delete:
      description: '**Required ACL:** `confd.lines.{line_id}.endpoints.sccp.{sccp_id}.delete`'
      operationId: dissociate_line_endpoint_sccp
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/sccpid'
      responses:
        '204':
          description: Line and SCCP endpoint dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate line and SCCP endpoint
      tags:
      - lines
      - endpoints
      - sccp
    put:
      description: '**Required ACL:** `confd.lines.{line_id}.endpoints.sccp.{sccp_id}.update`'
      operationId: associate_line_endpoint_sccp
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/sccpid'
      responses:
        '204':
          description: Line and SCCP endpoint associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate line and SCCP endpoint
      tags:
      - lines
      - endpoints
      - sccp
  /lines/{line_id}/endpoints/sip/{sip_uuid}:
    delete:
      description: '**Required ACL:** `confd.lines.{line_id}.endpoints.sip.{sip_uuid}.delete`'
      operationId: dissociate_line_endpoint_sip
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/sipuuid'
      responses:
        '204':
          description: Line and SIP endpoint dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate line and SIP endpoint
      tags:
      - lines
      - endpoints
      - sip
    put:
      description: '**Required ACL:** `confd.lines.{line_id}.endpoints.sip.{sip_uuid}.update`'
      operationId: associate_line_endpoint_sip
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/sipuuid'
      responses:
        '204':
          description: Line and SIP endpoint associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate line and SIP endpoint
      tags:
      - lines
      - endpoints
      - sip
  /lines/{line_id}/extensions:
    post:
      description: '**Required ACL:** `confd.lines.{line_id}.extensions.create`

        The extension number must be included in one of the extension ranges for the
        given context.'
      operationId: create_line_extension
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/lineid'
      - description: Extension to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Extension'
      responses:
        '201':
          description: Extension created
          schema:
            $ref: '#/definitions/Extension'
        '400':
          $ref: '#/responses/CreateError'
        '404':
          description: Line not found
          schema:
            $ref: '#/responses/NotFoundError'
      summary: Create extension
      tags:
      - extensions
      - lines
  /lines/{line_id}/extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.lines.{line_id}.extensions.{extension_id}.delete`


        Any devices that are attached to a line must be removed before dissociating
        an extension from its line. A device can be dissociated by resetting it to
        autoprov mode.'
      operationId: dissociate_line_extension
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Line and Extension dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate line and extension
      tags:
      - lines
      - extensions
    put:
      description: "**Required ACL:** `confd.lines.{line_id}.extensions.{extension_id}.update`\n\
        \nBecause of technical limitations, a line can only have a single \u2018internal\u2019\
        \ extension associated (i.e. an extension with a context of type \u2018internal\u2019\
        )"
      operationId: associate_line_extension
      parameters:
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Line and Extension associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate line and extension
      tags:
      - lines
      - extensions
  /meetings:
    get:
      description: '**Required ACL:** `confd.meetings.read`'
      operationId: list_meetings
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Meetings list
          schema:
            $ref: '#/definitions/MeetingItems'
      summary: List meetings
      tags:
      - meetings
    post:
      description: '**Required ACL:** `confd.meetings.create`'
      operationId: create_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Meeting to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/MeetingRequest'
      responses:
        '201':
          description: Meeting created
          schema:
            $ref: '#/definitions/Meeting'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create meeting
      tags:
      - meetings
  /meetings/{meeting_uuid}:
    delete:
      description: '**Required ACL:** `confd.meetings.{meeting_uuid}.delete`, Deleting
        a meeting will hangup all current participants.'
      operationId: delete_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/meeting_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete meeting
      tags:
      - meetings
    get:
      description: '**Required ACL:** `confd.meetings.{meeting_uuid}.read`'
      operationId: get_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/meeting_uuid'
      responses:
        '200':
          description: Meeting
          schema:
            $ref: '#/definitions/Meeting'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get meeting
      tags:
      - meetings
    put:
      description: '**Required ACL:** `confd.meetings.{meeting_uuid}.update`'
      operationId: update_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/meeting_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/MeetingRequest'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update meeting
      tags:
      - meetings
  /moh:
    get:
      description: '**Required ACL:** `confd.moh.read`'
      operationId: list_moh
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: MOH list
          schema:
            $ref: '#/definitions/MohItems'
      summary: List MOH classes
      tags:
      - moh
    post:
      description: '**Required ACL:** `confd.moh.create`'
      operationId: create_moh
      parameters:
      - description: MOH class to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Moh'
      responses:
        '201':
          description: MOH class created
          schema:
            $ref: '#/definitions/Moh'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create MOH class
      tags:
      - moh
  /moh/{moh_uuid}:
    delete:
      description: '**Required ACL:** `confd.moh.{moh_uuid}.delete`


        Delete the MOH class and associated audio files.

        '
      operationId: delete_moh
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/moh_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete MOH class
      tags:
      - moh
    get:
      description: '**Required ACL:** `confd.moh.{moh_uuid}.read`'
      operationId: get_moh
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/moh_uuid'
      responses:
        '200':
          description: MOH class
          schema:
            $ref: '#/definitions/Moh'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get MOH class
      tags:
      - moh
    put:
      description: '**Required ACL:** `confd.moh.{moh_uuid}.update`'
      operationId: update_moh
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/moh_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Moh'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update MOH class
      tags:
      - moh
  /moh/{moh_uuid}/files/{moh_filename}:
    delete:
      description: '**Required ACL:** `confd.moh.{moh_uuid}.files.{moh_filename}.delete`'
      operationId: delete_moh_files
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/moh_uuid'
      - $ref: '#/parameters/moh_filename'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete audio file
      tags:
      - moh
    get:
      description: '**Required ACL:** `confd.moh.{moh_uuid}.files.{moh_filename}.read`'
      operationId: get_moh_files
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/moh_uuid'
      - $ref: '#/parameters/moh_filename'
      produces:
      - application/octet-stream
      responses:
        '200':
          description: Audio file
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get audio file
      tags:
      - moh
    put:
      consumes:
      - application/octet-stream
      description: '**Required ACL:** `confd.moh.{moh_uuid}.files.{moh_filename}.update`'
      operationId: update_moh_files
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/moh_uuid'
      - $ref: '#/parameters/moh_filename'
      - in: body
        name: body
        required: true
        schema:
          format: binary
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Add or update audio file
      tags:
      - moh
  /outcalls:
    get:
      description: '**Required ACL:** `confd.outcalls.read`'
      operationId: list_outcalls
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Outgoing calls list
          schema:
            $ref: '#/definitions/OutcallItems'
      summary: List outgoing calls
      tags:
      - outcalls
    post:
      description: '**Required ACL:** `confd.outcalls.create`'
      operationId: create_outcall
      parameters:
      - description: Outgoing call to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Outcall'
      - $ref: '#/parameters/tenantuuid'
      responses:
        '201':
          description: Outgoing call created
          schema:
            $ref: '#/definitions/Outcall'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create outgoing call
      tags:
      - outcalls
  /outcalls/{outcall_id}:
    delete:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.delete`'
      operationId: delete_outcall
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/outcallid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete outgoing call
      tags:
      - outcalls
    get:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.read`'
      operationId: get_outcall
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/outcallid'
      responses:
        '200':
          description: Outgoing call
          schema:
            $ref: '#/definitions/Outcall'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get outgoing call
      tags:
      - outcalls
    put:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.update`'
      operationId: update_outcall
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/outcallid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Outcall'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update outgoing call
      tags:
      - outcalls
  /outcalls/{outcall_id}/callpermissions/{callpermission_id}:
    delete:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.callpermissions.{call_permission_id}.delete`'
      operationId: dissociate_outcall_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/outcallid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '204':
          description: Outcall and Call Permission dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate outcall and call permission
      tags:
      - outcalls
      - callpermissions
    put:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.callpermissions.{call_permission_id}.update`'
      operationId: associate_outcall_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/outcallid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate outcall and call permission
      tags:
      - outcalls
      - callpermissions
  /outcalls/{outcall_id}/extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.extensions.{extension_id}.delete`'
      operationId: dissociate_outcall_extension
      parameters:
      - $ref: '#/parameters/outcallid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Outcall and Extension dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate outcall and extension
      tags:
      - outcalls
      - extensions
    put:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.extensions.{extension_id}.update`'
      operationId: associate_outcall_extension
      parameters:
      - $ref: '#/parameters/outcallid'
      - $ref: '#/parameters/extensionid'
      - description: Outgoing Extension
        in: body
        name: body
        schema:
          $ref: '#/definitions/OutcallExtension'
      responses:
        '204':
          description: Trunk and Custom endpoint associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate outcall and extension
      tags:
      - outcalls
      - extensions
  /outcalls/{outcall_id}/schedules/{schedule_id}:
    delete:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.schedules.{schedule_id}.delete`'
      operationId: dissociate_outcall_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/outcallid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Outcall and Schedule dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate outcall and schedule
      tags:
      - outcalls
      - schedules
    put:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.schedules.{schedule_id}.update`'
      operationId: associate_outcall_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/outcallid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Outcall and Schedule associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate outcall and schedule
      tags:
      - outcalls
      - schedules
  /outcalls/{outcall_id}/trunks:
    put:
      description: '**Required ACL:** `confd.outcalls.{outcall_id}.trunks.update`'
      operationId: associate_outcall_trunks
      parameters:
      - $ref: '#/parameters/outcallid'
      - description: Trunks to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TrunksId'
      responses:
        '204':
          description: Outcall and Trunks associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate outcall and trunks
      tags:
      - outcalls
      - trunks
  /pagings:
    get:
      description: '**Required ACL:** `confd.pagings.read`'
      operationId: list_pagings
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Pagings list
          schema:
            $ref: '#/definitions/PagingItems'
      summary: List paging
      tags:
      - pagings
    post:
      description: '**Required ACL:** `confd.pagings.create`'
      operationId: create_paging
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Paging to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Paging'
      responses:
        '201':
          description: Paging created
          schema:
            $ref: '#/definitions/Paging'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create paging
      tags:
      - pagings
  /pagings/{paging_id}:
    delete:
      description: '**Required ACL:** `confd.pagings.{paging_id}.delete`'
      operationId: delete_paging
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/pagingid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete paging
      tags:
      - pagings
    get:
      description: '**Required ACL:** `confd.pagings.{paging_id}.read`'
      operationId: get_paging
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/pagingid'
      responses:
        '200':
          description: Paging
          schema:
            $ref: '#/definitions/Paging'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get paging
      tags:
      - pagings
    put:
      description: '**Required ACL:** `confd.pagings.{paging_id}.update`'
      operationId: update_paging
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/pagingid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Paging'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update paging
      tags:
      - pagings
  /pagings/{paging_id}/callers/users:
    put:
      description: '**Required ACL:** `confd.pagings.{paging_id}.callers.users.update`


        **WARNING**

        This endpoint remove all callers which are not defined.

        '
      operationId: update_paging_caller_users
      parameters:
      - $ref: '#/parameters/pagingid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UsersUuid'
      responses:
        '204':
          description: Paging and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update paging and callers
      tags:
      - pagings
      - users
  /pagings/{paging_id}/members/users:
    put:
      description: '**Required ACL:** `confd.pagings.{paging_id}.members.users.update`


        **WARNING**

        This endpoint remove all members which are not defined.

        '
      operationId: update_paging_member_users
      parameters:
      - $ref: '#/parameters/pagingid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UsersUuid'
      responses:
        '204':
          description: Paging and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update paging and members
      tags:
      - pagings
      - users
  /parkinglots:
    get:
      description: '**Required ACL:** `confd.parkinglots.read`'
      operationId: list_parking_lots
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Parking lots list
          schema:
            $ref: '#/definitions/ParkingLotItems'
      summary: List parking lots
      tags:
      - parking_lots
    post:
      description: '**Required ACL:** `confd.parkinglots.create`'
      operationId: create_parking_lot
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Parking lot to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ParkingLot'
      responses:
        '201':
          description: Parking lot created
          schema:
            $ref: '#/definitions/ParkingLot'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create parking lot
      tags:
      - parking_lots
  /parkinglots/{parking_lot_id}:
    delete:
      description: '**Required ACL:** `confd.parkinglots.{parking_lot_id}.delete`'
      operationId: delete_parking_lot
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/parkinglotid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete parking lot
      tags:
      - parking_lots
    get:
      description: '**Required ACL:** `confd.parkinglots.{parking_lot_id}.read`'
      operationId: get_parking_lot
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/parkinglotid'
      responses:
        '200':
          description: Parking lot
          schema:
            $ref: '#/definitions/ParkingLot'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get parking lot
      tags:
      - parking_lots
    put:
      description: '**Required ACL:** `confd.parkinglots.{parking_lot_id}.update`'
      operationId: update_parking_lot
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/parkinglotid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ParkingLot'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update parking lot
      tags:
      - parking_lots
  /parkinglots/{parking_lot_id}/extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.parkinglots.{parking_lot_id}.extensions.{extension_id}.delete`'
      operationId: dissociate_parking_lot_extension
      parameters:
      - $ref: '#/parameters/parkinglotid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Parking Lot and Extension dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate parking lot and extension
      tags:
      - parking_lots
      - extensions
    put:
      description: '**Required ACL:** `confd.parkinglots.{parking_lot_id}.extensions.{extension_id}.update`'
      operationId: associate_parking_lot_extension
      parameters:
      - $ref: '#/parameters/parkinglotid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Parking Lot and Extension associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate parking_lot and extension
      tags:
      - parking_lots
      - extensions
  /provisioning/networking:
    get:
      description: '**Required ACL:** `confd.provisioning.networking.read`'
      operationId: get_provisioning_networking
      responses:
        '200':
          description: Provisioning Networking configuration
          schema:
            $ref: '#/definitions/ProvisioningNetworking'
      summary: Get Provisioning Networking configuration
      tags:
      - provisioning
    put:
      description: '**Required ACL:** `confd.provisioning.networking.update`'
      operationId: update_provisioning_networking
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProvisioningNetworking'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
      summary: Update Provisioning Networking configuration
      tags:
      - provisioning
  /queues:
    get:
      description: '**Required ACL:** `confd.queues.read`'
      operationId: list_queues
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Queues list
          schema:
            $ref: '#/definitions/QueueItems'
      summary: List queues
      tags:
      - queues
    post:
      description: '**Required ACL:** `confd.queues.create`'
      operationId: create_queue
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Queue to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Queue'
      responses:
        '201':
          description: Queue created
          schema:
            $ref: '#/definitions/Queue'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create queue
      tags:
      - queues
  /queues/skillrules:
    get:
      description: '**Required ACL:** `confd.queues.skillrules.read`'
      operationId: list_skill_rules
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Skill rules list
          schema:
            $ref: '#/definitions/SkillRuleItems'
      summary: List skill rule
      tags:
      - queues
      - skills
    post:
      description: '**Required ACL:** `confd.queues.skillrules.create`'
      operationId: create_skill_rule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Skill rule to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SkillRule'
      responses:
        '201':
          description: Skill rule created
          schema:
            $ref: '#/definitions/SkillRule'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create skill rule
      tags:
      - queues
      - skills
  /queues/skillrules/{skillrule_id}:
    delete:
      description: '**Required ACL:** `confd.queues.skillrules.{skillrule_id}.delete`'
      operationId: delete_skill_rule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/skillruleid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete skill rule
      tags:
      - queues
      - skills
    get:
      description: '**Required ACL:** `confd.queues.skillrules.{skillrule_id}.read`'
      operationId: get_skill_rule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/skillruleid'
      responses:
        '200':
          description: Skill rule
          schema:
            $ref: '#/definitions/SkillRule'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get skill rule
      tags:
      - queues
      - skills
    put:
      description: '**Required ACL:** `confd.queues.skillrules.{skillrule_id}.update`'
      operationId: update_skill_rule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/skillruleid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SkillRule'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update skill rule
      tags:
      - queues
      - skills
  /queues/{queue_id}:
    delete:
      description: '**Required ACL:** `confd.queues.{queue_id}.delete`'
      operationId: delete_queue
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete queue
      tags:
      - queues
    get:
      description: '**Required ACL:** `confd.queues.{queue_id}.read`'
      operationId: get_queue
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      responses:
        '200':
          description: Queue
          schema:
            $ref: '#/definitions/Queue'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get queue
      tags:
      - queues
    put:
      description: '**Required ACL:** `confd.queues.{queue_id}.update`'
      operationId: update_queue
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Queue'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update queue
      tags:
      - queues
  /queues/{queue_id}/extensions/{extension_id}:
    delete:
      description: '**Required ACL:** `confd.queues.{queue_id}.extensions.{extension_id}.delete`'
      operationId: dissociate_queue_extension
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Queue and Extension dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate queue and extension
      tags:
      - queues
      - extensions
    put:
      description: '**Required ACL:** `confd.queues.{queue_id}.extensions.{extension_id}.update`'
      operationId: associate_queue_extension
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/extensionid'
      responses:
        '204':
          description: Queue and Extension associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate queue and extension
      tags:
      - queues
      - extensions
  /queues/{queue_id}/fallbacks:
    get:
      description: '**Required ACL:** `confd.queues.{queue_id}.fallbacks.read`'
      operationId: get_queue_fallback
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      responses:
        '200':
          description: Fallbacks for queue
          schema:
            $ref: '#/definitions/QueueFallbacks'
      summary: List all fallbacks for queue
      tags:
      - queues
    put:
      description: '**Required ACL:** `confd.queues.{queue_id}.fallbacks.update`


        **WARNING** This endpoint delete all fields that are not defined.'
      operationId: update_queue_fallback
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - description: Fallbacks for queue
        in: body
        name: body
        schema:
          $ref: '#/definitions/QueueFallbacks'
      responses:
        '204':
          description: Queue's fallbacks updated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update queue's fallbacks
      tags:
      - queues
  /queues/{queue_id}/members/agents/{agent_id}:
    delete:
      description: '**Required ACL:** `confd.queues.{queue_id}.members.agents.{agent_id}.delete`'
      operationId: dissociate_agent_queue
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/agentid'
      responses:
        '204':
          description: Agent and Queue dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate agent and queue
      tags:
      - agents
      - queues
    put:
      description: '**Required ACL:** `confd.queues.{queue_id}.members.agents.{agent_id}.update`'
      operationId: update_agent_queue_association
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/agentid'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/QueueMemberAgent'
      responses:
        '204':
          description: Association updated
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update Agent-Queue association
      tags:
      - agents
      - queues
  /queues/{queue_id}/members/users/{user_id}:
    delete:
      description: '**Required ACL:** `confd.queues.{queue_id}.members.users.{user_id}.delete`'
      operationId: dissociate_user_queue
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '204':
          description: User and Queue dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate user and queue
      tags:
      - queues
      - users
    put:
      description: '**Required ACL:** `confd.queues.{queue_id}.members.users.{user_id}.update`'
      operationId: update_user_queue_association
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/useriduuid'
      - in: body
        name: body
        schema:
          $ref: '#/definitions/QueueMemberUser'
      responses:
        '204':
          description: Association updated
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update User-Queue association
      tags:
      - queues
      - users
  /queues/{queue_id}/schedules/{schedule_id}:
    delete:
      description: '**Required ACL:** `confd.queues.{queue_id}.schedules.{schedule_id}.delete`'
      operationId: dissociate_queue_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Queue and Schedule dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate queue and schedule
      tags:
      - queues
      - schedules
    put:
      description: '**Required ACL:** `confd.queues.{queue_id}.schedules.{schedule_id}.update`'
      operationId: associate_queue_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/queueid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: Queue and Schedule associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate queue and schedule
      tags:
      - queues
      - schedules
  /registers/iax:
    get:
      description: '**Required ACL:** `confd.registers.iax.read`'
      operationId: list_registers_iax
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Registers IAX list
          schema:
            $ref: '#/definitions/RegisterIAXItems'
      summary: List registers iax
      tags:
      - registers
      - iax
    post:
      description: '**Required ACL:** `confd.registers.iax.create`'
      operationId: create_register_iax
      parameters:
      - description: Register iax to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/RegisterIAX'
      responses:
        '201':
          description: Register IAX created
          schema:
            $ref: '#/definitions/RegisterIAX'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create register_iax
      tags:
      - registers
      - iax
  /registers/iax/{register_iax_id}:
    delete:
      description: '**Required ACL:** `confd.registers.iax.{register_iax_id}.delete`'
      operationId: delete_register_iax
      parameters:
      - $ref: '#/parameters/registeriaxid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete register IAX
      tags:
      - registers
      - iax
    get:
      description: '**Required ACL:** `confd.registers.iax.{register_iax_id}.read`'
      operationId: get_register_iax
      parameters:
      - $ref: '#/parameters/registeriaxid'
      responses:
        '200':
          description: Register IAX
          schema:
            $ref: '#/definitions/RegisterIAX'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get register IAX
      tags:
      - registers
      - iax
    put:
      description: '**Required ACL:** `confd.registers.iax.{register_iax_id}.update`'
      operationId: update_register_iax
      parameters:
      - $ref: '#/parameters/registeriaxid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/RegisterIAX'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update register IAX
      tags:
      - registers
      - iax
  /registrars:
    get:
      description: '**Required ACL:** `confd.registrars.read`'
      operationId: get_registrars
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Registrar list
          schema:
            $ref: '#/definitions/RegistrarItems'
      summary: Get registrars
      tags:
      - registrars
    post:
      description: '**Required ACL:** `confd.registrars.create`'
      operationId: create_registrar
      parameters:
      - description: Registrar to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Registrar'
      responses:
        '201':
          description: Registrar created
          schema:
            $ref: '#/definitions/Registrar'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create registrar
      tags:
      - registrars
  /registrars/{registrar_id}:
    delete:
      description: '**Required ACL:** `confd.registrars.{registrar_id}.delete`'
      operationId: delete_registrar
      parameters:
      - $ref: '#/parameters/registrar_id'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete registrar
      tags:
      - registrars
    get:
      description: '**Required ACL:** `confd.registrars.{registrar_id}.read`'
      operationId: get_registrar
      parameters:
      - $ref: '#/parameters/registrar_id'
      responses:
        '200':
          description: Registrar
          schema:
            $ref: '#/definitions/Registrar'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get registrar
      tags:
      - registrars
    put:
      description: '**Required ACL:** `confd.registrars.{registrar_id}.update`'
      operationId: update_registrar
      parameters:
      - $ref: '#/parameters/registrar_id'
      - description: Registrar body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Registrar'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update registrar
      tags:
      - registrars
  /schedules:
    get:
      description: '**Required ACL:** `confd.schedules.read`'
      operationId: list_schedules
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Schedules list
          schema:
            $ref: '#/definitions/ScheduleItems'
      summary: List schedule
      tags:
      - schedules
    post:
      description: '**Required ACL:** `confd.schedules.create`'
      operationId: create_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Schedule to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Schedule'
      responses:
        '201':
          description: Schedule created
          schema:
            $ref: '#/definitions/Schedule'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create schedule
      tags:
      - schedules
  /schedules/{schedule_id}:
    delete:
      description: '**Required ACL:** `confd.schedules.{schedule_id}.delete`'
      operationId: delete_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete schedule
      tags:
      - schedules
    get:
      description: '**Required ACL:** `confd.schedules.{schedule_id}.read`'
      operationId: get_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '200':
          description: Schedule
          schema:
            $ref: '#/definitions/Schedule'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get schedule
      tags:
      - schedules
    put:
      description: '**Required ACL:** `confd.schedules.{schedule_id}.update`'
      operationId: update_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/scheduleid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Schedule'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update schedule
      tags:
      - schedules
  /sip/transports:
    get:
      description: '**Required ACL:** `confd.sip.transports.read`'
      operationId: list_sip_transports
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: The SIP transport list
          schema:
            $ref: '#/definitions/SIPTransportItems'
      summary: List all configured SIP transports
      tags:
      - sip
    post:
      description: '**Required ACL:** `confd.sip.transports.create`


        Transports are shared between all tenants and should be readable to the

        tenants'' administrators.


        There should always be atleast one transport configured on the system.

        '
      operationId: create_sip_transport
      parameters:
      - description: Transport to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SIPTransport'
      responses:
        '201':
          description: SIP transport created
          schema:
            $ref: '#/definitions/SIPTransport'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create SIP transport
      tags:
      - sip
  /sip/transports/{transport_uuid}:
    delete:
      description: '**Required ACL:** `confd.sip.transports.{transport_uuid}.delete`


        Deletes a transport, all associated configuration will be assigned to

        the `fallback` transport.

        '
      operationId: delete_sip_transport
      parameters:
      - $ref: '#/parameters/transportuuid'
      - $ref: '#/parameters/fallback_transport'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete SIP transport
      tags:
      - sip
    get:
      description: '**Required ACL**: `confd.sip.transports.{transport_uuid}.read`'
      operationId: get_sip_transport
      parameters:
      - $ref: '#/parameters/transportuuid'
      responses:
        '200':
          description: A SIP transport
          schema:
            $ref: '#/definitions/SIPTransport'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get SIP transport
      tags:
      - sip
    put:
      description: '**Required ACL**: `confd.sip.transports.{transport_uuid}.update`'
      operationId: update_sip_transport
      parameters:
      - $ref: '#/parameters/transportuuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SIPTransport'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update SIP transport
      tags:
      - sip
  /sounds:
    get:
      description: '**Required ACL:** `confd.sounds.read`'
      operationId: list_sounds
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: sounds list
          schema:
            $ref: '#/definitions/SoundItems'
      summary: List sound categories
      tags:
      - sounds
    post:
      description: '**Required ACL:** `confd.sounds.create`'
      operationId: create_sounds
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Sound category to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Sound'
      responses:
        '201':
          description: Sound category created
          schema:
            $ref: '#/definitions/Sound'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create sound category
      tags:
      - sounds
  /sounds/languages:
    get:
      description: '**Required ACL:** `confd.sounds.languages.read`'
      operationId: list_sounds_languages
      responses:
        '200':
          description: List sounds languages
          schema:
            $ref: '#/definitions/SoundLanguageItems'
      summary: List all languages for sounds
      tags:
      - sounds
  /sounds/{sound_category}:
    delete:
      description: '**Required ACL:** `confd.sounds.{sound_category}.delete`


        Delete the sound category and associated audio files.

        '
      operationId: delete_sounds
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sound_category'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete sound category
      tags:
      - sounds
    get:
      description: '**Required ACL:** `confd.sounds.{sound_category}.read`'
      operationId: get_sounds
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sound_category'
      responses:
        '200':
          description: Sound category
          schema:
            $ref: '#/definitions/Sound'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get sound category
      tags:
      - sounds
  /sounds/{sound_category}/files/{sound_filename}:
    delete:
      description: '**Required ACL:** `confd.sounds.{sound_category}.files.{sound_filename}.delete`'
      operationId: delete_sounds_files
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sound_category'
      - $ref: '#/parameters/sound_filename'
      - $ref: '#/parameters/sound_language'
      - $ref: '#/parameters/sound_format'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete audio file
      tags:
      - sounds
    get:
      description: '**Required ACL:** `confd.sounds.{sound_category}.files.{sound_filename}.read`'
      operationId: get_sounds_files
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sound_category'
      - $ref: '#/parameters/sound_filename'
      - $ref: '#/parameters/sound_language'
      - $ref: '#/parameters/sound_format'
      produces:
      - application/octet-stream
      responses:
        '200':
          description: Audio file
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get audio file
      tags:
      - sounds
    put:
      consumes:
      - application/octet-stream
      description: '**Required ACL:** `confd.sounds.{sound_category}.files.{sound_filename}.update`'
      operationId: update_sounds_files
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/sound_category'
      - $ref: '#/parameters/sound_filename'
      - $ref: '#/parameters/sound_language'
      - $ref: '#/parameters/sound_format'
      - in: body
        name: body
        required: true
        schema:
          format: binary
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Add or update audio file
      tags:
      - sounds
  /status:
    get:
      description: '**Required ACL:** `confd.status.read`'
      responses:
        '200':
          description: The internal status of accent-confd
          schema:
            $ref: '#/definitions/StatusSummary'
      summary: Provides internal status of accent-confd`
      tags:
      - status
  /switchboards:
    get:
      description: '**Required ACL:** `confd.switchboards.read`'
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: List of switchboards
          schema:
            properties:
              items:
                items:
                  $ref: '#/definitions/Switchboard'
                type: array
            type: object
      summary: List switchboards
      tags:
      - switchboards
    post:
      description: '**Required ACL:** `confd.switchboard.create`'
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Switchboard parameters
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Switchboard'
      responses:
        '201':
          description: The switchboard has been created
          schema:
            $ref: '#/definitions/Switchboard'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create a switchboard
      tags:
      - switchboards
  /switchboards/{switchboard_uuid}:
    delete:
      description: '**Required ACL:** `confd.switchboard.{switchboard_uuid}.delete`'
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/switchboard_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete a switchboard
      tags:
      - switchboards
    get:
      description: '**Required ACL:** `confd.switchboards.{switchboard_uuid}.read`'
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/switchboard_uuid'
      responses:
        '200':
          description: Switchboard
          schema:
            $ref: '#/definitions/Switchboard'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get a switchboard
      tags:
      - switchboards
    put:
      description: '**Required ACL:** `confd.switchboards.{switchboard_uuid}.update`'
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/switchboard_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Switchboard'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update a switchboard
      tags:
      - switchboards
  /switchboards/{switchboard_uuid}/fallbacks:
    get:
      description: '**Required ACL:** `confd.switchboards.{switchboard_uuid}.fallbacks.read`'
      operationId: get_switchboard_fallback
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/switchboard_uuid'
      responses:
        '200':
          description: Fallbacks for switchboard
          schema:
            $ref: '#/definitions/SwitchboardFallbacks'
      summary: List all fallbacks for switchboard
      tags:
      - switchboards
    put:
      description: '**Required ACL:** `confd.switchboards.{switchboard_uuid}.fallbacks.update`


        **WARNING** This endpoint delete all fields that are not defined.'
      operationId: update_switchboard_fallback
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/switchboard_uuid'
      - description: Fallbacks for switchboard
        in: body
        name: body
        schema:
          $ref: '#/definitions/SwitchboardFallbacks'
      responses:
        '204':
          description: Switchboard's fallbacks updated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update switchboard's fallbacks
      tags:
      - switchboards
  /switchboards/{switchboard_uuid}/members/users:
    put:
      description: '**Required ACL:** `confd.switchboards.{switchboard_uuid}.members.users.update`


        **WARNING**

        This endpoint removes all members which are not defined.

        '
      operationId: update_switchboard_member_users
      parameters:
      - $ref: '#/parameters/switchboard_uuid'
      - description: Users to associate with the switchboard
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UsersUuid'
      responses:
        '204':
          description: Switchboard and users have been associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update switchboard and members
      tags:
      - switchboards
      - users
  /tenants:
    get:
      description: '**Required ACL**: `confd.tenants.read`'
      operationId: list_tenants
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Trunks list
          schema:
            $ref: '#/definitions/TenantItems'
      summary: List tenants
      tags:
      - tenants
  /tenants/{tenant_uuid}:
    get:
      description: '**Required ACL:** `confd.tenants.{tenant_uuid}.read`'
      operationId: get_tenant
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/urltenantuuid'
      responses:
        '200':
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get tenant
      tags:
      - tenants
  /timezones:
    get:
      description: '**Required ACL:** `confd.timezones.read`'
      operationId: list_timezones
      responses:
        '200':
          description: List timezones
          schema:
            $ref: '#/definitions/TimezoneItems'
      summary: List all available timezones
      tags:
      - timezones
  /trunks:
    get:
      description: '**Required ACL:** `confd.trunks.read`'
      operationId: list_trunks
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Trunks list
          schema:
            $ref: '#/definitions/TrunkItems'
      summary: List trunks
      tags:
      - trunks
    post:
      description: '**Required ACL:** `confd.trunks.create`'
      operationId: create_trunk
      parameters:
      - description: Trunk to create
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/Trunk'
      responses:
        '201':
          description: Trunk created
          schema:
            $ref: '#/definitions/Trunk'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create trunk
      tags:
      - trunks
  /trunks/{trunk_id}:
    delete:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.delete`'
      operationId: delete_trunk
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/trunkid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete trunk
      tags:
      - trunks
    get:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.read`'
      operationId: get_trunk
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/trunkid'
      responses:
        '200':
          description: Trunk
          schema:
            $ref: '#/definitions/Trunk'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get trunk
      tags:
      - trunks
    put:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.update`'
      operationId: update_trunk
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/trunkid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Trunk'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update trunk
      tags:
      - trunks
  /trunks/{trunk_id}/endpoints/custom/{custom_id}:
    delete:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.endpoints.custom.{custom_id}.delete`'
      operationId: dissociate_trunk_endpoint_custom
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/customid'
      responses:
        '204':
          description: Trunk and Custom endpoint dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate trunk and Custom endpoint
      tags:
      - trunks
      - endpoints
      - custom
    put:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.endpoints.custom.{custom_id}.update`'
      operationId: associate_trunk_endpoint_custom
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/customid'
      responses:
        '204':
          description: Trunk and Custom endpoint associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate trunk and Custom endpoint
      tags:
      - trunks
      - endpoints
      - custom
  /trunks/{trunk_id}/endpoints/iax/{iax_id}:
    delete:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.endpoints.iax.{iax_id}.delete`'
      operationId: dissociate_trunk_endpoint_iax
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/iaxid'
      responses:
        '204':
          description: Trunk and IAX endpoint dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate trunk and IAX endpoint
      tags:
      - trunks
      - endpoints
      - iax
    put:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.endpoints.iax.{iax_id}.update`'
      operationId: associate_trunk_endpoint_iax
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/iaxid'
      responses:
        '204':
          description: Trunk and IAX endpoint associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate trunk and IAX endpoint
      tags:
      - trunks
      - endpoints
      - iax
  /trunks/{trunk_id}/endpoints/sip/{sip_uuid}:
    delete:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.endpoints.sip.{sip_uuid}.delete`'
      operationId: dissociate_trunk_endpoint_sip
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/sipuuid'
      responses:
        '204':
          description: Trunk and SIP endpoint dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate trunk and SIP endpoint
      tags:
      - trunks
      - endpoints
      - sip
    put:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.endpoints.sip.{sip_uuid}.update`'
      operationId: associate_trunk_endpoint_sip
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/sipuuid'
      responses:
        '204':
          description: Trunk and SIP endpoint associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate trunk and SIP endpoint
      tags:
      - trunks
      - endpoints
      - sip
  /trunks/{trunk_id}/registers/iax/{iax_id}:
    delete:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.registers.iax.{iax_id}.delete`'
      operationId: dissociate_trunk_register_iax
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/iaxid'
      responses:
        '204':
          description: Trunk and IAX register dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate trunk and IAX register
      tags:
      - trunks
      - registers
      - iax
    put:
      description: '**Required ACL:** `confd.trunks.{trunk_id}.registers.iax.{iax_id}.update`'
      operationId: associate_trunk_register_iax
      parameters:
      - $ref: '#/parameters/trunkid'
      - $ref: '#/parameters/iaxid'
      responses:
        '204':
          description: Trunk and IAX register associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate trunk and IAX register
      tags:
      - trunks
      - registers
      - iax
  /user/me/meetings/{meeting_uuid}/authorizations:
    get:
      description: '**Required ACL:** confd.users.me.meetings.{meeting_uuid}.authorizations.read'
      operationId: list_user_meeting_authorizations
      parameters:
      - $ref: '#/parameters/meeting_uuid'
      responses:
        '200':
          description: Authorizations list
          schema:
            $ref: '#/definitions/MeetingAuthorizationItems'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: List all guest authorization requests of a meeting
      tags:
      - meeting_authorizations
      - meetings
      - users
  /user/me/meetings/{meeting_uuid}/authorizations/{authorization_uuid}/accept:
    put:
      description: '**Required ACL:** confd.users.me.meetings.{meeting_uuid}.authorizations.{authorization_uuid}.accept.update'
      operationId: put_user_meeting_authorization_accept
      parameters:
      - $ref: '#/parameters/meeting_uuid'
      - $ref: '#/parameters/authorization_uuid'
      responses:
        '200':
          description: Authorization details
          schema:
            $ref: '#/definitions/MeetingAuthorization'
        '400':
          $ref: '#/responses/CreateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Accept a guest authorization request
      tags:
      - meeting_authorizations
      - meetings
      - users
  /user/me/meetings/{meeting_uuid}/authorizations/{authorization_uuid}/reject:
    put:
      description: '**Required ACL:** confd.users.me.meetings.{meeting_uuid}.authorizations.{authorization_uuid}.reject.update'
      operationId: put_user_meeting_authorization_reject
      parameters:
      - $ref: '#/parameters/meeting_uuid'
      - $ref: '#/parameters/authorization_uuid'
      responses:
        '200':
          description: Authorization details
          schema:
            $ref: '#/definitions/MeetingAuthorization'
        '400':
          $ref: '#/responses/CreateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Reject a guest authorization request
      tags:
      - meeting_authorizations
      - meetings
      - users
  /users:
    get:
      description: '**Required ACL:** `confd.users.read`'
      operationId: list_user
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/view'
      responses:
        '200':
          description: User list
          schema:
            $ref: '#/definitions/UserItems'
      summary: List users
      tags:
      - users
    post:
      description: '**Required ACL:** `confd.users.create`'
      operationId: create_user
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: User to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserPost'
      responses:
        '201':
          description: User created
          schema:
            $ref: '#/definitions/UserPostResponse'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create user
      tags:
      - users
  /users/export:
    get:
      description: '**Required ACL:** `confd.users.export.read`


        CSV field list available at https://accentvoice.io/uc-doc/administration/users/csv_import'
      externalDocs:
        description: Complete documentation on the CSV data format and fields
        url: https://accentvoice.io/uc-doc/administration/users/csv_import
      operationId: export_users_csv
      parameters:
      - $ref: '#/parameters/tenantuuid'
      produces:
      - text/csv; charset=utf-8
      responses:
        '200':
          description: Users exported successfully
          schema:
            $ref: '#/definitions/UserExport'
      summary: Mass export users and associated resources
      tags:
      - users
  /users/import:
    post:
      consumes:
      - text/csv; charset=utf-8
      description: '**Required ACL:** `confd.users.import.create`


        CSV field list available at https://accentvoice.io/uc-doc/administration/users/csv_import'
      externalDocs:
        description: Complete documentation on the CSV data format and fields
        url: https://accentvoice.io/uc-doc/administration/users/csv_import
      operationId: import_users_csv
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/csvbody'
      responses:
        '201':
          description: Users imported successfully
          schema:
            $ref: '#/definitions/UserImport'
        '400':
          description: Errors occurred during import
          schema:
            $ref: '#/definitions/UserImportError'
      summary: Mass import users and associated resources
      tags:
      - users
    put:
      consumes:
      - text/csv; charset=utf-8
      description: '** This endpoint is disabled.**

        **Required ACL:** `confd.users.import.update`


        CSV field list available at https://accentvoice.io/uc-doc/administration/users/csv_import

        This resource has been disabled since it creates invalid configurations'
      externalDocs:
        description: Complete documentation on the CSV data format and fields
        url: https://accentvoice.io/uc-doc/administration/users/csv_import
      operationId: update_users_csv
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/csvbody'
      responses:
        '200':
          description: Users updated successfully
          schema:
            $ref: '#/definitions/UserUpdate'
        '400':
          description: Errors occurred during update
          schema:
            $ref: '#/definitions/UserImportError'
        '405':
          description: This method is not supported for this resource
      summary: '**Disabled!** Mass import users and associated resources'
      tags:
      - users
  /users/me/meetings:
    get:
      description: '**Required ACL:** `confd.users.me.meetings.read`'
      operationId: list_user_meetings
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Meetings list
          schema:
            $ref: '#/definitions/MeetingItems'
      summary: List user meetings
      tags:
      - meetings
      - users
    post:
      description: '**Required ACL:** `confd.users.me.meetings.create`'
      operationId: create_user_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: Meeting to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/MeetingUserRequest'
      responses:
        '201':
          description: Meeting created
          schema:
            $ref: '#/definitions/Meeting'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create user meeting
      tags:
      - meetings
      - users
  /users/me/meetings/{meeting_uuid}:
    delete:
      description: '**Required ACL:** `confd.users.me.meetings.{meeting_uuid}.delete`'
      operationId: delete_user_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/meeting_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete one of the meetings of the current user
      tags:
      - meetings
      - users
    get:
      description: '**Required ACL:** `confd.users.me.meetings.{meeting_uuid}.read`'
      operationId: get_user_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/meeting_uuid'
      responses:
        '200':
          description: Meeting
          schema:
            $ref: '#/definitions/Meeting'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get one of the meetings of the current user
      tags:
      - meetings
      - users
    put:
      description: '**Required ACL:** `confd.users.me.meetings.{meeting_uuid}.update`'
      operationId: update_user_meeting
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/meeting_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/MeetingRequest'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update one of the meetings of the current user
      tags:
      - meetings
      - users
  /users/me/meetings/{meeting_uuid}/authorizations/{authorization_uuid}:
    delete:
      description: '**Required ACL:** confd.users.me.meetings.{meeting_uuid}.authorizations.{authorization_uuid}.read'
      operationId: delete_user_meeting_authorization
      parameters:
      - $ref: '#/parameters/guest_uuid'
      - $ref: '#/parameters/meeting_uuid'
      - $ref: '#/parameters/authorization_uuid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete the guest authorization to enter a meeting
      tags:
      - meeting_authorizations
      - meetings
      - guests
    get:
      description: '**Required ACL:** confd.users.me.meetings.{meeting_uuid}.authorizations.{authorization_uuid}.read'
      operationId: get_user_meeting_authorization
      parameters:
      - $ref: '#/parameters/guest_uuid'
      - $ref: '#/parameters/meeting_uuid'
      - $ref: '#/parameters/authorization_uuid'
      responses:
        '200':
          description: Authorization details
          schema:
            $ref: '#/definitions/MeetingAuthorization'
        '400':
          $ref: '#/responses/CreateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Read the guest authorization to enter a meeting
      tags:
      - meeting_authorizations
      - meetings
      - guests
  /users/subscriptions:
    get:
      description: '**Required ACL:** `confd.users.subscriptions.read`'
      operationId: get_users_subscriptions
      parameters:
      - $ref: '#/parameters/tenantuuid'
      responses:
        '200':
          description: User subscription
          schema:
            $ref: '#/definitions/UserSubscriptionItems'
      summary: Get user subscription
      tags:
      - users
  /users/{user_id}:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.delete`


        A user can not be deleted if he is associated to a line or a voicemail. Any
        line or voicemail attached to the user must be dissociated first. The user
        will also be removed from all queues, groups or other Accent entities whom he
        is member.


        **Disclaimer**: if `recursive=true`, the user is deleted, all their associations
        with any related resources are removed, and some resources (lines, extensions,
        incalls and auth user) are deleted too.'
      operationId: delete_user
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - description: Indicates if the resources related to the user must be deleted
          too.
        in: query
        name: recursive
        required: false
        type: boolean
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete user
      tags:
      - users
    get:
      description: '**Required ACL:** `confd.users.{user_id}.read`'
      operationId: get_user
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User
          schema:
            $ref: '#/definitions/User'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get user
      tags:
      - users
    head:
      description: '**Required ACL:** `confd.users.{user_id}.read`'
      operationId: head_user
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User exists
        '404':
          description: User does not exist
      summary: Check if user exists
      tags:
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.update`


        If the firstname or the lastname is modified, the name of associated voicemail
        is also updated.'
      operationId: update_user
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update user
      tags:
      - users
  /users/{user_id}/agents:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.agents.delete`'
      operationId: dissociate_user_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '204':
          description: The user and agent have been dissociated.
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate user and agent
      tags:
      - users
      - agents
  /users/{user_id}/agents/{agent_id}:
    put:
      description: '**Required ACL:** `confd.users.{user_id}.agents.{agent_id}.update`'
      operationId: associate_user_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/agentid'
      responses:
        '204':
          description: The user and agent have been associated.
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate user and agent
      tags:
      - users
      - agents
  /users/{user_id}/callpermissions/{callpermission_id}:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.callpermissions.{call_permission_id}.delete`'
      operationId: dissociate_user_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '204':
          description: User and Call Permission dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate user and call permission
      tags:
      - users
      - callpermissions
    put:
      description: '**Required ACL:** `confd.users.{user_id}.callpermissions.{call_permission_id}.update`'
      operationId: associate_user_callpermission
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/callpermissionid'
      responses:
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate user and call permission
      tags:
      - users
      - callpermissions
  /users/{user_id}/fallbacks:
    get:
      description: '**Required ACL:** `confd.users.{user_id}.fallbacks.read`'
      operationId: get_user_fallback
      parameters:
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: Fallbacks for user
          schema:
            $ref: '#/definitions/UserFallbacks'
      summary: List all fallbacks for user
      tags:
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.fallbacks.update`


        **WARNING** This endpoint delete all fields that are not defined.'
      operationId: update_user_fallback
      parameters:
      - $ref: '#/parameters/useriduuid'
      - description: Fallbacks for user
        in: body
        name: body
        schema:
          $ref: '#/definitions/UserFallbacks'
      responses:
        '204':
          description: User's fallbacks updated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update user's fallbacks
      tags:
      - users
  /users/{user_id}/forwards:
    get:
      description: '**Required ACL:** `confd.users.{user_id}.forwards.read`'
      operationId: list_user_forwards
      parameters:
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User-Forwards
          schema:
            $ref: '#/definitions/UserForwards'
      summary: List forwards for a user
      tags:
      - forwards
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.forwards.update`'
      operationId: update_user_forwards
      parameters:
      - $ref: '#/parameters/useriduuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserForwards'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update all forwards for a user
      tags:
      - forwards
      - users
  /users/{user_id}/forwards/{forward_name}:
    get:
      description: '**Required ACL:** `confd.users.{user_id}.forward.{forward_name}.read`'
      operationId: get_user_forward
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/forward'
      responses:
        '200':
          description: User-Forward
          schema:
            $ref: '#/definitions/UserForward'
      summary: Get forward for a user
      tags:
      - forwards
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.forwards.{forward_name}.update`'
      operationId: update_user_forward
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/forward'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserForward'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update a forward for a user
      tags:
      - forwards
      - users
  /users/{user_id}/funckeys:
    get:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.read`'
      operationId: list_user_func_keys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: Func keys for user
          schema:
            $ref: '#/definitions/FuncKeyTemplate'
      summary: List func keys for a user
      tags:
      - funckeys
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.update`


        **WARNING** This endpoint restore to default value or delete all fields that
        are not defined.'
      operationId: update_user_func_keys
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/FuncKeyTemplate'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update func keys for a user
      tags:
      - funckeys
      - users
  /users/{user_id}/funckeys/templates:
    get:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.templates.read`'
      operationId: list_user_func_key_template_associations
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User-FuncKeyTemplate associations
          schema:
            $ref: '#/definitions/UserFuncKeyTemplate'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: List funckey templates associated to user
      tags:
      - funckeys
      - users
  /users/{user_id}/funckeys/templates/{template_id}:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.templates.{template_id}.delete`'
      operationId: dissociate_user_func_key_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/templateid'
      responses:
        '204':
          description: User and template dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate a func key template to a user
      tags:
      - funckeys
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.templates.{template_id}.update`'
      operationId: associate_user_func_key_template
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/templateid'
      responses:
        '204':
          description: User and template associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate a func key template to a user
      tags:
      - funckeys
      - users
  /users/{user_id}/funckeys/{position}:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.{position}.delete`'
      operationId: delete_user_func_key
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Remove func key for user
      tags:
      - funckeys
      - users
    get:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.{position}.read`'
      operationId: get_user_func_key
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/funckeyposition'
      responses:
        '200':
          description: Func key
          schema:
            $ref: '#/definitions/FuncKey'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get a func key for a user
      tags:
      - funckeys
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.funckeys.{position}.update`'
      operationId: update_user_func_key
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/funckeyposition'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/FuncKey'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Add/Replace a func key for a user
      tags:
      - funckeys
      - users
  /users/{user_id}/groups:
    put:
      description: '**Required ACL:** `confd.users.{user_id}.groups`

        **WARNING** This endpoint remove all groups which are not defined.'
      operationId: update_user_groups
      parameters:
      - $ref: '#/parameters/useriduuid'
      - description: Users to associated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserGroupsID'
      responses:
        '204':
          description: Group and Users associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update user and groups
      tags:
      - groups
      - users
  /users/{user_id}/lines:
    put:
      description: '**Required ACL:** `confd.users.{user_id}.lines.update`'
      operationId: associate_user_lines
      parameters:
      - $ref: '#/parameters/useriduuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/LinesID'
      responses:
        '204':
          description: User and Lines associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate user and lines
      tags:
      - users
      - lines
  /users/{user_id}/lines/{line_id}:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.lines.{line_id}.delete`


        Any devices that are attached the line must be removed before dissociating
        a user from its line. A device can be dissociated be resetting it to autoprov
        mode.'
      operationId: dissociate_user_line
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/lineid'
      responses:
        '204':
          description: User and Line dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate user and line
      tags:
      - users
      - lines
    put:
      description: '**Required ACL:** `confd.users.{user_id}.lines.{line_id}.update`'
      operationId: associate_user_line
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/lineid'
      responses:
        '204':
          description: User and Line associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate user and line
      tags:
      - users
      - lines
  /users/{user_id}/schedules/{schedule_id}:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.schedules.{schedule_id}.delete`'
      operationId: dissociate_user_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: User and Schedule dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate user and schedule
      tags:
      - users
      - schedules
    put:
      description: '**Required ACL:** `confd.users.{user_id}.schedules.{schedule_id}.update`'
      operationId: associate_user_schedule
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/scheduleid'
      responses:
        '204':
          description: User and Schedule associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate user and schedule
      tags:
      - users
      - schedules
  /users/{user_id}/services:
    get:
      description: '**Required ACL:** `confd.users.{user_id}.services.read`'
      operationId: get_user_services
      parameters:
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User-Services
          schema:
            $ref: '#/definitions/UserServices'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get status of all user's services
      tags:
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.services.update`'
      operationId: update_user_services
      parameters:
      - $ref: '#/parameters/useriduuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserServices'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Update all services for a user
      tags:
      - users
  /users/{user_id}/services/{service_name}:
    get:
      description: '**Required ACL:** `confd.users.{user_id}.services.{service}.read`'
      operationId: get_user_service
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/service'
      responses:
        '200':
          description: User-Service
          schema:
            $ref: '#/definitions/UserService'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get status of service
      tags:
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_id}.services.{service}.update`'
      operationId: update_user_service
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/service'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserService'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
      summary: Enable/Disable service for a user
      tags:
      - users
  /users/{user_id}/voicemails:
    delete:
      description: '**Required ACL:** `confd.users.{user_id}.voicemails.delete`'
      operationId: dissociate_user_voicemail
      parameters:
      - $ref: '#/parameters/useriduuid'
      responses:
        '204':
          description: User and Voicemail dissociated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Dissociate user and voicemail
      tags:
      - users
      - voicemails
    get:
      description: '**Required ACL:** `confd.users.{user_id}.voicemails.read`'
      operationId: get_user_voicemail
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      responses:
        '200':
          description: User's voicemail list
          schema:
            $ref: '#/definitions/VoicemailItems'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get user voicemails
      tags:
      - users
      - voicemails
    post:
      description: '**Required ACL:** `confd.users.{user_id}.voicemails.create`'
      operationId: create_user_voicemail
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useriduuid'
      - description: Voicemail to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Voicemail'
      responses:
        '201':
          description: Voicemail created
          schema:
            $ref: '#/definitions/Voicemail'
        '400':
          $ref: '#/responses/CreateError'
        '404':
          description: User not found
          schema:
            $ref: '#/responses/NotFoundError'
      summary: Create user voicemail
      tags:
      - users
      - voicemails
  /users/{user_id}/voicemails/{voicemail_id}:
    put:
      description: '**Required ACL:** `confd.users.{user_id}.voicemails.{voicemail_id}.update`'
      operationId: associate_user_voicemail
      parameters:
      - $ref: '#/parameters/useriduuid'
      - $ref: '#/parameters/voicemailid'
      responses:
        '204':
          description: User and voicemail associated
        '400':
          $ref: '#/responses/GenericError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Associate user and voicemail
      tags:
      - users
      - voicemails
  /users/{user_uuid}/external/apps:
    get:
      description: '**Required ACL:** `confd.users.{user_uuid}.external.apps.read`'
      operationId: list_user_external_apps
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useruuid'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/user_external_app_view'
      responses:
        '200':
          description: User external apps list
          schema:
            $ref: '#/definitions/UserExternalAppItems'
      summary: List user external apps
      tags:
      - external_apps
      - users
  /users/{user_uuid}/external/apps/{app_name}:
    delete:
      description: '**Required ACL:** `confd.users.{user_uuid}.external.apps.{app_name}.delete`'
      operationId: delete_user_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useruuid'
      - $ref: '#/parameters/externalappname'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete user external app
      tags:
      - external_apps
      - users
    get:
      description: '**Required ACL:** `confd.users.{user_uuid}.external.apps.{app_name}.read`'
      operationId: get_user_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useruuid'
      - $ref: '#/parameters/externalappname'
      - $ref: '#/parameters/user_external_app_view'
      responses:
        '200':
          description: External App
          schema:
            $ref: '#/definitions/UserExternalApp'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get user external app
      tags:
      - external_apps
      - users
    post:
      description: '**Required ACL:** `confd.users.{user_uuid}.external.apps.{app_name}.create`'
      operationId: create_user_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useruuid'
      - $ref: '#/parameters/externalappname'
      - description: External app to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserExternalApp'
      responses:
        '201':
          description: External app created
          schema:
            $ref: '#/definitions/UserExternalApp'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create user external app
      tags:
      - external_apps
      - users
    put:
      description: '**Required ACL:** `confd.users.{user_uuid}.external.apps.{app_name}.update`'
      operationId: update_user_external_app
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/useruuid'
      - $ref: '#/parameters/externalappname'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserExternalApp'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update user external app
      tags:
      - external_apps
      - users
  /users/{user_uuid}/lines/main/associated/endpoints/sip:
    get:
      description: '**Required ACL:** `confd.users.{user_uuid}.lines.main.associated.endpoints.sip.read`'
      operationId: get_user_line_main_associated_endpoints_sip
      parameters:
      - $ref: '#/parameters/useruuid'
      - $ref: '#/parameters/endpoint_sip_view'
      responses:
        '200':
          description: SIP endpoint of main line for a user
          schema:
            $ref: '#/definitions/EndpointSIP'
        '400':
          description: Invalid `view`
      summary: Get SIP endpoint of main line for a user
      tags:
      - endpoints
      - lines
      - users
  /users/{user_uuid}/lines/{line_id}/associated/endpoints/sip:
    get:
      description: '**Required ACL:** `confd.users.{user_uuid}.lines.{line_id}.associated.endpoints.sip.read`'
      operationId: get_user_line_associated_endpoints_sip
      parameters:
      - $ref: '#/parameters/useruuid'
      - $ref: '#/parameters/lineid'
      - $ref: '#/parameters/endpoint_sip_view'
      responses:
        '200':
          description: SIP endpoint of a line for a user
          schema:
            $ref: '#/definitions/EndpointSIP'
        '400':
          description: Invalid `view`
      summary: Get SIP endpoint of a line for a user
      tags:
      - endpoints
      - lines
      - users
  /voicemails:
    get:
      description: '**Required ACL:** `confd.voicemails.read`'
      operationId: list_voicemails
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Voicemail list
          schema:
            $ref: '#/definitions/VoicemailItems'
      summary: List voicemails
      tags:
      - voicemails
    post:
      description: '**Required ACL:** `confd.voicemails.create`'
      operationId: create_voicemail
      parameters:
      - description: Voicemail to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Voicemail'
      responses:
        '201':
          description: Voicemail created
          schema:
            $ref: '#/definitions/Voicemail'
        '400':
          $ref: '#/responses/CreateError'
      summary: Create voicemail
      tags:
      - voicemails
  /voicemails/{voicemail_id}:
    delete:
      description: '**Required ACL:** `confd.voicemails.{voicemail_id}.delete`


        A voicemail can not be deleted if it is still attached to a user. The user
        must be dissociated first. Any extension that redirects to the voicemail (e.g.
        an Incoming call) will be disabled after deletion.'
      operationId: delete_voicemail
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/voicemailid'
      responses:
        '204':
          $ref: '#/responses/ResourceDeleted'
        '400':
          $ref: '#/responses/DeleteError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Delete voicemail
      tags:
      - voicemails
    get:
      description: '**Required ACL:** `confd.voicemails.{voicemail_id}.read`'
      operationId: get_voicemail
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/voicemailid'
      responses:
        '200':
          description: Voicemail
          schema:
            $ref: '#/definitions/Voicemail'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get voicemail
      tags:
      - voicemails
    put:
      description: '**Required ACL:** `confd.voicemails.{voicemail_id}.update`'
      operationId: update_voicemail
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/voicemailid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Voicemail'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/UpdateError'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update voicemail
      tags:
      - voicemails
  /wizard:
    get:
      description: '**Required ACL:** none'
      operationId: get_wizard_status
      responses:
        '200':
          description: Wizard status
          schema:
            $ref: '#/definitions/WizardConfigured'
      summary: Get wizard status
      tags:
      - wizard
    post:
      description: '**Required ACL:** none


        This API can only be used before wizard configuration.'
      operationId: pass_wizard
      parameters:
      - description: Wizard parameters to configure
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Wizard'
      responses:
        '201':
          description: Wizard passed
          schema:
            $ref: '#/definitions/Wizard'
        '400':
          $ref: '#/responses/CreateError'
        '403':
          $ref: '#/responses/AlreadyConfiguredError'
      summary: Pass the wizard
      tags:
      - wizard
  /wizard/discover:
    get:
      description: '**Required ACL:** none
        This API can only be used before wizard configuration.'
      operationId: get_wizard_discover
      responses:
        '200':
          description: Wizard discover
          schema:
            $ref: '#/definitions/WizardDiscover'
        '403':
          $ref: '#/responses/AlreadyConfiguredError'
      summary: Get wizard discover
      tags:
      - wizard
produces:
- application/json
responses:
  AlreadyConfiguredError:
    description: The Accent must not be configured
    schema:
      $ref: '#/definitions/Error'
  CreateError:
    description: An error occurred when creating the resource
    schema:
      $ref: '#/definitions/Error'
  DeleteError:
    description: An error occurred when deleting the resource
    schema:
      $ref: '#/definitions/Error'
  GenericError:
    description: An error occurred during the operation
    schema:
      $ref: '#/definitions/Error'
  NotFoundError:
    description: The resource requested was not found on the server
    schema:
      $ref: '#/definitions/Error'
  ResourceDeleted:
    description: Resource was deleted successfully
  ResourceUpdated:
    description: Resource was updated successfully
  UpdateError:
    description: An error occurred when updating the resource
    schema:
      $ref: '#/definitions/Error'
schemes:
- http
- https
security:
- accent_auth_token: []
securityDefinitions:
  accent_auth_token:
    in: header
    name: X-Auth-Token
    type: apiKey
swagger: '2.0'
tags:
- externalDocs:
    description: Documentation on function key models
    url: https://accentvoice.io/uc-doc/api_sdk/rest_api/confd/func_keys
  name: funckeys
x-accent-name: confd
x-accent-port: 9486
