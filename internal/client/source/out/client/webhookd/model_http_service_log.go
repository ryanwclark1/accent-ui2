/*
accent-webhookd

Control your webhooks from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package webhookd

import (
	"encoding/json"
)

// checks if the HTTPServiceLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HTTPServiceLog{}

// HTTPServiceLog struct for HTTPServiceLog
type HTTPServiceLog struct {
	RequestBody     *string            `json:"request_body,omitempty"`
	RequestHeaders  *map[string]string `json:"request_headers,omitempty"`
	RequestMethod   *string            `json:"request_method,omitempty"`
	RequestUrl      *string            `json:"request_url,omitempty"`
	ResponseBody    *string            `json:"response_body,omitempty"`
	ResponseHeaders *map[string]string `json:"response_headers,omitempty"`
	ResponseMethod  *string            `json:"response_method,omitempty"`
	ResponseUrl     *string            `json:"response_url,omitempty"`
}

// NewHTTPServiceLog instantiates a new HTTPServiceLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHTTPServiceLog() *HTTPServiceLog {
	this := HTTPServiceLog{}
	return &this
}

// NewHTTPServiceLogWithDefaults instantiates a new HTTPServiceLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHTTPServiceLogWithDefaults() *HTTPServiceLog {
	this := HTTPServiceLog{}
	return &this
}

// GetRequestBody returns the RequestBody field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetRequestBody() string {
	if o == nil || IsNil(o.RequestBody) {
		var ret string
		return ret
	}
	return *o.RequestBody
}

// GetRequestBodyOk returns a tuple with the RequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetRequestBodyOk() (*string, bool) {
	if o == nil || IsNil(o.RequestBody) {
		return nil, false
	}
	return o.RequestBody, true
}

// HasRequestBody returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasRequestBody() bool {
	if o != nil && !IsNil(o.RequestBody) {
		return true
	}

	return false
}

// SetRequestBody gets a reference to the given string and assigns it to the RequestBody field.
func (o *HTTPServiceLog) SetRequestBody(v string) {
	o.RequestBody = &v
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetRequestHeaders() map[string]string {
	if o == nil || IsNil(o.RequestHeaders) {
		var ret map[string]string
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetRequestHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.RequestHeaders) {
		return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasRequestHeaders() bool {
	if o != nil && !IsNil(o.RequestHeaders) {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given map[string]string and assigns it to the RequestHeaders field.
func (o *HTTPServiceLog) SetRequestHeaders(v map[string]string) {
	o.RequestHeaders = &v
}

// GetRequestMethod returns the RequestMethod field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetRequestMethod() string {
	if o == nil || IsNil(o.RequestMethod) {
		var ret string
		return ret
	}
	return *o.RequestMethod
}

// GetRequestMethodOk returns a tuple with the RequestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetRequestMethodOk() (*string, bool) {
	if o == nil || IsNil(o.RequestMethod) {
		return nil, false
	}
	return o.RequestMethod, true
}

// HasRequestMethod returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasRequestMethod() bool {
	if o != nil && !IsNil(o.RequestMethod) {
		return true
	}

	return false
}

// SetRequestMethod gets a reference to the given string and assigns it to the RequestMethod field.
func (o *HTTPServiceLog) SetRequestMethod(v string) {
	o.RequestMethod = &v
}

// GetRequestUrl returns the RequestUrl field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetRequestUrl() string {
	if o == nil || IsNil(o.RequestUrl) {
		var ret string
		return ret
	}
	return *o.RequestUrl
}

// GetRequestUrlOk returns a tuple with the RequestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetRequestUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RequestUrl) {
		return nil, false
	}
	return o.RequestUrl, true
}

// HasRequestUrl returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasRequestUrl() bool {
	if o != nil && !IsNil(o.RequestUrl) {
		return true
	}

	return false
}

// SetRequestUrl gets a reference to the given string and assigns it to the RequestUrl field.
func (o *HTTPServiceLog) SetRequestUrl(v string) {
	o.RequestUrl = &v
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetResponseBody() string {
	if o == nil || IsNil(o.ResponseBody) {
		var ret string
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetResponseBodyOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseBody) {
		return nil, false
	}
	return o.ResponseBody, true
}

// HasResponseBody returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasResponseBody() bool {
	if o != nil && !IsNil(o.ResponseBody) {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given string and assigns it to the ResponseBody field.
func (o *HTTPServiceLog) SetResponseBody(v string) {
	o.ResponseBody = &v
}

// GetResponseHeaders returns the ResponseHeaders field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetResponseHeaders() map[string]string {
	if o == nil || IsNil(o.ResponseHeaders) {
		var ret map[string]string
		return ret
	}
	return *o.ResponseHeaders
}

// GetResponseHeadersOk returns a tuple with the ResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetResponseHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ResponseHeaders) {
		return nil, false
	}
	return o.ResponseHeaders, true
}

// HasResponseHeaders returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasResponseHeaders() bool {
	if o != nil && !IsNil(o.ResponseHeaders) {
		return true
	}

	return false
}

// SetResponseHeaders gets a reference to the given map[string]string and assigns it to the ResponseHeaders field.
func (o *HTTPServiceLog) SetResponseHeaders(v map[string]string) {
	o.ResponseHeaders = &v
}

// GetResponseMethod returns the ResponseMethod field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetResponseMethod() string {
	if o == nil || IsNil(o.ResponseMethod) {
		var ret string
		return ret
	}
	return *o.ResponseMethod
}

// GetResponseMethodOk returns a tuple with the ResponseMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetResponseMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseMethod) {
		return nil, false
	}
	return o.ResponseMethod, true
}

// HasResponseMethod returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasResponseMethod() bool {
	if o != nil && !IsNil(o.ResponseMethod) {
		return true
	}

	return false
}

// SetResponseMethod gets a reference to the given string and assigns it to the ResponseMethod field.
func (o *HTTPServiceLog) SetResponseMethod(v string) {
	o.ResponseMethod = &v
}

// GetResponseUrl returns the ResponseUrl field value if set, zero value otherwise.
func (o *HTTPServiceLog) GetResponseUrl() string {
	if o == nil || IsNil(o.ResponseUrl) {
		var ret string
		return ret
	}
	return *o.ResponseUrl
}

// GetResponseUrlOk returns a tuple with the ResponseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HTTPServiceLog) GetResponseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseUrl) {
		return nil, false
	}
	return o.ResponseUrl, true
}

// HasResponseUrl returns a boolean if a field has been set.
func (o *HTTPServiceLog) HasResponseUrl() bool {
	if o != nil && !IsNil(o.ResponseUrl) {
		return true
	}

	return false
}

// SetResponseUrl gets a reference to the given string and assigns it to the ResponseUrl field.
func (o *HTTPServiceLog) SetResponseUrl(v string) {
	o.ResponseUrl = &v
}

func (o HTTPServiceLog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HTTPServiceLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestBody) {
		toSerialize["request_body"] = o.RequestBody
	}
	if !IsNil(o.RequestHeaders) {
		toSerialize["request_headers"] = o.RequestHeaders
	}
	if !IsNil(o.RequestMethod) {
		toSerialize["request_method"] = o.RequestMethod
	}
	if !IsNil(o.RequestUrl) {
		toSerialize["request_url"] = o.RequestUrl
	}
	if !IsNil(o.ResponseBody) {
		toSerialize["response_body"] = o.ResponseBody
	}
	if !IsNil(o.ResponseHeaders) {
		toSerialize["response_headers"] = o.ResponseHeaders
	}
	if !IsNil(o.ResponseMethod) {
		toSerialize["response_method"] = o.ResponseMethod
	}
	if !IsNil(o.ResponseUrl) {
		toSerialize["response_url"] = o.ResponseUrl
	}
	return toSerialize, nil
}

type NullableHTTPServiceLog struct {
	value *HTTPServiceLog
	isSet bool
}

func (v NullableHTTPServiceLog) Get() *HTTPServiceLog {
	return v.value
}

func (v *NullableHTTPServiceLog) Set(val *HTTPServiceLog) {
	v.value = val
	v.isSet = true
}

func (v NullableHTTPServiceLog) IsSet() bool {
	return v.isSet
}

func (v *NullableHTTPServiceLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHTTPServiceLog(val *HTTPServiceLog) *NullableHTTPServiceLog {
	return &NullableHTTPServiceLog{value: val, isSet: true}
}

func (v NullableHTTPServiceLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHTTPServiceLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
