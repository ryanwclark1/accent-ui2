/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"encoding/json"
)

// checks if the AdhocConferenceCreation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdhocConferenceCreation{}

// AdhocConferenceCreation struct for AdhocConferenceCreation
type AdhocConferenceCreation struct {
	// The call_id of the host call
	HostCallId *string `json:"host_call_id,omitempty"`
	// The call_id of the participating calls in this conference, excluding the host.
	ParticipantCallIds []string `json:"participant_call_ids,omitempty"`
}

// NewAdhocConferenceCreation instantiates a new AdhocConferenceCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdhocConferenceCreation() *AdhocConferenceCreation {
	this := AdhocConferenceCreation{}
	return &this
}

// NewAdhocConferenceCreationWithDefaults instantiates a new AdhocConferenceCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdhocConferenceCreationWithDefaults() *AdhocConferenceCreation {
	this := AdhocConferenceCreation{}
	return &this
}

// GetHostCallId returns the HostCallId field value if set, zero value otherwise.
func (o *AdhocConferenceCreation) GetHostCallId() string {
	if o == nil || IsNil(o.HostCallId) {
		var ret string
		return ret
	}
	return *o.HostCallId
}

// GetHostCallIdOk returns a tuple with the HostCallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdhocConferenceCreation) GetHostCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostCallId) {
		return nil, false
	}
	return o.HostCallId, true
}

// HasHostCallId returns a boolean if a field has been set.
func (o *AdhocConferenceCreation) HasHostCallId() bool {
	if o != nil && !IsNil(o.HostCallId) {
		return true
	}

	return false
}

// SetHostCallId gets a reference to the given string and assigns it to the HostCallId field.
func (o *AdhocConferenceCreation) SetHostCallId(v string) {
	o.HostCallId = &v
}

// GetParticipantCallIds returns the ParticipantCallIds field value if set, zero value otherwise.
func (o *AdhocConferenceCreation) GetParticipantCallIds() []string {
	if o == nil || IsNil(o.ParticipantCallIds) {
		var ret []string
		return ret
	}
	return o.ParticipantCallIds
}

// GetParticipantCallIdsOk returns a tuple with the ParticipantCallIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdhocConferenceCreation) GetParticipantCallIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParticipantCallIds) {
		return nil, false
	}
	return o.ParticipantCallIds, true
}

// HasParticipantCallIds returns a boolean if a field has been set.
func (o *AdhocConferenceCreation) HasParticipantCallIds() bool {
	if o != nil && !IsNil(o.ParticipantCallIds) {
		return true
	}

	return false
}

// SetParticipantCallIds gets a reference to the given []string and assigns it to the ParticipantCallIds field.
func (o *AdhocConferenceCreation) SetParticipantCallIds(v []string) {
	o.ParticipantCallIds = v
}

func (o AdhocConferenceCreation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdhocConferenceCreation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HostCallId) {
		toSerialize["host_call_id"] = o.HostCallId
	}
	if !IsNil(o.ParticipantCallIds) {
		toSerialize["participant_call_ids"] = o.ParticipantCallIds
	}
	return toSerialize, nil
}

type NullableAdhocConferenceCreation struct {
	value *AdhocConferenceCreation
	isSet bool
}

func (v NullableAdhocConferenceCreation) Get() *AdhocConferenceCreation {
	return v.value
}

func (v *NullableAdhocConferenceCreation) Set(val *AdhocConferenceCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableAdhocConferenceCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableAdhocConferenceCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdhocConferenceCreation(val *AdhocConferenceCreation) *NullableAdhocConferenceCreation {
	return &NullableAdhocConferenceCreation{value: val, isSet: true}
}

func (v NullableAdhocConferenceCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdhocConferenceCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
