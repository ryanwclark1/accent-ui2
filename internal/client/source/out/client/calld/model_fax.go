/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"encoding/json"
)

// checks if the Fax type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Fax{}

// Fax struct for Fax
type Fax struct {
	// The ID of the call that produced this fax
	CallId *string `json:"call_id,omitempty"`
	// The Caller ID that was presented to the fax recipient
	CallerId *string `json:"caller_id,omitempty"`
	// The context where the fax was sent
	Context *string `json:"context,omitempty"`
	// The extension where the fax was sent
	Extension *string `json:"extension,omitempty"`
	// The fax ID
	Id *string `json:"id,omitempty"`
	// Extension to compose before sending fax. Useful for fax in IVR
	IvrExtension *string `json:"ivr_extension,omitempty"`
	// The tenant UUID where the fax was sent from
	TenantUuid *string `json:"tenant_uuid,omitempty"`
	// The UUID of the user that sent the fax. May be null if the fax was sent by another service.
	UserUuid *string `json:"user_uuid,omitempty"`
	// Time waiting before sending fax when destination has answered (in seconds)
	WaitTime *string `json:"wait_time,omitempty"`
}

// NewFax instantiates a new Fax object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFax() *Fax {
	this := Fax{}
	return &this
}

// NewFaxWithDefaults instantiates a new Fax object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFaxWithDefaults() *Fax {
	this := Fax{}
	return &this
}

// GetCallId returns the CallId field value if set, zero value otherwise.
func (o *Fax) GetCallId() string {
	if o == nil || IsNil(o.CallId) {
		var ret string
		return ret
	}
	return *o.CallId
}

// GetCallIdOk returns a tuple with the CallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetCallIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallId) {
		return nil, false
	}
	return o.CallId, true
}

// HasCallId returns a boolean if a field has been set.
func (o *Fax) HasCallId() bool {
	if o != nil && !IsNil(o.CallId) {
		return true
	}

	return false
}

// SetCallId gets a reference to the given string and assigns it to the CallId field.
func (o *Fax) SetCallId(v string) {
	o.CallId = &v
}

// GetCallerId returns the CallerId field value if set, zero value otherwise.
func (o *Fax) GetCallerId() string {
	if o == nil || IsNil(o.CallerId) {
		var ret string
		return ret
	}
	return *o.CallerId
}

// GetCallerIdOk returns a tuple with the CallerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetCallerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CallerId) {
		return nil, false
	}
	return o.CallerId, true
}

// HasCallerId returns a boolean if a field has been set.
func (o *Fax) HasCallerId() bool {
	if o != nil && !IsNil(o.CallerId) {
		return true
	}

	return false
}

// SetCallerId gets a reference to the given string and assigns it to the CallerId field.
func (o *Fax) SetCallerId(v string) {
	o.CallerId = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *Fax) GetContext() string {
	if o == nil || IsNil(o.Context) {
		var ret string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetContextOk() (*string, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *Fax) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given string and assigns it to the Context field.
func (o *Fax) SetContext(v string) {
	o.Context = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *Fax) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *Fax) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *Fax) SetExtension(v string) {
	o.Extension = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Fax) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Fax) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Fax) SetId(v string) {
	o.Id = &v
}

// GetIvrExtension returns the IvrExtension field value if set, zero value otherwise.
func (o *Fax) GetIvrExtension() string {
	if o == nil || IsNil(o.IvrExtension) {
		var ret string
		return ret
	}
	return *o.IvrExtension
}

// GetIvrExtensionOk returns a tuple with the IvrExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetIvrExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.IvrExtension) {
		return nil, false
	}
	return o.IvrExtension, true
}

// HasIvrExtension returns a boolean if a field has been set.
func (o *Fax) HasIvrExtension() bool {
	if o != nil && !IsNil(o.IvrExtension) {
		return true
	}

	return false
}

// SetIvrExtension gets a reference to the given string and assigns it to the IvrExtension field.
func (o *Fax) SetIvrExtension(v string) {
	o.IvrExtension = &v
}

// GetTenantUuid returns the TenantUuid field value if set, zero value otherwise.
func (o *Fax) GetTenantUuid() string {
	if o == nil || IsNil(o.TenantUuid) {
		var ret string
		return ret
	}
	return *o.TenantUuid
}

// GetTenantUuidOk returns a tuple with the TenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TenantUuid) {
		return nil, false
	}
	return o.TenantUuid, true
}

// HasTenantUuid returns a boolean if a field has been set.
func (o *Fax) HasTenantUuid() bool {
	if o != nil && !IsNil(o.TenantUuid) {
		return true
	}

	return false
}

// SetTenantUuid gets a reference to the given string and assigns it to the TenantUuid field.
func (o *Fax) SetTenantUuid(v string) {
	o.TenantUuid = &v
}

// GetUserUuid returns the UserUuid field value if set, zero value otherwise.
func (o *Fax) GetUserUuid() string {
	if o == nil || IsNil(o.UserUuid) {
		var ret string
		return ret
	}
	return *o.UserUuid
}

// GetUserUuidOk returns a tuple with the UserUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetUserUuidOk() (*string, bool) {
	if o == nil || IsNil(o.UserUuid) {
		return nil, false
	}
	return o.UserUuid, true
}

// HasUserUuid returns a boolean if a field has been set.
func (o *Fax) HasUserUuid() bool {
	if o != nil && !IsNil(o.UserUuid) {
		return true
	}

	return false
}

// SetUserUuid gets a reference to the given string and assigns it to the UserUuid field.
func (o *Fax) SetUserUuid(v string) {
	o.UserUuid = &v
}

// GetWaitTime returns the WaitTime field value if set, zero value otherwise.
func (o *Fax) GetWaitTime() string {
	if o == nil || IsNil(o.WaitTime) {
		var ret string
		return ret
	}
	return *o.WaitTime
}

// GetWaitTimeOk returns a tuple with the WaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fax) GetWaitTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WaitTime) {
		return nil, false
	}
	return o.WaitTime, true
}

// HasWaitTime returns a boolean if a field has been set.
func (o *Fax) HasWaitTime() bool {
	if o != nil && !IsNil(o.WaitTime) {
		return true
	}

	return false
}

// SetWaitTime gets a reference to the given string and assigns it to the WaitTime field.
func (o *Fax) SetWaitTime(v string) {
	o.WaitTime = &v
}

func (o Fax) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fax) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallId) {
		toSerialize["call_id"] = o.CallId
	}
	if !IsNil(o.CallerId) {
		toSerialize["caller_id"] = o.CallerId
	}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IvrExtension) {
		toSerialize["ivr_extension"] = o.IvrExtension
	}
	if !IsNil(o.TenantUuid) {
		toSerialize["tenant_uuid"] = o.TenantUuid
	}
	if !IsNil(o.UserUuid) {
		toSerialize["user_uuid"] = o.UserUuid
	}
	if !IsNil(o.WaitTime) {
		toSerialize["wait_time"] = o.WaitTime
	}
	return toSerialize, nil
}

type NullableFax struct {
	value *Fax
	isSet bool
}

func (v NullableFax) Get() *Fax {
	return v.value
}

func (v *NullableFax) Set(val *Fax) {
	v.value = val
	v.isSet = true
}

func (v NullableFax) IsSet() bool {
	return v.isSet
}

func (v *NullableFax) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFax(val *Fax) *NullableFax {
	return &NullableFax{value: val, isSet: true}
}

func (v NullableFax) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFax) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
