/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CallRequestSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallRequestSource{}

// CallRequestSource Caller parameters
type CallRequestSource struct {
	// Use all of the lines of the user to make the call (ignored when `line_id` is specified).
	AllLines *bool `json:"all_lines,omitempty"`
	// Inform the phone that it should answer automatically. Limitation: this does not work if `all_lines` is true, if `from_mobile` is true or if the phone is SCCP.
	AutoAnswer *bool `json:"auto_answer,omitempty"`
	// Start the call from the user's mobile phone. Default is False
	FromMobile *bool `json:"from_mobile,omitempty"`
	// ID of the line of the user used to make the call. Default is the main line of the user.
	LineId *int32 `json:"line_id,omitempty"`
	// UUID of the user making the call
	User string `json:"user"`
}

type _CallRequestSource CallRequestSource

// NewCallRequestSource instantiates a new CallRequestSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallRequestSource(user string) *CallRequestSource {
	this := CallRequestSource{}
	this.User = user
	return &this
}

// NewCallRequestSourceWithDefaults instantiates a new CallRequestSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallRequestSourceWithDefaults() *CallRequestSource {
	this := CallRequestSource{}
	return &this
}

// GetAllLines returns the AllLines field value if set, zero value otherwise.
func (o *CallRequestSource) GetAllLines() bool {
	if o == nil || IsNil(o.AllLines) {
		var ret bool
		return ret
	}
	return *o.AllLines
}

// GetAllLinesOk returns a tuple with the AllLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRequestSource) GetAllLinesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllLines) {
		return nil, false
	}
	return o.AllLines, true
}

// HasAllLines returns a boolean if a field has been set.
func (o *CallRequestSource) HasAllLines() bool {
	if o != nil && !IsNil(o.AllLines) {
		return true
	}

	return false
}

// SetAllLines gets a reference to the given bool and assigns it to the AllLines field.
func (o *CallRequestSource) SetAllLines(v bool) {
	o.AllLines = &v
}

// GetAutoAnswer returns the AutoAnswer field value if set, zero value otherwise.
func (o *CallRequestSource) GetAutoAnswer() bool {
	if o == nil || IsNil(o.AutoAnswer) {
		var ret bool
		return ret
	}
	return *o.AutoAnswer
}

// GetAutoAnswerOk returns a tuple with the AutoAnswer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRequestSource) GetAutoAnswerOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoAnswer) {
		return nil, false
	}
	return o.AutoAnswer, true
}

// HasAutoAnswer returns a boolean if a field has been set.
func (o *CallRequestSource) HasAutoAnswer() bool {
	if o != nil && !IsNil(o.AutoAnswer) {
		return true
	}

	return false
}

// SetAutoAnswer gets a reference to the given bool and assigns it to the AutoAnswer field.
func (o *CallRequestSource) SetAutoAnswer(v bool) {
	o.AutoAnswer = &v
}

// GetFromMobile returns the FromMobile field value if set, zero value otherwise.
func (o *CallRequestSource) GetFromMobile() bool {
	if o == nil || IsNil(o.FromMobile) {
		var ret bool
		return ret
	}
	return *o.FromMobile
}

// GetFromMobileOk returns a tuple with the FromMobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRequestSource) GetFromMobileOk() (*bool, bool) {
	if o == nil || IsNil(o.FromMobile) {
		return nil, false
	}
	return o.FromMobile, true
}

// HasFromMobile returns a boolean if a field has been set.
func (o *CallRequestSource) HasFromMobile() bool {
	if o != nil && !IsNil(o.FromMobile) {
		return true
	}

	return false
}

// SetFromMobile gets a reference to the given bool and assigns it to the FromMobile field.
func (o *CallRequestSource) SetFromMobile(v bool) {
	o.FromMobile = &v
}

// GetLineId returns the LineId field value if set, zero value otherwise.
func (o *CallRequestSource) GetLineId() int32 {
	if o == nil || IsNil(o.LineId) {
		var ret int32
		return ret
	}
	return *o.LineId
}

// GetLineIdOk returns a tuple with the LineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallRequestSource) GetLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LineId) {
		return nil, false
	}
	return o.LineId, true
}

// HasLineId returns a boolean if a field has been set.
func (o *CallRequestSource) HasLineId() bool {
	if o != nil && !IsNil(o.LineId) {
		return true
	}

	return false
}

// SetLineId gets a reference to the given int32 and assigns it to the LineId field.
func (o *CallRequestSource) SetLineId(v int32) {
	o.LineId = &v
}

// GetUser returns the User field value
func (o *CallRequestSource) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *CallRequestSource) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *CallRequestSource) SetUser(v string) {
	o.User = v
}

func (o CallRequestSource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallRequestSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllLines) {
		toSerialize["all_lines"] = o.AllLines
	}
	if !IsNil(o.AutoAnswer) {
		toSerialize["auto_answer"] = o.AutoAnswer
	}
	if !IsNil(o.FromMobile) {
		toSerialize["from_mobile"] = o.FromMobile
	}
	if !IsNil(o.LineId) {
		toSerialize["line_id"] = o.LineId
	}
	toSerialize["user"] = o.User
	return toSerialize, nil
}

func (o *CallRequestSource) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCallRequestSource := _CallRequestSource{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCallRequestSource)

	if err != nil {
		return err
	}

	*o = CallRequestSource(varCallRequestSource)

	return err
}

type NullableCallRequestSource struct {
	value *CallRequestSource
	isSet bool
}

func (v NullableCallRequestSource) Get() *CallRequestSource {
	return v.value
}

func (v *NullableCallRequestSource) Set(val *CallRequestSource) {
	v.value = val
	v.isSet = true
}

func (v NullableCallRequestSource) IsSet() bool {
	return v.isSet
}

func (v *NullableCallRequestSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallRequestSource(val *CallRequestSource) *NullableCallRequestSource {
	return &NullableCallRequestSource{value: val, isSet: true}
}

func (v NullableCallRequestSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallRequestSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
