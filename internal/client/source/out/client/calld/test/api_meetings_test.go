/*
accent-calld

Testing MeetingsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package calld

import (
	"context"
	openapiclient "github.com/ryanwclark/accent-voice/calld"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_calld_MeetingsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MeetingsAPIService GetGuestMeetingStatus", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var meetingUuid string

		resp, httpRes, err := apiClient.MeetingsAPI.GetGuestMeetingStatus(context.Background(), meetingUuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MeetingsAPIService KickMeetingParticipant", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var meetingUuid string
		var participantId string

		httpRes, err := apiClient.MeetingsAPI.KickMeetingParticipant(context.Background(), meetingUuid, participantId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MeetingsAPIService KickUserMeetingParticipant", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var meetingUuid string
		var participantId string

		httpRes, err := apiClient.MeetingsAPI.KickUserMeetingParticipant(context.Background(), meetingUuid, participantId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MeetingsAPIService ListMeetingParticipants", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var meetingUuid string

		resp, httpRes, err := apiClient.MeetingsAPI.ListMeetingParticipants(context.Background(), meetingUuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MeetingsAPIService ListUserMeetingParticipants", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var meetingUuid string

		resp, httpRes, err := apiClient.MeetingsAPI.ListUserMeetingParticipants(context.Background(), meetingUuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
