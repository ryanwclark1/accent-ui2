/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"encoding/json"
)

// checks if the Voicemail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Voicemail{}

// Voicemail struct for Voicemail
type Voicemail struct {
	// The voicemail's folders
	Folders []VoicemailFolder `json:"folders,omitempty"`
	// The voicemail's ID
	Id *int32 `json:"id,omitempty"`
	// The voicemail's name
	Name *string `json:"name,omitempty"`
	// The voicemail's number
	Number *string `json:"number,omitempty"`
}

// NewVoicemail instantiates a new Voicemail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoicemail() *Voicemail {
	this := Voicemail{}
	return &this
}

// NewVoicemailWithDefaults instantiates a new Voicemail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoicemailWithDefaults() *Voicemail {
	this := Voicemail{}
	return &this
}

// GetFolders returns the Folders field value if set, zero value otherwise.
func (o *Voicemail) GetFolders() []VoicemailFolder {
	if o == nil || IsNil(o.Folders) {
		var ret []VoicemailFolder
		return ret
	}
	return o.Folders
}

// GetFoldersOk returns a tuple with the Folders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Voicemail) GetFoldersOk() ([]VoicemailFolder, bool) {
	if o == nil || IsNil(o.Folders) {
		return nil, false
	}
	return o.Folders, true
}

// HasFolders returns a boolean if a field has been set.
func (o *Voicemail) HasFolders() bool {
	if o != nil && !IsNil(o.Folders) {
		return true
	}

	return false
}

// SetFolders gets a reference to the given []VoicemailFolder and assigns it to the Folders field.
func (o *Voicemail) SetFolders(v []VoicemailFolder) {
	o.Folders = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Voicemail) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Voicemail) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Voicemail) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Voicemail) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Voicemail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Voicemail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Voicemail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Voicemail) SetName(v string) {
	o.Name = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *Voicemail) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Voicemail) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *Voicemail) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *Voicemail) SetNumber(v string) {
	o.Number = &v
}

func (o Voicemail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Voicemail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Folders) {
		toSerialize["folders"] = o.Folders
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	return toSerialize, nil
}

type NullableVoicemail struct {
	value *Voicemail
	isSet bool
}

func (v NullableVoicemail) Get() *Voicemail {
	return v.value
}

func (v *NullableVoicemail) Set(val *Voicemail) {
	v.value = val
	v.isSet = true
}

func (v NullableVoicemail) IsSet() bool {
	return v.isSet
}

func (v *NullableVoicemail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoicemail(val *Voicemail) *NullableVoicemail {
	return &NullableVoicemail{value: val, isSet: true}
}

func (v NullableVoicemail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoicemail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
