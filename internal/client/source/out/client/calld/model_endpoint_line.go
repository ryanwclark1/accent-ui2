/*
accent-calld

Control your calls from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calld

import (
	"encoding/json"
)

// checks if the EndpointLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointLine{}

// EndpointLine struct for EndpointLine
type EndpointLine struct {
	// The number of ongoing calls on that line
	CurrentCallCount *int32 `json:"current_call_count,omitempty"`
	// The ID of the matching confd line
	Id *int32 `json:"id,omitempty"`
	// The name of that given endpoint in Asterisk
	Name *string `json:"name,omitempty"`
	// Wether or not this trunk is registered.
	Registered *bool `json:"registered,omitempty"`
	// The technology of that endpoint only (SIP, SCCP or custom)
	Technology *string `json:"technology,omitempty"`
}

// NewEndpointLine instantiates a new EndpointLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointLine() *EndpointLine {
	this := EndpointLine{}
	return &this
}

// NewEndpointLineWithDefaults instantiates a new EndpointLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointLineWithDefaults() *EndpointLine {
	this := EndpointLine{}
	return &this
}

// GetCurrentCallCount returns the CurrentCallCount field value if set, zero value otherwise.
func (o *EndpointLine) GetCurrentCallCount() int32 {
	if o == nil || IsNil(o.CurrentCallCount) {
		var ret int32
		return ret
	}
	return *o.CurrentCallCount
}

// GetCurrentCallCountOk returns a tuple with the CurrentCallCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointLine) GetCurrentCallCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentCallCount) {
		return nil, false
	}
	return o.CurrentCallCount, true
}

// HasCurrentCallCount returns a boolean if a field has been set.
func (o *EndpointLine) HasCurrentCallCount() bool {
	if o != nil && !IsNil(o.CurrentCallCount) {
		return true
	}

	return false
}

// SetCurrentCallCount gets a reference to the given int32 and assigns it to the CurrentCallCount field.
func (o *EndpointLine) SetCurrentCallCount(v int32) {
	o.CurrentCallCount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EndpointLine) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointLine) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EndpointLine) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EndpointLine) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EndpointLine) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointLine) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EndpointLine) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EndpointLine) SetName(v string) {
	o.Name = &v
}

// GetRegistered returns the Registered field value if set, zero value otherwise.
func (o *EndpointLine) GetRegistered() bool {
	if o == nil || IsNil(o.Registered) {
		var ret bool
		return ret
	}
	return *o.Registered
}

// GetRegisteredOk returns a tuple with the Registered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointLine) GetRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.Registered) {
		return nil, false
	}
	return o.Registered, true
}

// HasRegistered returns a boolean if a field has been set.
func (o *EndpointLine) HasRegistered() bool {
	if o != nil && !IsNil(o.Registered) {
		return true
	}

	return false
}

// SetRegistered gets a reference to the given bool and assigns it to the Registered field.
func (o *EndpointLine) SetRegistered(v bool) {
	o.Registered = &v
}

// GetTechnology returns the Technology field value if set, zero value otherwise.
func (o *EndpointLine) GetTechnology() string {
	if o == nil || IsNil(o.Technology) {
		var ret string
		return ret
	}
	return *o.Technology
}

// GetTechnologyOk returns a tuple with the Technology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointLine) GetTechnologyOk() (*string, bool) {
	if o == nil || IsNil(o.Technology) {
		return nil, false
	}
	return o.Technology, true
}

// HasTechnology returns a boolean if a field has been set.
func (o *EndpointLine) HasTechnology() bool {
	if o != nil && !IsNil(o.Technology) {
		return true
	}

	return false
}

// SetTechnology gets a reference to the given string and assigns it to the Technology field.
func (o *EndpointLine) SetTechnology(v string) {
	o.Technology = &v
}

func (o EndpointLine) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentCallCount) {
		toSerialize["current_call_count"] = o.CurrentCallCount
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Registered) {
		toSerialize["registered"] = o.Registered
	}
	if !IsNil(o.Technology) {
		toSerialize["technology"] = o.Technology
	}
	return toSerialize, nil
}

type NullableEndpointLine struct {
	value *EndpointLine
	isSet bool
}

func (v NullableEndpointLine) Get() *EndpointLine {
	return v.value
}

func (v *NullableEndpointLine) Set(val *EndpointLine) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointLine) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointLine(val *EndpointLine) *NullableEndpointLine {
	return &NullableEndpointLine{value: val, isSet: true}
}

func (v NullableEndpointLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
