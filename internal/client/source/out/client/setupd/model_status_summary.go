/*
accent-setupd

Initialize Accent Engine from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package setupd

import (
	"encoding/json"
)

// checks if the StatusSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusSummary{}

// StatusSummary struct for StatusSummary
type StatusSummary struct {
	MasterTenant *ComponentWithStatus `json:"master_tenant,omitempty"`
	RestApi      *ComponentWithStatus `json:"rest_api,omitempty"`
}

// NewStatusSummary instantiates a new StatusSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusSummary() *StatusSummary {
	this := StatusSummary{}
	return &this
}

// NewStatusSummaryWithDefaults instantiates a new StatusSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusSummaryWithDefaults() *StatusSummary {
	this := StatusSummary{}
	return &this
}

// GetMasterTenant returns the MasterTenant field value if set, zero value otherwise.
func (o *StatusSummary) GetMasterTenant() ComponentWithStatus {
	if o == nil || IsNil(o.MasterTenant) {
		var ret ComponentWithStatus
		return ret
	}
	return *o.MasterTenant
}

// GetMasterTenantOk returns a tuple with the MasterTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusSummary) GetMasterTenantOk() (*ComponentWithStatus, bool) {
	if o == nil || IsNil(o.MasterTenant) {
		return nil, false
	}
	return o.MasterTenant, true
}

// HasMasterTenant returns a boolean if a field has been set.
func (o *StatusSummary) HasMasterTenant() bool {
	if o != nil && !IsNil(o.MasterTenant) {
		return true
	}

	return false
}

// SetMasterTenant gets a reference to the given ComponentWithStatus and assigns it to the MasterTenant field.
func (o *StatusSummary) SetMasterTenant(v ComponentWithStatus) {
	o.MasterTenant = &v
}

// GetRestApi returns the RestApi field value if set, zero value otherwise.
func (o *StatusSummary) GetRestApi() ComponentWithStatus {
	if o == nil || IsNil(o.RestApi) {
		var ret ComponentWithStatus
		return ret
	}
	return *o.RestApi
}

// GetRestApiOk returns a tuple with the RestApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusSummary) GetRestApiOk() (*ComponentWithStatus, bool) {
	if o == nil || IsNil(o.RestApi) {
		return nil, false
	}
	return o.RestApi, true
}

// HasRestApi returns a boolean if a field has been set.
func (o *StatusSummary) HasRestApi() bool {
	if o != nil && !IsNil(o.RestApi) {
		return true
	}

	return false
}

// SetRestApi gets a reference to the given ComponentWithStatus and assigns it to the RestApi field.
func (o *StatusSummary) SetRestApi(v ComponentWithStatus) {
	o.RestApi = &v
}

func (o StatusSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MasterTenant) {
		toSerialize["master_tenant"] = o.MasterTenant
	}
	if !IsNil(o.RestApi) {
		toSerialize["rest_api"] = o.RestApi
	}
	return toSerialize, nil
}

type NullableStatusSummary struct {
	value *StatusSummary
	isSet bool
}

func (v NullableStatusSummary) Get() *StatusSummary {
	return v.value
}

func (v *NullableStatusSummary) Set(val *StatusSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusSummary(val *StatusSummary) *NullableStatusSummary {
	return &NullableStatusSummary{value: val, isSet: true}
}

func (v NullableStatusSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
