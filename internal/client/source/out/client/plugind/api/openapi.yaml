openapi: 3.0.1
info:
  contact:
    email: help@accentvoice.io
    name: Accent Team
    url: https://accentvoice.io/
  description: Accent's plugin management service
  license:
    name: GPLv3
    url: http://www.gnu.org/licenses/gpl-3.0.html
  title: accent-plugind
  version: "0.2"
  x-logo:
    altText: Accent Logo
    backgroundColor: '#FAFAFA'
    url: https://accentvoice.io/images/logo-black.svg
servers:
- url: http://api.accentvoice.io/0.2
- url: https://api.accentvoice.io/0.2
security:
- accent_auth_token: []
paths:
  /config:
    get:
      description: '**Required ACL:** `plugind.config.read`'
      operationId: getConfig
      responses:
        "200":
          content: {}
          description: The configuration of the service
      summary: Show the current configuration
      tags:
      - config
  /market:
    get:
      description: '**Required ACL:** `plugind.market.read` Allow the administrator
        to get a list of available plugins '
      operationId: getMarket
      parameters:
      - description: Maximum number of items to return in the list
        in: query
        name: limit
        schema:
          type: integer
      - description: Number of items to skip over in the list. Useful for pagination.
        in: query
        name: offset
        schema:
          type: integer
      - description: Name of the field to use for sorting the list of items returned.
        in: query
        name: order
        schema:
          type: string
      - description: Sort list of items in 'asc' (ascending) or 'desc' (descending)
          order
        in: query
        name: direction
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: "Filter list of items, this search is applied to all fields and\
          \ is not strict (eba matches Sébastien)"
        in: query
        name: search
        schema:
          type: string
      - description: Search by namespace
        in: query
        name: namespace
        schema:
          type: string
      - description: Search by name
        in: query
        name: name
        schema:
          type: string
      - description: Filter installed plugins
        in: query
        name: installed
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMarketResult'
          description: The plugin list
      summary: List plugins available on the configured market
      tags:
      - plugin
      - market
  /market/{namespace}/{name}:
    get:
      description: '**Required ACL:** `plugind.market.read` Allow the administrator
        to view a plugins information from the market. --- '
      operationId: getMarketPlugin
      parameters:
      - description: The plugin's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: The plugin's name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketPluginList'
          description: The plugin's information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Plugin not found
      summary: Fetch the information about a plugin from the market
      tags:
      - plugin
      - market
  /plugins:
    get:
      description: '**Required ACL:** `plugind.plugins.read` Allow the administrator
        to get a list of all installed plugins '
      operationId: getPlugins
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPluginsResult'
          description: The plugin list
      summary: List installed plugins
      tags:
      - plugin
    post:
      description: '**Required ACL:** `plugind.plugins.create` Allow the administrator
        to install a plugin on the server. '
      operationId: installPlugin
      parameters:
      - description: With this option the plugin will be reinstalled if it is already
          installed
        in: query
        name: reinstall
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginInstallParameters'
        description: The plugins' installation parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallResponse'
          description: Installation started
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
      summary: Install a plugin
      tags:
      - plugin
      x-codegen-request-body-name: body
  /plugins/{namespace}/{name}:
    delete:
      description: "**Required ACL:** `plugind.plugins.{namespace}.{name}.delete`\
        \ Allow the administrator to uninstall a plugin. --- "
      operationId: uninstallPlugin
      parameters:
      - description: The plugin's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: The plugin's name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Uninstallation started
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Plugin not found
      summary: Uninstall a plugin
      tags:
      - plugin
    get:
      description: "**Required ACL:** `plugind.plugins.{namespace}.{name}.read` Allow\
        \ the administrator to view a plugins metadata file. --- "
      operationId: getPlugin
      parameters:
      - description: The plugin's namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: The plugin's name
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginMetadata'
          description: The plugin's metadata
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Plugin not found
      summary: Fetch the information about a plugin that has been installed
      tags:
      - plugin
  /status:
    get:
      description: '**Required ACL:** `plugind.status.read`'
      operationId: getStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusSummary'
          description: the current status of accent-plugind
      summary: Returns the current status of accent-plugind
      tags:
      - status
components:
  parameters:
    direction:
      description: Sort list of items in 'asc' (ascending) or 'desc' (descending)
        order
      in: query
      name: direction
      schema:
        enum:
        - asc
        - desc
        type: string
    installed_filter:
      description: Filter installed plugins
      in: query
      name: installed
      schema:
        type: boolean
    limit:
      description: Maximum number of items to return in the list
      in: query
      name: limit
      schema:
        type: integer
    name:
      description: The plugin's name
      in: path
      name: name
      required: true
      schema:
        type: string
    name_filter:
      description: Search by name
      in: query
      name: name
      schema:
        type: string
    namespace:
      description: The plugin's namespace
      in: path
      name: namespace
      required: true
      schema:
        type: string
    namespace_filter:
      description: Search by namespace
      in: query
      name: namespace
      schema:
        type: string
    offset:
      description: Number of items to skip over in the list. Useful for pagination.
      in: query
      name: offset
      schema:
        type: integer
    order:
      description: Name of the field to use for sorting the list of items returned.
      in: query
      name: order
      schema:
        type: string
    search:
      description: "Filter list of items, this search is applied to all fields and\
        \ is not strict (eba matches Sébastien)"
      in: query
      name: search
      schema:
        type: string
  responses:
    InvalidRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid request
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Plugin not found
  schemas:
    ComponentWithStatus:
      example:
        status: null
      properties:
        status:
          $ref: '#/components/schemas/StatusValue'
      type: object
    Error:
      description: Error message for the client
      example:
        error_id: error_id
        resource: resource
        details: "{}"
        message: message
        timestamp: 0.8008281904610115
      properties:
        details:
          description: Additional information about the error. The keys are specific
            to each error.
          properties: {}
          type: object
        error_id:
          description: Identifier of the type of error. It is more precise than the
            HTTP status code.
          type: string
        message:
          description: Human readable explanation of the error
          type: string
        resource:
          description: Name of the resource
          type: string
        timestamp:
          description: Time when the error occured
          format: timestamp
          type: number
      title: Error
      type: object
    GetMarketResult:
      example:
        total: 6
        filtered: 0
        items:
        - versions:
          - max_accent_version: max_accent_version
            upgradable: true
            min_accent_version: min_accent_version
            version: version
          - max_accent_version: max_accent_version
            upgradable: true
            min_accent_version: min_accent_version
            version: version
          name: name
          namespace: namespace
        - versions:
          - max_accent_version: max_accent_version
            upgradable: true
            min_accent_version: min_accent_version
            version: version
          - max_accent_version: max_accent_version
            upgradable: true
            min_accent_version: min_accent_version
            version: version
          name: name
          namespace: namespace
      properties:
        filtered:
          description: The number of plugins matching the given search
          type: integer
        items:
          description: A list of plugins
          items:
            $ref: '#/components/schemas/MarketPluginList'
          type: array
        total:
          description: The number of plugins available on the market
          type: integer
      type: object
    GetPluginsResult:
      example:
        total: 0
        items:
        - name: name
          namespace: namespace
          version: version
        - name: name
          namespace: namespace
          version: version
      properties:
        items:
          description: A list of plugins
          items:
            $ref: '#/components/schemas/PluginMetadata'
          type: array
        total:
          description: The number of plugins installed on the system
          type: integer
      type: object
    InstallResponse:
      example:
        uuid: uuid
      properties:
        uuid:
          description: A UUID associated to this plugin installation
          type: string
      type: object
    MarketPluginList:
      example:
        versions:
        - max_accent_version: max_accent_version
          upgradable: true
          min_accent_version: min_accent_version
          version: version
        - max_accent_version: max_accent_version
          upgradable: true
          min_accent_version: min_accent_version
          version: version
        name: name
        namespace: namespace
      properties:
        name:
          description: The name of the plugin
          type: string
        namespace:
          description: The namespace of the plugin
          type: string
        versions:
          description: Version specific information
          items:
            $ref: '#/components/schemas/VersionInfo'
          type: array
      type: object
    PluginInstallParameters:
      example:
        method: git
        options: "{}"
      properties:
        method:
          description: The method used to fetch this plugin
          enum:
          - git
          type: string
        options:
          description: Method dependant installation options
          properties: {}
          type: object
      required:
      - method
      type: object
    PluginMetadata:
      example:
        name: name
        namespace: namespace
        version: version
      properties:
        name:
          description: The name of the plugin
          type: string
        namespace:
          description: The namespace of the plugin
          type: string
        version:
          description: The version of the installed version
          type: string
      type: object
    StatusSummary:
      example:
        master_tenant:
          status: null
        rest_api:
          status: null
      properties:
        master_tenant:
          $ref: '#/components/schemas/ComponentWithStatus'
        rest_api:
          $ref: '#/components/schemas/ComponentWithStatus'
      type: object
    StatusValue:
      enum:
      - fail
      - ok
      type: string
    VersionInfo:
      example:
        max_accent_version: max_accent_version
        upgradable: true
        min_accent_version: min_accent_version
        version: version
      properties:
        max_accent_version:
          description: The maximum Accent version with which this plugin works
          type: string
        min_accent_version:
          description: The minimum Accent version with which this plugin works
          type: string
        upgradable:
          description: An indication wether installing this version would be an upgrade
            on not. Unstalled plugins are marked as upgradable.
          type: boolean
        version:
          description: The plugin version
          type: string
      type: object
  securitySchemes:
    accent_auth_token:
      in: header
      name: X-Auth-Token
      type: apiKey
x-accent-name: plugind
x-accent-port: 9503
x-original-swagger-version: "2.0"
