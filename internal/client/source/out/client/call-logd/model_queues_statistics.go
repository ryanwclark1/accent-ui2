/*
accent-call-logd

Consult call logs from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calllogd

import (
	"encoding/json"
)

// checks if the QueuesStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueuesStatistics{}

// QueuesStatistics struct for QueuesStatistics
type QueuesStatistics struct {
	Items []QueueStatistic `json:"items,omitempty"`
	Total *int32           `json:"total,omitempty"`
}

// NewQueuesStatistics instantiates a new QueuesStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueuesStatistics() *QueuesStatistics {
	this := QueuesStatistics{}
	return &this
}

// NewQueuesStatisticsWithDefaults instantiates a new QueuesStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueuesStatisticsWithDefaults() *QueuesStatistics {
	this := QueuesStatistics{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *QueuesStatistics) GetItems() []QueueStatistic {
	if o == nil || IsNil(o.Items) {
		var ret []QueueStatistic
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueuesStatistics) GetItemsOk() ([]QueueStatistic, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *QueuesStatistics) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []QueueStatistic and assigns it to the Items field.
func (o *QueuesStatistics) SetItems(v []QueueStatistic) {
	o.Items = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *QueuesStatistics) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueuesStatistics) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *QueuesStatistics) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *QueuesStatistics) SetTotal(v int32) {
	o.Total = &v
}

func (o QueuesStatistics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueuesStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableQueuesStatistics struct {
	value *QueuesStatistics
	isSet bool
}

func (v NullableQueuesStatistics) Get() *QueuesStatistics {
	return v.value
}

func (v *NullableQueuesStatistics) Set(val *QueuesStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableQueuesStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableQueuesStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueuesStatistics(val *QueuesStatistics) *NullableQueuesStatistics {
	return &NullableQueuesStatistics{value: val, isSet: true}
}

func (v NullableQueuesStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueuesStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
