/*
accent-call-logd

Consult call logs from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package call-logd

import (
	"encoding/json"
	"time"
)

// checks if the CDR type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CDR{}

// CDR struct for CDR
type CDR struct {
	Answer *time.Time `json:"answer,omitempty"`
	Answered *bool `json:"answered,omitempty"`
	CallDirection *string `json:"call_direction,omitempty"`
	// Contains the `type` of the called destination; which can be either `user`, `conference`, `meeting`, or `unknown` by default. Also contains useful information about the destination (`id` and `name`).
	DestinationDetails map[string]interface{} `json:"destination_details,omitempty"`
	DestinationExtension *string `json:"destination_extension,omitempty"`
	DestinationInternalContext *string `json:"destination_internal_context,omitempty"`
	// the internal extension of the line that answers
	DestinationInternalExtension *string `json:"destination_internal_extension,omitempty"`
	DestinationInternalTenantUuid *string `json:"destination_internal_tenant_uuid,omitempty"`
	DestinationLineId *int32 `json:"destination_line_id,omitempty"`
	DestinationName *string `json:"destination_name,omitempty"`
	DestinationTenantUuid *string `json:"destination_tenant_uuid,omitempty"`
	DestinationUserUuid *string `json:"destination_user_uuid,omitempty"`
	// Duration of the call, in seconds.
	Duration *int32 `json:"duration,omitempty"`
	End *time.Time `json:"end,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Recordings []Recording `json:"recordings,omitempty"`
	RequestedContext *string `json:"requested_context,omitempty"`
	RequestedExtension *string `json:"requested_extension,omitempty"`
	RequestedInternalContext *string `json:"requested_internal_context,omitempty"`
	// the internal extension of the first line to ring
	RequestedInternalExtension *string `json:"requested_internal_extension,omitempty"`
	RequestedInternalTenantUuid *string `json:"requested_internal_tenant_uuid,omitempty"`
	RequestedName *string `json:"requested_name,omitempty"`
	RequestedTenantUuid *string `json:"requested_tenant_uuid,omitempty"`
	SourceExtension *string `json:"source_extension,omitempty"`
	SourceInternalContext *string `json:"source_internal_context,omitempty"`
	// the internal extension of the line that placed the call
	SourceInternalExtension *string `json:"source_internal_extension,omitempty"`
	SourceInternalName *string `json:"source_internal_name,omitempty"`
	SourceInternalTenantUuid *string `json:"source_internal_tenant_uuid,omitempty"`
	SourceLineId *int32 `json:"source_line_id,omitempty"`
	SourceName *string `json:"source_name,omitempty"`
	SourceTenantUuid *string `json:"source_tenant_uuid,omitempty"`
	SourceUserUuid *string `json:"source_user_uuid,omitempty"`
	Start *time.Time `json:"start,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

// NewCDR instantiates a new CDR object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCDR() *CDR {
	this := CDR{}
	return &this
}

// NewCDRWithDefaults instantiates a new CDR object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCDRWithDefaults() *CDR {
	this := CDR{}
	return &this
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *CDR) GetAnswer() time.Time {
	if o == nil || IsNil(o.Answer) {
		var ret time.Time
		return ret
	}
	return *o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetAnswerOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Answer) {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *CDR) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given time.Time and assigns it to the Answer field.
func (o *CDR) SetAnswer(v time.Time) {
	o.Answer = &v
}

// GetAnswered returns the Answered field value if set, zero value otherwise.
func (o *CDR) GetAnswered() bool {
	if o == nil || IsNil(o.Answered) {
		var ret bool
		return ret
	}
	return *o.Answered
}

// GetAnsweredOk returns a tuple with the Answered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetAnsweredOk() (*bool, bool) {
	if o == nil || IsNil(o.Answered) {
		return nil, false
	}
	return o.Answered, true
}

// HasAnswered returns a boolean if a field has been set.
func (o *CDR) HasAnswered() bool {
	if o != nil && !IsNil(o.Answered) {
		return true
	}

	return false
}

// SetAnswered gets a reference to the given bool and assigns it to the Answered field.
func (o *CDR) SetAnswered(v bool) {
	o.Answered = &v
}

// GetCallDirection returns the CallDirection field value if set, zero value otherwise.
func (o *CDR) GetCallDirection() string {
	if o == nil || IsNil(o.CallDirection) {
		var ret string
		return ret
	}
	return *o.CallDirection
}

// GetCallDirectionOk returns a tuple with the CallDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetCallDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.CallDirection) {
		return nil, false
	}
	return o.CallDirection, true
}

// HasCallDirection returns a boolean if a field has been set.
func (o *CDR) HasCallDirection() bool {
	if o != nil && !IsNil(o.CallDirection) {
		return true
	}

	return false
}

// SetCallDirection gets a reference to the given string and assigns it to the CallDirection field.
func (o *CDR) SetCallDirection(v string) {
	o.CallDirection = &v
}

// GetDestinationDetails returns the DestinationDetails field value if set, zero value otherwise.
func (o *CDR) GetDestinationDetails() map[string]interface{} {
	if o == nil || IsNil(o.DestinationDetails) {
		var ret map[string]interface{}
		return ret
	}
	return o.DestinationDetails
}

// GetDestinationDetailsOk returns a tuple with the DestinationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DestinationDetails) {
		return map[string]interface{}{}, false
	}
	return o.DestinationDetails, true
}

// HasDestinationDetails returns a boolean if a field has been set.
func (o *CDR) HasDestinationDetails() bool {
	if o != nil && !IsNil(o.DestinationDetails) {
		return true
	}

	return false
}

// SetDestinationDetails gets a reference to the given map[string]interface{} and assigns it to the DestinationDetails field.
func (o *CDR) SetDestinationDetails(v map[string]interface{}) {
	o.DestinationDetails = v
}

// GetDestinationExtension returns the DestinationExtension field value if set, zero value otherwise.
func (o *CDR) GetDestinationExtension() string {
	if o == nil || IsNil(o.DestinationExtension) {
		var ret string
		return ret
	}
	return *o.DestinationExtension
}

// GetDestinationExtensionOk returns a tuple with the DestinationExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationExtension) {
		return nil, false
	}
	return o.DestinationExtension, true
}

// HasDestinationExtension returns a boolean if a field has been set.
func (o *CDR) HasDestinationExtension() bool {
	if o != nil && !IsNil(o.DestinationExtension) {
		return true
	}

	return false
}

// SetDestinationExtension gets a reference to the given string and assigns it to the DestinationExtension field.
func (o *CDR) SetDestinationExtension(v string) {
	o.DestinationExtension = &v
}

// GetDestinationInternalContext returns the DestinationInternalContext field value if set, zero value otherwise.
func (o *CDR) GetDestinationInternalContext() string {
	if o == nil || IsNil(o.DestinationInternalContext) {
		var ret string
		return ret
	}
	return *o.DestinationInternalContext
}

// GetDestinationInternalContextOk returns a tuple with the DestinationInternalContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationInternalContextOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationInternalContext) {
		return nil, false
	}
	return o.DestinationInternalContext, true
}

// HasDestinationInternalContext returns a boolean if a field has been set.
func (o *CDR) HasDestinationInternalContext() bool {
	if o != nil && !IsNil(o.DestinationInternalContext) {
		return true
	}

	return false
}

// SetDestinationInternalContext gets a reference to the given string and assigns it to the DestinationInternalContext field.
func (o *CDR) SetDestinationInternalContext(v string) {
	o.DestinationInternalContext = &v
}

// GetDestinationInternalExtension returns the DestinationInternalExtension field value if set, zero value otherwise.
func (o *CDR) GetDestinationInternalExtension() string {
	if o == nil || IsNil(o.DestinationInternalExtension) {
		var ret string
		return ret
	}
	return *o.DestinationInternalExtension
}

// GetDestinationInternalExtensionOk returns a tuple with the DestinationInternalExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationInternalExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationInternalExtension) {
		return nil, false
	}
	return o.DestinationInternalExtension, true
}

// HasDestinationInternalExtension returns a boolean if a field has been set.
func (o *CDR) HasDestinationInternalExtension() bool {
	if o != nil && !IsNil(o.DestinationInternalExtension) {
		return true
	}

	return false
}

// SetDestinationInternalExtension gets a reference to the given string and assigns it to the DestinationInternalExtension field.
func (o *CDR) SetDestinationInternalExtension(v string) {
	o.DestinationInternalExtension = &v
}

// GetDestinationInternalTenantUuid returns the DestinationInternalTenantUuid field value if set, zero value otherwise.
func (o *CDR) GetDestinationInternalTenantUuid() string {
	if o == nil || IsNil(o.DestinationInternalTenantUuid) {
		var ret string
		return ret
	}
	return *o.DestinationInternalTenantUuid
}

// GetDestinationInternalTenantUuidOk returns a tuple with the DestinationInternalTenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationInternalTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationInternalTenantUuid) {
		return nil, false
	}
	return o.DestinationInternalTenantUuid, true
}

// HasDestinationInternalTenantUuid returns a boolean if a field has been set.
func (o *CDR) HasDestinationInternalTenantUuid() bool {
	if o != nil && !IsNil(o.DestinationInternalTenantUuid) {
		return true
	}

	return false
}

// SetDestinationInternalTenantUuid gets a reference to the given string and assigns it to the DestinationInternalTenantUuid field.
func (o *CDR) SetDestinationInternalTenantUuid(v string) {
	o.DestinationInternalTenantUuid = &v
}

// GetDestinationLineId returns the DestinationLineId field value if set, zero value otherwise.
func (o *CDR) GetDestinationLineId() int32 {
	if o == nil || IsNil(o.DestinationLineId) {
		var ret int32
		return ret
	}
	return *o.DestinationLineId
}

// GetDestinationLineIdOk returns a tuple with the DestinationLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DestinationLineId) {
		return nil, false
	}
	return o.DestinationLineId, true
}

// HasDestinationLineId returns a boolean if a field has been set.
func (o *CDR) HasDestinationLineId() bool {
	if o != nil && !IsNil(o.DestinationLineId) {
		return true
	}

	return false
}

// SetDestinationLineId gets a reference to the given int32 and assigns it to the DestinationLineId field.
func (o *CDR) SetDestinationLineId(v int32) {
	o.DestinationLineId = &v
}

// GetDestinationName returns the DestinationName field value if set, zero value otherwise.
func (o *CDR) GetDestinationName() string {
	if o == nil || IsNil(o.DestinationName) {
		var ret string
		return ret
	}
	return *o.DestinationName
}

// GetDestinationNameOk returns a tuple with the DestinationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationNameOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationName) {
		return nil, false
	}
	return o.DestinationName, true
}

// HasDestinationName returns a boolean if a field has been set.
func (o *CDR) HasDestinationName() bool {
	if o != nil && !IsNil(o.DestinationName) {
		return true
	}

	return false
}

// SetDestinationName gets a reference to the given string and assigns it to the DestinationName field.
func (o *CDR) SetDestinationName(v string) {
	o.DestinationName = &v
}

// GetDestinationTenantUuid returns the DestinationTenantUuid field value if set, zero value otherwise.
func (o *CDR) GetDestinationTenantUuid() string {
	if o == nil || IsNil(o.DestinationTenantUuid) {
		var ret string
		return ret
	}
	return *o.DestinationTenantUuid
}

// GetDestinationTenantUuidOk returns a tuple with the DestinationTenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationTenantUuid) {
		return nil, false
	}
	return o.DestinationTenantUuid, true
}

// HasDestinationTenantUuid returns a boolean if a field has been set.
func (o *CDR) HasDestinationTenantUuid() bool {
	if o != nil && !IsNil(o.DestinationTenantUuid) {
		return true
	}

	return false
}

// SetDestinationTenantUuid gets a reference to the given string and assigns it to the DestinationTenantUuid field.
func (o *CDR) SetDestinationTenantUuid(v string) {
	o.DestinationTenantUuid = &v
}

// GetDestinationUserUuid returns the DestinationUserUuid field value if set, zero value otherwise.
func (o *CDR) GetDestinationUserUuid() string {
	if o == nil || IsNil(o.DestinationUserUuid) {
		var ret string
		return ret
	}
	return *o.DestinationUserUuid
}

// GetDestinationUserUuidOk returns a tuple with the DestinationUserUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDestinationUserUuidOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationUserUuid) {
		return nil, false
	}
	return o.DestinationUserUuid, true
}

// HasDestinationUserUuid returns a boolean if a field has been set.
func (o *CDR) HasDestinationUserUuid() bool {
	if o != nil && !IsNil(o.DestinationUserUuid) {
		return true
	}

	return false
}

// SetDestinationUserUuid gets a reference to the given string and assigns it to the DestinationUserUuid field.
func (o *CDR) SetDestinationUserUuid(v string) {
	o.DestinationUserUuid = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *CDR) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *CDR) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *CDR) SetDuration(v int32) {
	o.Duration = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *CDR) GetEnd() time.Time {
	if o == nil || IsNil(o.End) {
		var ret time.Time
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *CDR) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given time.Time and assigns it to the End field.
func (o *CDR) SetEnd(v time.Time) {
	o.End = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CDR) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CDR) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CDR) SetId(v int32) {
	o.Id = &v
}

// GetRecordings returns the Recordings field value if set, zero value otherwise.
func (o *CDR) GetRecordings() []Recording {
	if o == nil || IsNil(o.Recordings) {
		var ret []Recording
		return ret
	}
	return o.Recordings
}

// GetRecordingsOk returns a tuple with the Recordings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRecordingsOk() ([]Recording, bool) {
	if o == nil || IsNil(o.Recordings) {
		return nil, false
	}
	return o.Recordings, true
}

// HasRecordings returns a boolean if a field has been set.
func (o *CDR) HasRecordings() bool {
	if o != nil && !IsNil(o.Recordings) {
		return true
	}

	return false
}

// SetRecordings gets a reference to the given []Recording and assigns it to the Recordings field.
func (o *CDR) SetRecordings(v []Recording) {
	o.Recordings = v
}

// GetRequestedContext returns the RequestedContext field value if set, zero value otherwise.
func (o *CDR) GetRequestedContext() string {
	if o == nil || IsNil(o.RequestedContext) {
		var ret string
		return ret
	}
	return *o.RequestedContext
}

// GetRequestedContextOk returns a tuple with the RequestedContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRequestedContextOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedContext) {
		return nil, false
	}
	return o.RequestedContext, true
}

// HasRequestedContext returns a boolean if a field has been set.
func (o *CDR) HasRequestedContext() bool {
	if o != nil && !IsNil(o.RequestedContext) {
		return true
	}

	return false
}

// SetRequestedContext gets a reference to the given string and assigns it to the RequestedContext field.
func (o *CDR) SetRequestedContext(v string) {
	o.RequestedContext = &v
}

// GetRequestedExtension returns the RequestedExtension field value if set, zero value otherwise.
func (o *CDR) GetRequestedExtension() string {
	if o == nil || IsNil(o.RequestedExtension) {
		var ret string
		return ret
	}
	return *o.RequestedExtension
}

// GetRequestedExtensionOk returns a tuple with the RequestedExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRequestedExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedExtension) {
		return nil, false
	}
	return o.RequestedExtension, true
}

// HasRequestedExtension returns a boolean if a field has been set.
func (o *CDR) HasRequestedExtension() bool {
	if o != nil && !IsNil(o.RequestedExtension) {
		return true
	}

	return false
}

// SetRequestedExtension gets a reference to the given string and assigns it to the RequestedExtension field.
func (o *CDR) SetRequestedExtension(v string) {
	o.RequestedExtension = &v
}

// GetRequestedInternalContext returns the RequestedInternalContext field value if set, zero value otherwise.
func (o *CDR) GetRequestedInternalContext() string {
	if o == nil || IsNil(o.RequestedInternalContext) {
		var ret string
		return ret
	}
	return *o.RequestedInternalContext
}

// GetRequestedInternalContextOk returns a tuple with the RequestedInternalContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRequestedInternalContextOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedInternalContext) {
		return nil, false
	}
	return o.RequestedInternalContext, true
}

// HasRequestedInternalContext returns a boolean if a field has been set.
func (o *CDR) HasRequestedInternalContext() bool {
	if o != nil && !IsNil(o.RequestedInternalContext) {
		return true
	}

	return false
}

// SetRequestedInternalContext gets a reference to the given string and assigns it to the RequestedInternalContext field.
func (o *CDR) SetRequestedInternalContext(v string) {
	o.RequestedInternalContext = &v
}

// GetRequestedInternalExtension returns the RequestedInternalExtension field value if set, zero value otherwise.
func (o *CDR) GetRequestedInternalExtension() string {
	if o == nil || IsNil(o.RequestedInternalExtension) {
		var ret string
		return ret
	}
	return *o.RequestedInternalExtension
}

// GetRequestedInternalExtensionOk returns a tuple with the RequestedInternalExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRequestedInternalExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedInternalExtension) {
		return nil, false
	}
	return o.RequestedInternalExtension, true
}

// HasRequestedInternalExtension returns a boolean if a field has been set.
func (o *CDR) HasRequestedInternalExtension() bool {
	if o != nil && !IsNil(o.RequestedInternalExtension) {
		return true
	}

	return false
}

// SetRequestedInternalExtension gets a reference to the given string and assigns it to the RequestedInternalExtension field.
func (o *CDR) SetRequestedInternalExtension(v string) {
	o.RequestedInternalExtension = &v
}

// GetRequestedInternalTenantUuid returns the RequestedInternalTenantUuid field value if set, zero value otherwise.
func (o *CDR) GetRequestedInternalTenantUuid() string {
	if o == nil || IsNil(o.RequestedInternalTenantUuid) {
		var ret string
		return ret
	}
	return *o.RequestedInternalTenantUuid
}

// GetRequestedInternalTenantUuidOk returns a tuple with the RequestedInternalTenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRequestedInternalTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedInternalTenantUuid) {
		return nil, false
	}
	return o.RequestedInternalTenantUuid, true
}

// HasRequestedInternalTenantUuid returns a boolean if a field has been set.
func (o *CDR) HasRequestedInternalTenantUuid() bool {
	if o != nil && !IsNil(o.RequestedInternalTenantUuid) {
		return true
	}

	return false
}

// SetRequestedInternalTenantUuid gets a reference to the given string and assigns it to the RequestedInternalTenantUuid field.
func (o *CDR) SetRequestedInternalTenantUuid(v string) {
	o.RequestedInternalTenantUuid = &v
}

// GetRequestedName returns the RequestedName field value if set, zero value otherwise.
func (o *CDR) GetRequestedName() string {
	if o == nil || IsNil(o.RequestedName) {
		var ret string
		return ret
	}
	return *o.RequestedName
}

// GetRequestedNameOk returns a tuple with the RequestedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRequestedNameOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedName) {
		return nil, false
	}
	return o.RequestedName, true
}

// HasRequestedName returns a boolean if a field has been set.
func (o *CDR) HasRequestedName() bool {
	if o != nil && !IsNil(o.RequestedName) {
		return true
	}

	return false
}

// SetRequestedName gets a reference to the given string and assigns it to the RequestedName field.
func (o *CDR) SetRequestedName(v string) {
	o.RequestedName = &v
}

// GetRequestedTenantUuid returns the RequestedTenantUuid field value if set, zero value otherwise.
func (o *CDR) GetRequestedTenantUuid() string {
	if o == nil || IsNil(o.RequestedTenantUuid) {
		var ret string
		return ret
	}
	return *o.RequestedTenantUuid
}

// GetRequestedTenantUuidOk returns a tuple with the RequestedTenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetRequestedTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedTenantUuid) {
		return nil, false
	}
	return o.RequestedTenantUuid, true
}

// HasRequestedTenantUuid returns a boolean if a field has been set.
func (o *CDR) HasRequestedTenantUuid() bool {
	if o != nil && !IsNil(o.RequestedTenantUuid) {
		return true
	}

	return false
}

// SetRequestedTenantUuid gets a reference to the given string and assigns it to the RequestedTenantUuid field.
func (o *CDR) SetRequestedTenantUuid(v string) {
	o.RequestedTenantUuid = &v
}

// GetSourceExtension returns the SourceExtension field value if set, zero value otherwise.
func (o *CDR) GetSourceExtension() string {
	if o == nil || IsNil(o.SourceExtension) {
		var ret string
		return ret
	}
	return *o.SourceExtension
}

// GetSourceExtensionOk returns a tuple with the SourceExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.SourceExtension) {
		return nil, false
	}
	return o.SourceExtension, true
}

// HasSourceExtension returns a boolean if a field has been set.
func (o *CDR) HasSourceExtension() bool {
	if o != nil && !IsNil(o.SourceExtension) {
		return true
	}

	return false
}

// SetSourceExtension gets a reference to the given string and assigns it to the SourceExtension field.
func (o *CDR) SetSourceExtension(v string) {
	o.SourceExtension = &v
}

// GetSourceInternalContext returns the SourceInternalContext field value if set, zero value otherwise.
func (o *CDR) GetSourceInternalContext() string {
	if o == nil || IsNil(o.SourceInternalContext) {
		var ret string
		return ret
	}
	return *o.SourceInternalContext
}

// GetSourceInternalContextOk returns a tuple with the SourceInternalContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceInternalContextOk() (*string, bool) {
	if o == nil || IsNil(o.SourceInternalContext) {
		return nil, false
	}
	return o.SourceInternalContext, true
}

// HasSourceInternalContext returns a boolean if a field has been set.
func (o *CDR) HasSourceInternalContext() bool {
	if o != nil && !IsNil(o.SourceInternalContext) {
		return true
	}

	return false
}

// SetSourceInternalContext gets a reference to the given string and assigns it to the SourceInternalContext field.
func (o *CDR) SetSourceInternalContext(v string) {
	o.SourceInternalContext = &v
}

// GetSourceInternalExtension returns the SourceInternalExtension field value if set, zero value otherwise.
func (o *CDR) GetSourceInternalExtension() string {
	if o == nil || IsNil(o.SourceInternalExtension) {
		var ret string
		return ret
	}
	return *o.SourceInternalExtension
}

// GetSourceInternalExtensionOk returns a tuple with the SourceInternalExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceInternalExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.SourceInternalExtension) {
		return nil, false
	}
	return o.SourceInternalExtension, true
}

// HasSourceInternalExtension returns a boolean if a field has been set.
func (o *CDR) HasSourceInternalExtension() bool {
	if o != nil && !IsNil(o.SourceInternalExtension) {
		return true
	}

	return false
}

// SetSourceInternalExtension gets a reference to the given string and assigns it to the SourceInternalExtension field.
func (o *CDR) SetSourceInternalExtension(v string) {
	o.SourceInternalExtension = &v
}

// GetSourceInternalName returns the SourceInternalName field value if set, zero value otherwise.
func (o *CDR) GetSourceInternalName() string {
	if o == nil || IsNil(o.SourceInternalName) {
		var ret string
		return ret
	}
	return *o.SourceInternalName
}

// GetSourceInternalNameOk returns a tuple with the SourceInternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceInternalNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceInternalName) {
		return nil, false
	}
	return o.SourceInternalName, true
}

// HasSourceInternalName returns a boolean if a field has been set.
func (o *CDR) HasSourceInternalName() bool {
	if o != nil && !IsNil(o.SourceInternalName) {
		return true
	}

	return false
}

// SetSourceInternalName gets a reference to the given string and assigns it to the SourceInternalName field.
func (o *CDR) SetSourceInternalName(v string) {
	o.SourceInternalName = &v
}

// GetSourceInternalTenantUuid returns the SourceInternalTenantUuid field value if set, zero value otherwise.
func (o *CDR) GetSourceInternalTenantUuid() string {
	if o == nil || IsNil(o.SourceInternalTenantUuid) {
		var ret string
		return ret
	}
	return *o.SourceInternalTenantUuid
}

// GetSourceInternalTenantUuidOk returns a tuple with the SourceInternalTenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceInternalTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SourceInternalTenantUuid) {
		return nil, false
	}
	return o.SourceInternalTenantUuid, true
}

// HasSourceInternalTenantUuid returns a boolean if a field has been set.
func (o *CDR) HasSourceInternalTenantUuid() bool {
	if o != nil && !IsNil(o.SourceInternalTenantUuid) {
		return true
	}

	return false
}

// SetSourceInternalTenantUuid gets a reference to the given string and assigns it to the SourceInternalTenantUuid field.
func (o *CDR) SetSourceInternalTenantUuid(v string) {
	o.SourceInternalTenantUuid = &v
}

// GetSourceLineId returns the SourceLineId field value if set, zero value otherwise.
func (o *CDR) GetSourceLineId() int32 {
	if o == nil || IsNil(o.SourceLineId) {
		var ret int32
		return ret
	}
	return *o.SourceLineId
}

// GetSourceLineIdOk returns a tuple with the SourceLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SourceLineId) {
		return nil, false
	}
	return o.SourceLineId, true
}

// HasSourceLineId returns a boolean if a field has been set.
func (o *CDR) HasSourceLineId() bool {
	if o != nil && !IsNil(o.SourceLineId) {
		return true
	}

	return false
}

// SetSourceLineId gets a reference to the given int32 and assigns it to the SourceLineId field.
func (o *CDR) SetSourceLineId(v int32) {
	o.SourceLineId = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *CDR) GetSourceName() string {
	if o == nil || IsNil(o.SourceName) {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceName) {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *CDR) HasSourceName() bool {
	if o != nil && !IsNil(o.SourceName) {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *CDR) SetSourceName(v string) {
	o.SourceName = &v
}

// GetSourceTenantUuid returns the SourceTenantUuid field value if set, zero value otherwise.
func (o *CDR) GetSourceTenantUuid() string {
	if o == nil || IsNil(o.SourceTenantUuid) {
		var ret string
		return ret
	}
	return *o.SourceTenantUuid
}

// GetSourceTenantUuidOk returns a tuple with the SourceTenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SourceTenantUuid) {
		return nil, false
	}
	return o.SourceTenantUuid, true
}

// HasSourceTenantUuid returns a boolean if a field has been set.
func (o *CDR) HasSourceTenantUuid() bool {
	if o != nil && !IsNil(o.SourceTenantUuid) {
		return true
	}

	return false
}

// SetSourceTenantUuid gets a reference to the given string and assigns it to the SourceTenantUuid field.
func (o *CDR) SetSourceTenantUuid(v string) {
	o.SourceTenantUuid = &v
}

// GetSourceUserUuid returns the SourceUserUuid field value if set, zero value otherwise.
func (o *CDR) GetSourceUserUuid() string {
	if o == nil || IsNil(o.SourceUserUuid) {
		var ret string
		return ret
	}
	return *o.SourceUserUuid
}

// GetSourceUserUuidOk returns a tuple with the SourceUserUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetSourceUserUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUserUuid) {
		return nil, false
	}
	return o.SourceUserUuid, true
}

// HasSourceUserUuid returns a boolean if a field has been set.
func (o *CDR) HasSourceUserUuid() bool {
	if o != nil && !IsNil(o.SourceUserUuid) {
		return true
	}

	return false
}

// SetSourceUserUuid gets a reference to the given string and assigns it to the SourceUserUuid field.
func (o *CDR) SetSourceUserUuid(v string) {
	o.SourceUserUuid = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *CDR) GetStart() time.Time {
	if o == nil || IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *CDR) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *CDR) SetStart(v time.Time) {
	o.Start = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CDR) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CDR) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CDR) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CDR) SetTags(v []string) {
	o.Tags = v
}

func (o CDR) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CDR) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Answer) {
		toSerialize["answer"] = o.Answer
	}
	if !IsNil(o.Answered) {
		toSerialize["answered"] = o.Answered
	}
	if !IsNil(o.CallDirection) {
		toSerialize["call_direction"] = o.CallDirection
	}
	if !IsNil(o.DestinationDetails) {
		toSerialize["destination_details"] = o.DestinationDetails
	}
	if !IsNil(o.DestinationExtension) {
		toSerialize["destination_extension"] = o.DestinationExtension
	}
	if !IsNil(o.DestinationInternalContext) {
		toSerialize["destination_internal_context"] = o.DestinationInternalContext
	}
	if !IsNil(o.DestinationInternalExtension) {
		toSerialize["destination_internal_extension"] = o.DestinationInternalExtension
	}
	if !IsNil(o.DestinationInternalTenantUuid) {
		toSerialize["destination_internal_tenant_uuid"] = o.DestinationInternalTenantUuid
	}
	if !IsNil(o.DestinationLineId) {
		toSerialize["destination_line_id"] = o.DestinationLineId
	}
	if !IsNil(o.DestinationName) {
		toSerialize["destination_name"] = o.DestinationName
	}
	if !IsNil(o.DestinationTenantUuid) {
		toSerialize["destination_tenant_uuid"] = o.DestinationTenantUuid
	}
	if !IsNil(o.DestinationUserUuid) {
		toSerialize["destination_user_uuid"] = o.DestinationUserUuid
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Recordings) {
		toSerialize["recordings"] = o.Recordings
	}
	if !IsNil(o.RequestedContext) {
		toSerialize["requested_context"] = o.RequestedContext
	}
	if !IsNil(o.RequestedExtension) {
		toSerialize["requested_extension"] = o.RequestedExtension
	}
	if !IsNil(o.RequestedInternalContext) {
		toSerialize["requested_internal_context"] = o.RequestedInternalContext
	}
	if !IsNil(o.RequestedInternalExtension) {
		toSerialize["requested_internal_extension"] = o.RequestedInternalExtension
	}
	if !IsNil(o.RequestedInternalTenantUuid) {
		toSerialize["requested_internal_tenant_uuid"] = o.RequestedInternalTenantUuid
	}
	if !IsNil(o.RequestedName) {
		toSerialize["requested_name"] = o.RequestedName
	}
	if !IsNil(o.RequestedTenantUuid) {
		toSerialize["requested_tenant_uuid"] = o.RequestedTenantUuid
	}
	if !IsNil(o.SourceExtension) {
		toSerialize["source_extension"] = o.SourceExtension
	}
	if !IsNil(o.SourceInternalContext) {
		toSerialize["source_internal_context"] = o.SourceInternalContext
	}
	if !IsNil(o.SourceInternalExtension) {
		toSerialize["source_internal_extension"] = o.SourceInternalExtension
	}
	if !IsNil(o.SourceInternalName) {
		toSerialize["source_internal_name"] = o.SourceInternalName
	}
	if !IsNil(o.SourceInternalTenantUuid) {
		toSerialize["source_internal_tenant_uuid"] = o.SourceInternalTenantUuid
	}
	if !IsNil(o.SourceLineId) {
		toSerialize["source_line_id"] = o.SourceLineId
	}
	if !IsNil(o.SourceName) {
		toSerialize["source_name"] = o.SourceName
	}
	if !IsNil(o.SourceTenantUuid) {
		toSerialize["source_tenant_uuid"] = o.SourceTenantUuid
	}
	if !IsNil(o.SourceUserUuid) {
		toSerialize["source_user_uuid"] = o.SourceUserUuid
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableCDR struct {
	value *CDR
	isSet bool
}

func (v NullableCDR) Get() *CDR {
	return v.value
}

func (v *NullableCDR) Set(val *CDR) {
	v.value = val
	v.isSet = true
}

func (v NullableCDR) IsSet() bool {
	return v.isSet
}

func (v *NullableCDR) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCDR(val *CDR) *NullableCDR {
	return &NullableCDR{value: val, isSet: true}
}

func (v NullableCDR) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCDR) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


