/*
accent-call-logd

Consult call logs from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package call-logd

import (
	"encoding/json"
)

// checks if the Retention type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Retention{}

// Retention struct for Retention
type Retention struct {
	CdrDays *int32 `json:"cdr_days,omitempty"`
	DefaultCdrDays *int32 `json:"default_cdr_days,omitempty"`
	DefaultExportDays *int32 `json:"default_export_days,omitempty"`
	DefaultRecordingDays *int32 `json:"default_recording_days,omitempty"`
	ExportDays *int32 `json:"export_days,omitempty"`
	RecordingDays *int32 `json:"recording_days,omitempty"`
}

// NewRetention instantiates a new Retention object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetention() *Retention {
	this := Retention{}
	return &this
}

// NewRetentionWithDefaults instantiates a new Retention object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetentionWithDefaults() *Retention {
	this := Retention{}
	return &this
}

// GetCdrDays returns the CdrDays field value if set, zero value otherwise.
func (o *Retention) GetCdrDays() int32 {
	if o == nil || IsNil(o.CdrDays) {
		var ret int32
		return ret
	}
	return *o.CdrDays
}

// GetCdrDaysOk returns a tuple with the CdrDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Retention) GetCdrDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.CdrDays) {
		return nil, false
	}
	return o.CdrDays, true
}

// HasCdrDays returns a boolean if a field has been set.
func (o *Retention) HasCdrDays() bool {
	if o != nil && !IsNil(o.CdrDays) {
		return true
	}

	return false
}

// SetCdrDays gets a reference to the given int32 and assigns it to the CdrDays field.
func (o *Retention) SetCdrDays(v int32) {
	o.CdrDays = &v
}

// GetDefaultCdrDays returns the DefaultCdrDays field value if set, zero value otherwise.
func (o *Retention) GetDefaultCdrDays() int32 {
	if o == nil || IsNil(o.DefaultCdrDays) {
		var ret int32
		return ret
	}
	return *o.DefaultCdrDays
}

// GetDefaultCdrDaysOk returns a tuple with the DefaultCdrDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Retention) GetDefaultCdrDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultCdrDays) {
		return nil, false
	}
	return o.DefaultCdrDays, true
}

// HasDefaultCdrDays returns a boolean if a field has been set.
func (o *Retention) HasDefaultCdrDays() bool {
	if o != nil && !IsNil(o.DefaultCdrDays) {
		return true
	}

	return false
}

// SetDefaultCdrDays gets a reference to the given int32 and assigns it to the DefaultCdrDays field.
func (o *Retention) SetDefaultCdrDays(v int32) {
	o.DefaultCdrDays = &v
}

// GetDefaultExportDays returns the DefaultExportDays field value if set, zero value otherwise.
func (o *Retention) GetDefaultExportDays() int32 {
	if o == nil || IsNil(o.DefaultExportDays) {
		var ret int32
		return ret
	}
	return *o.DefaultExportDays
}

// GetDefaultExportDaysOk returns a tuple with the DefaultExportDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Retention) GetDefaultExportDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultExportDays) {
		return nil, false
	}
	return o.DefaultExportDays, true
}

// HasDefaultExportDays returns a boolean if a field has been set.
func (o *Retention) HasDefaultExportDays() bool {
	if o != nil && !IsNil(o.DefaultExportDays) {
		return true
	}

	return false
}

// SetDefaultExportDays gets a reference to the given int32 and assigns it to the DefaultExportDays field.
func (o *Retention) SetDefaultExportDays(v int32) {
	o.DefaultExportDays = &v
}

// GetDefaultRecordingDays returns the DefaultRecordingDays field value if set, zero value otherwise.
func (o *Retention) GetDefaultRecordingDays() int32 {
	if o == nil || IsNil(o.DefaultRecordingDays) {
		var ret int32
		return ret
	}
	return *o.DefaultRecordingDays
}

// GetDefaultRecordingDaysOk returns a tuple with the DefaultRecordingDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Retention) GetDefaultRecordingDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultRecordingDays) {
		return nil, false
	}
	return o.DefaultRecordingDays, true
}

// HasDefaultRecordingDays returns a boolean if a field has been set.
func (o *Retention) HasDefaultRecordingDays() bool {
	if o != nil && !IsNil(o.DefaultRecordingDays) {
		return true
	}

	return false
}

// SetDefaultRecordingDays gets a reference to the given int32 and assigns it to the DefaultRecordingDays field.
func (o *Retention) SetDefaultRecordingDays(v int32) {
	o.DefaultRecordingDays = &v
}

// GetExportDays returns the ExportDays field value if set, zero value otherwise.
func (o *Retention) GetExportDays() int32 {
	if o == nil || IsNil(o.ExportDays) {
		var ret int32
		return ret
	}
	return *o.ExportDays
}

// GetExportDaysOk returns a tuple with the ExportDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Retention) GetExportDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.ExportDays) {
		return nil, false
	}
	return o.ExportDays, true
}

// HasExportDays returns a boolean if a field has been set.
func (o *Retention) HasExportDays() bool {
	if o != nil && !IsNil(o.ExportDays) {
		return true
	}

	return false
}

// SetExportDays gets a reference to the given int32 and assigns it to the ExportDays field.
func (o *Retention) SetExportDays(v int32) {
	o.ExportDays = &v
}

// GetRecordingDays returns the RecordingDays field value if set, zero value otherwise.
func (o *Retention) GetRecordingDays() int32 {
	if o == nil || IsNil(o.RecordingDays) {
		var ret int32
		return ret
	}
	return *o.RecordingDays
}

// GetRecordingDaysOk returns a tuple with the RecordingDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Retention) GetRecordingDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RecordingDays) {
		return nil, false
	}
	return o.RecordingDays, true
}

// HasRecordingDays returns a boolean if a field has been set.
func (o *Retention) HasRecordingDays() bool {
	if o != nil && !IsNil(o.RecordingDays) {
		return true
	}

	return false
}

// SetRecordingDays gets a reference to the given int32 and assigns it to the RecordingDays field.
func (o *Retention) SetRecordingDays(v int32) {
	o.RecordingDays = &v
}

func (o Retention) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Retention) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CdrDays) {
		toSerialize["cdr_days"] = o.CdrDays
	}
	if !IsNil(o.DefaultCdrDays) {
		toSerialize["default_cdr_days"] = o.DefaultCdrDays
	}
	if !IsNil(o.DefaultExportDays) {
		toSerialize["default_export_days"] = o.DefaultExportDays
	}
	if !IsNil(o.DefaultRecordingDays) {
		toSerialize["default_recording_days"] = o.DefaultRecordingDays
	}
	if !IsNil(o.ExportDays) {
		toSerialize["export_days"] = o.ExportDays
	}
	if !IsNil(o.RecordingDays) {
		toSerialize["recording_days"] = o.RecordingDays
	}
	return toSerialize, nil
}

type NullableRetention struct {
	value *Retention
	isSet bool
}

func (v NullableRetention) Get() *Retention {
	return v.value
}

func (v *NullableRetention) Set(val *Retention) {
	v.value = val
	v.isSet = true
}

func (v NullableRetention) IsSet() bool {
	return v.isSet
}

func (v *NullableRetention) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetention(val *Retention) *NullableRetention {
	return &NullableRetention{value: val, isSet: true}
}

func (v NullableRetention) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetention) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


