/*
accent-call-logd

Consult call logs from a REST API

API version: 1.0.0
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package call-logd

import (
	"encoding/json"
)

// checks if the CreateCDRRecordingsMediaExport202Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCDRRecordingsMediaExport202Response{}

// CreateCDRRecordingsMediaExport202Response struct for CreateCDRRecordingsMediaExport202Response
type CreateCDRRecordingsMediaExport202Response struct {
	ExportUuid *string `json:"export_uuid,omitempty"`
}

// NewCreateCDRRecordingsMediaExport202Response instantiates a new CreateCDRRecordingsMediaExport202Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCDRRecordingsMediaExport202Response() *CreateCDRRecordingsMediaExport202Response {
	this := CreateCDRRecordingsMediaExport202Response{}
	return &this
}

// NewCreateCDRRecordingsMediaExport202ResponseWithDefaults instantiates a new CreateCDRRecordingsMediaExport202Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCDRRecordingsMediaExport202ResponseWithDefaults() *CreateCDRRecordingsMediaExport202Response {
	this := CreateCDRRecordingsMediaExport202Response{}
	return &this
}

// GetExportUuid returns the ExportUuid field value if set, zero value otherwise.
func (o *CreateCDRRecordingsMediaExport202Response) GetExportUuid() string {
	if o == nil || IsNil(o.ExportUuid) {
		var ret string
		return ret
	}
	return *o.ExportUuid
}

// GetExportUuidOk returns a tuple with the ExportUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCDRRecordingsMediaExport202Response) GetExportUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ExportUuid) {
		return nil, false
	}
	return o.ExportUuid, true
}

// HasExportUuid returns a boolean if a field has been set.
func (o *CreateCDRRecordingsMediaExport202Response) HasExportUuid() bool {
	if o != nil && !IsNil(o.ExportUuid) {
		return true
	}

	return false
}

// SetExportUuid gets a reference to the given string and assigns it to the ExportUuid field.
func (o *CreateCDRRecordingsMediaExport202Response) SetExportUuid(v string) {
	o.ExportUuid = &v
}

func (o CreateCDRRecordingsMediaExport202Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCDRRecordingsMediaExport202Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExportUuid) {
		toSerialize["export_uuid"] = o.ExportUuid
	}
	return toSerialize, nil
}

type NullableCreateCDRRecordingsMediaExport202Response struct {
	value *CreateCDRRecordingsMediaExport202Response
	isSet bool
}

func (v NullableCreateCDRRecordingsMediaExport202Response) Get() *CreateCDRRecordingsMediaExport202Response {
	return v.value
}

func (v *NullableCreateCDRRecordingsMediaExport202Response) Set(val *CreateCDRRecordingsMediaExport202Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCDRRecordingsMediaExport202Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCDRRecordingsMediaExport202Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCDRRecordingsMediaExport202Response(val *CreateCDRRecordingsMediaExport202Response) *NullableCreateCDRRecordingsMediaExport202Response {
	return &NullableCreateCDRRecordingsMediaExport202Response{value: val, isSet: true}
}

func (v NullableCreateCDRRecordingsMediaExport202Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCDRRecordingsMediaExport202Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


