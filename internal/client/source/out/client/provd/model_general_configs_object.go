/*
accent-provd

Provisioning application REST API

API version: 0.2
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package provd

import (
	"encoding/json"
)

// checks if the GeneralConfigsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneralConfigsObject{}

// GeneralConfigsObject struct for GeneralConfigsObject
type GeneralConfigsObject struct {
	Params []GeneralConfigObject `json:"params,omitempty"`
}

// NewGeneralConfigsObject instantiates a new GeneralConfigsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneralConfigsObject() *GeneralConfigsObject {
	this := GeneralConfigsObject{}
	return &this
}

// NewGeneralConfigsObjectWithDefaults instantiates a new GeneralConfigsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneralConfigsObjectWithDefaults() *GeneralConfigsObject {
	this := GeneralConfigsObject{}
	return &this
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *GeneralConfigsObject) GetParams() []GeneralConfigObject {
	if o == nil || IsNil(o.Params) {
		var ret []GeneralConfigObject
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralConfigsObject) GetParamsOk() ([]GeneralConfigObject, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *GeneralConfigsObject) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given []GeneralConfigObject and assigns it to the Params field.
func (o *GeneralConfigsObject) SetParams(v []GeneralConfigObject) {
	o.Params = v
}

func (o GeneralConfigsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneralConfigsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	return toSerialize, nil
}

type NullableGeneralConfigsObject struct {
	value *GeneralConfigsObject
	isSet bool
}

func (v NullableGeneralConfigsObject) Get() *GeneralConfigsObject {
	return v.value
}

func (v *NullableGeneralConfigsObject) Set(val *GeneralConfigsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneralConfigsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneralConfigsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneralConfigsObject(val *GeneralConfigsObject) *NullableGeneralConfigsObject {
	return &NullableGeneralConfigsObject{value: val, isSet: true}
}

func (v NullableGeneralConfigsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneralConfigsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
