/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"encoding/json"
)

// checks if the Tenant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Tenant{}

// Tenant struct for Tenant
type Tenant struct {
	GlobalSipTemplateUuid            *string `json:"global_sip_template_uuid,omitempty"`
	RegistrationTrunkSipTemplateUuid *string `json:"registration_trunk_sip_template_uuid,omitempty"`
	// Wether or not the SIP templates have been generated
	SipTemplatesGenerated *bool `json:"sip_templates_generated,omitempty"`
	// The UUID of the Tenant
	Uuid                  *string `json:"uuid,omitempty"`
	WebrtcSipTemplateUuid *string `json:"webrtc_sip_template_uuid,omitempty"`
}

// NewTenant instantiates a new Tenant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenant() *Tenant {
	this := Tenant{}
	return &this
}

// NewTenantWithDefaults instantiates a new Tenant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantWithDefaults() *Tenant {
	this := Tenant{}
	return &this
}

// GetGlobalSipTemplateUuid returns the GlobalSipTemplateUuid field value if set, zero value otherwise.
func (o *Tenant) GetGlobalSipTemplateUuid() string {
	if o == nil || IsNil(o.GlobalSipTemplateUuid) {
		var ret string
		return ret
	}
	return *o.GlobalSipTemplateUuid
}

// GetGlobalSipTemplateUuidOk returns a tuple with the GlobalSipTemplateUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetGlobalSipTemplateUuidOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalSipTemplateUuid) {
		return nil, false
	}
	return o.GlobalSipTemplateUuid, true
}

// HasGlobalSipTemplateUuid returns a boolean if a field has been set.
func (o *Tenant) HasGlobalSipTemplateUuid() bool {
	if o != nil && !IsNil(o.GlobalSipTemplateUuid) {
		return true
	}

	return false
}

// SetGlobalSipTemplateUuid gets a reference to the given string and assigns it to the GlobalSipTemplateUuid field.
func (o *Tenant) SetGlobalSipTemplateUuid(v string) {
	o.GlobalSipTemplateUuid = &v
}

// GetRegistrationTrunkSipTemplateUuid returns the RegistrationTrunkSipTemplateUuid field value if set, zero value otherwise.
func (o *Tenant) GetRegistrationTrunkSipTemplateUuid() string {
	if o == nil || IsNil(o.RegistrationTrunkSipTemplateUuid) {
		var ret string
		return ret
	}
	return *o.RegistrationTrunkSipTemplateUuid
}

// GetRegistrationTrunkSipTemplateUuidOk returns a tuple with the RegistrationTrunkSipTemplateUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetRegistrationTrunkSipTemplateUuidOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationTrunkSipTemplateUuid) {
		return nil, false
	}
	return o.RegistrationTrunkSipTemplateUuid, true
}

// HasRegistrationTrunkSipTemplateUuid returns a boolean if a field has been set.
func (o *Tenant) HasRegistrationTrunkSipTemplateUuid() bool {
	if o != nil && !IsNil(o.RegistrationTrunkSipTemplateUuid) {
		return true
	}

	return false
}

// SetRegistrationTrunkSipTemplateUuid gets a reference to the given string and assigns it to the RegistrationTrunkSipTemplateUuid field.
func (o *Tenant) SetRegistrationTrunkSipTemplateUuid(v string) {
	o.RegistrationTrunkSipTemplateUuid = &v
}

// GetSipTemplatesGenerated returns the SipTemplatesGenerated field value if set, zero value otherwise.
func (o *Tenant) GetSipTemplatesGenerated() bool {
	if o == nil || IsNil(o.SipTemplatesGenerated) {
		var ret bool
		return ret
	}
	return *o.SipTemplatesGenerated
}

// GetSipTemplatesGeneratedOk returns a tuple with the SipTemplatesGenerated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetSipTemplatesGeneratedOk() (*bool, bool) {
	if o == nil || IsNil(o.SipTemplatesGenerated) {
		return nil, false
	}
	return o.SipTemplatesGenerated, true
}

// HasSipTemplatesGenerated returns a boolean if a field has been set.
func (o *Tenant) HasSipTemplatesGenerated() bool {
	if o != nil && !IsNil(o.SipTemplatesGenerated) {
		return true
	}

	return false
}

// SetSipTemplatesGenerated gets a reference to the given bool and assigns it to the SipTemplatesGenerated field.
func (o *Tenant) SetSipTemplatesGenerated(v bool) {
	o.SipTemplatesGenerated = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Tenant) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Tenant) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Tenant) SetUuid(v string) {
	o.Uuid = &v
}

// GetWebrtcSipTemplateUuid returns the WebrtcSipTemplateUuid field value if set, zero value otherwise.
func (o *Tenant) GetWebrtcSipTemplateUuid() string {
	if o == nil || IsNil(o.WebrtcSipTemplateUuid) {
		var ret string
		return ret
	}
	return *o.WebrtcSipTemplateUuid
}

// GetWebrtcSipTemplateUuidOk returns a tuple with the WebrtcSipTemplateUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetWebrtcSipTemplateUuidOk() (*string, bool) {
	if o == nil || IsNil(o.WebrtcSipTemplateUuid) {
		return nil, false
	}
	return o.WebrtcSipTemplateUuid, true
}

// HasWebrtcSipTemplateUuid returns a boolean if a field has been set.
func (o *Tenant) HasWebrtcSipTemplateUuid() bool {
	if o != nil && !IsNil(o.WebrtcSipTemplateUuid) {
		return true
	}

	return false
}

// SetWebrtcSipTemplateUuid gets a reference to the given string and assigns it to the WebrtcSipTemplateUuid field.
func (o *Tenant) SetWebrtcSipTemplateUuid(v string) {
	o.WebrtcSipTemplateUuid = &v
}

func (o Tenant) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Tenant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalSipTemplateUuid) {
		toSerialize["global_sip_template_uuid"] = o.GlobalSipTemplateUuid
	}
	if !IsNil(o.RegistrationTrunkSipTemplateUuid) {
		toSerialize["registration_trunk_sip_template_uuid"] = o.RegistrationTrunkSipTemplateUuid
	}
	if !IsNil(o.SipTemplatesGenerated) {
		toSerialize["sip_templates_generated"] = o.SipTemplatesGenerated
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.WebrtcSipTemplateUuid) {
		toSerialize["webrtc_sip_template_uuid"] = o.WebrtcSipTemplateUuid
	}
	return toSerialize, nil
}

type NullableTenant struct {
	value *Tenant
	isSet bool
}

func (v NullableTenant) Get() *Tenant {
	return v.value
}

func (v *NullableTenant) Set(val *Tenant) {
	v.value = val
	v.isSet = true
}

func (v NullableTenant) IsSet() bool {
	return v.isSet
}

func (v *NullableTenant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenant(val *Tenant) *NullableTenant {
	return &NullableTenant{value: val, isSet: true}
}

func (v NullableTenant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
