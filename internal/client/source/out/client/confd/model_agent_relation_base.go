/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"encoding/json"
)

// checks if the AgentRelationBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentRelationBase{}

// AgentRelationBase struct for AgentRelationBase
type AgentRelationBase struct {
	Firstname *string `json:"firstname,omitempty"`
	// The id of the agent
	Id       *int32  `json:"id,omitempty"`
	Lastname *string `json:"lastname,omitempty"`
	// Agent number. Cannot be modified after creation
	Number *string `json:"number,omitempty"`
}

// NewAgentRelationBase instantiates a new AgentRelationBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentRelationBase() *AgentRelationBase {
	this := AgentRelationBase{}
	return &this
}

// NewAgentRelationBaseWithDefaults instantiates a new AgentRelationBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentRelationBaseWithDefaults() *AgentRelationBase {
	this := AgentRelationBase{}
	return &this
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *AgentRelationBase) GetFirstname() string {
	if o == nil || IsNil(o.Firstname) {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentRelationBase) GetFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.Firstname) {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *AgentRelationBase) HasFirstname() bool {
	if o != nil && !IsNil(o.Firstname) {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *AgentRelationBase) SetFirstname(v string) {
	o.Firstname = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AgentRelationBase) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentRelationBase) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AgentRelationBase) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AgentRelationBase) SetId(v int32) {
	o.Id = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *AgentRelationBase) GetLastname() string {
	if o == nil || IsNil(o.Lastname) {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentRelationBase) GetLastnameOk() (*string, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *AgentRelationBase) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *AgentRelationBase) SetLastname(v string) {
	o.Lastname = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *AgentRelationBase) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentRelationBase) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *AgentRelationBase) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *AgentRelationBase) SetNumber(v string) {
	o.Number = &v
}

func (o AgentRelationBase) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentRelationBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Firstname) {
		toSerialize["firstname"] = o.Firstname
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	return toSerialize, nil
}

type NullableAgentRelationBase struct {
	value *AgentRelationBase
	isSet bool
}

func (v NullableAgentRelationBase) Get() *AgentRelationBase {
	return v.value
}

func (v *NullableAgentRelationBase) Set(val *AgentRelationBase) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentRelationBase) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentRelationBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentRelationBase(val *AgentRelationBase) *NullableAgentRelationBase {
	return &NullableAgentRelationBase{value: val, isSet: true}
}

func (v NullableAgentRelationBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentRelationBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
