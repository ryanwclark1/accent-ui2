/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"encoding/json"
)

// checks if the AgentSkillRelationBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentSkillRelationBase{}

// AgentSkillRelationBase struct for AgentSkillRelationBase
type AgentSkillRelationBase struct {
	// Skill's weight.
	SkillWeight *int32 `json:"skill_weight,omitempty"`
}

// NewAgentSkillRelationBase instantiates a new AgentSkillRelationBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentSkillRelationBase() *AgentSkillRelationBase {
	this := AgentSkillRelationBase{}
	return &this
}

// NewAgentSkillRelationBaseWithDefaults instantiates a new AgentSkillRelationBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentSkillRelationBaseWithDefaults() *AgentSkillRelationBase {
	this := AgentSkillRelationBase{}
	return &this
}

// GetSkillWeight returns the SkillWeight field value if set, zero value otherwise.
func (o *AgentSkillRelationBase) GetSkillWeight() int32 {
	if o == nil || IsNil(o.SkillWeight) {
		var ret int32
		return ret
	}
	return *o.SkillWeight
}

// GetSkillWeightOk returns a tuple with the SkillWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentSkillRelationBase) GetSkillWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.SkillWeight) {
		return nil, false
	}
	return o.SkillWeight, true
}

// HasSkillWeight returns a boolean if a field has been set.
func (o *AgentSkillRelationBase) HasSkillWeight() bool {
	if o != nil && !IsNil(o.SkillWeight) {
		return true
	}

	return false
}

// SetSkillWeight gets a reference to the given int32 and assigns it to the SkillWeight field.
func (o *AgentSkillRelationBase) SetSkillWeight(v int32) {
	o.SkillWeight = &v
}

func (o AgentSkillRelationBase) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentSkillRelationBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SkillWeight) {
		toSerialize["skill_weight"] = o.SkillWeight
	}
	return toSerialize, nil
}

type NullableAgentSkillRelationBase struct {
	value *AgentSkillRelationBase
	isSet bool
}

func (v NullableAgentSkillRelationBase) Get() *AgentSkillRelationBase {
	return v.value
}

func (v *NullableAgentSkillRelationBase) Set(val *AgentSkillRelationBase) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentSkillRelationBase) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentSkillRelationBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentSkillRelationBase(val *AgentSkillRelationBase) *NullableAgentSkillRelationBase {
	return &NullableAgentSkillRelationBase{value: val, isSet: true}
}

func (v NullableAgentSkillRelationBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentSkillRelationBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
