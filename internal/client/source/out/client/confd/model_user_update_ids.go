/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"encoding/json"
)

// checks if the UserUpdateIDs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserUpdateIDs{}

// UserUpdateIDs struct for UserUpdateIDs
type UserUpdateIDs struct {
	// Extension ID
	ExtensionId *int32 `json:"extension_id,omitempty"`
	// ID of the Extension used for incoming calls
	IncallExtensionId *int32 `json:"incall_extension_id,omitempty"`
	// Line ID
	LineId *int32 `json:"line_id,omitempty"`
	// Line number corresponding to the CSV data
	RowNumber *int32 `json:"row_number,omitempty"`
	// SIP UUID
	SipUuid *string `json:"sip_uuid,omitempty"`
	// User ID
	UserId *int32 `json:"user_id,omitempty"`
	// Voicemail ID
	VoicemailId *int32 `json:"voicemail_id,omitempty"`
}

// NewUserUpdateIDs instantiates a new UserUpdateIDs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserUpdateIDs() *UserUpdateIDs {
	this := UserUpdateIDs{}
	return &this
}

// NewUserUpdateIDsWithDefaults instantiates a new UserUpdateIDs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserUpdateIDsWithDefaults() *UserUpdateIDs {
	this := UserUpdateIDs{}
	return &this
}

// GetExtensionId returns the ExtensionId field value if set, zero value otherwise.
func (o *UserUpdateIDs) GetExtensionId() int32 {
	if o == nil || IsNil(o.ExtensionId) {
		var ret int32
		return ret
	}
	return *o.ExtensionId
}

// GetExtensionIdOk returns a tuple with the ExtensionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateIDs) GetExtensionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtensionId) {
		return nil, false
	}
	return o.ExtensionId, true
}

// HasExtensionId returns a boolean if a field has been set.
func (o *UserUpdateIDs) HasExtensionId() bool {
	if o != nil && !IsNil(o.ExtensionId) {
		return true
	}

	return false
}

// SetExtensionId gets a reference to the given int32 and assigns it to the ExtensionId field.
func (o *UserUpdateIDs) SetExtensionId(v int32) {
	o.ExtensionId = &v
}

// GetIncallExtensionId returns the IncallExtensionId field value if set, zero value otherwise.
func (o *UserUpdateIDs) GetIncallExtensionId() int32 {
	if o == nil || IsNil(o.IncallExtensionId) {
		var ret int32
		return ret
	}
	return *o.IncallExtensionId
}

// GetIncallExtensionIdOk returns a tuple with the IncallExtensionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateIDs) GetIncallExtensionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.IncallExtensionId) {
		return nil, false
	}
	return o.IncallExtensionId, true
}

// HasIncallExtensionId returns a boolean if a field has been set.
func (o *UserUpdateIDs) HasIncallExtensionId() bool {
	if o != nil && !IsNil(o.IncallExtensionId) {
		return true
	}

	return false
}

// SetIncallExtensionId gets a reference to the given int32 and assigns it to the IncallExtensionId field.
func (o *UserUpdateIDs) SetIncallExtensionId(v int32) {
	o.IncallExtensionId = &v
}

// GetLineId returns the LineId field value if set, zero value otherwise.
func (o *UserUpdateIDs) GetLineId() int32 {
	if o == nil || IsNil(o.LineId) {
		var ret int32
		return ret
	}
	return *o.LineId
}

// GetLineIdOk returns a tuple with the LineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateIDs) GetLineIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LineId) {
		return nil, false
	}
	return o.LineId, true
}

// HasLineId returns a boolean if a field has been set.
func (o *UserUpdateIDs) HasLineId() bool {
	if o != nil && !IsNil(o.LineId) {
		return true
	}

	return false
}

// SetLineId gets a reference to the given int32 and assigns it to the LineId field.
func (o *UserUpdateIDs) SetLineId(v int32) {
	o.LineId = &v
}

// GetRowNumber returns the RowNumber field value if set, zero value otherwise.
func (o *UserUpdateIDs) GetRowNumber() int32 {
	if o == nil || IsNil(o.RowNumber) {
		var ret int32
		return ret
	}
	return *o.RowNumber
}

// GetRowNumberOk returns a tuple with the RowNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateIDs) GetRowNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.RowNumber) {
		return nil, false
	}
	return o.RowNumber, true
}

// HasRowNumber returns a boolean if a field has been set.
func (o *UserUpdateIDs) HasRowNumber() bool {
	if o != nil && !IsNil(o.RowNumber) {
		return true
	}

	return false
}

// SetRowNumber gets a reference to the given int32 and assigns it to the RowNumber field.
func (o *UserUpdateIDs) SetRowNumber(v int32) {
	o.RowNumber = &v
}

// GetSipUuid returns the SipUuid field value if set, zero value otherwise.
func (o *UserUpdateIDs) GetSipUuid() string {
	if o == nil || IsNil(o.SipUuid) {
		var ret string
		return ret
	}
	return *o.SipUuid
}

// GetSipUuidOk returns a tuple with the SipUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateIDs) GetSipUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SipUuid) {
		return nil, false
	}
	return o.SipUuid, true
}

// HasSipUuid returns a boolean if a field has been set.
func (o *UserUpdateIDs) HasSipUuid() bool {
	if o != nil && !IsNil(o.SipUuid) {
		return true
	}

	return false
}

// SetSipUuid gets a reference to the given string and assigns it to the SipUuid field.
func (o *UserUpdateIDs) SetSipUuid(v string) {
	o.SipUuid = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserUpdateIDs) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateIDs) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserUpdateIDs) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *UserUpdateIDs) SetUserId(v int32) {
	o.UserId = &v
}

// GetVoicemailId returns the VoicemailId field value if set, zero value otherwise.
func (o *UserUpdateIDs) GetVoicemailId() int32 {
	if o == nil || IsNil(o.VoicemailId) {
		var ret int32
		return ret
	}
	return *o.VoicemailId
}

// GetVoicemailIdOk returns a tuple with the VoicemailId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateIDs) GetVoicemailIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VoicemailId) {
		return nil, false
	}
	return o.VoicemailId, true
}

// HasVoicemailId returns a boolean if a field has been set.
func (o *UserUpdateIDs) HasVoicemailId() bool {
	if o != nil && !IsNil(o.VoicemailId) {
		return true
	}

	return false
}

// SetVoicemailId gets a reference to the given int32 and assigns it to the VoicemailId field.
func (o *UserUpdateIDs) SetVoicemailId(v int32) {
	o.VoicemailId = &v
}

func (o UserUpdateIDs) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserUpdateIDs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExtensionId) {
		toSerialize["extension_id"] = o.ExtensionId
	}
	if !IsNil(o.IncallExtensionId) {
		toSerialize["incall_extension_id"] = o.IncallExtensionId
	}
	if !IsNil(o.LineId) {
		toSerialize["line_id"] = o.LineId
	}
	if !IsNil(o.RowNumber) {
		toSerialize["row_number"] = o.RowNumber
	}
	if !IsNil(o.SipUuid) {
		toSerialize["sip_uuid"] = o.SipUuid
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.VoicemailId) {
		toSerialize["voicemail_id"] = o.VoicemailId
	}
	return toSerialize, nil
}

type NullableUserUpdateIDs struct {
	value *UserUpdateIDs
	isSet bool
}

func (v NullableUserUpdateIDs) Get() *UserUpdateIDs {
	return v.value
}

func (v *NullableUserUpdateIDs) Set(val *UserUpdateIDs) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUpdateIDs) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUpdateIDs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUpdateIDs(val *UserUpdateIDs) *NullableUserUpdateIDs {
	return &NullableUserUpdateIDs{value: val, isSet: true}
}

func (v NullableUserUpdateIDs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUpdateIDs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
