/*
 * accent-provd
 *
 * Provisioning application REST API
 *
 * API version: 0.2
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package provdserver

import (
	"context"
	"net/http"
)



// ConfigsAPIRouter defines the required methods for binding the api requests to a responses for the ConfigsAPI
// The ConfigsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ConfigsAPIServicer to perform the required actions, then write the service results to the http response.
type ConfigsAPIRouter interface { 
	DeleteCfgMgrConfigsConfigId(http.ResponseWriter, *http.Request)
	GetCfgMgr(http.ResponseWriter, *http.Request)
	GetCfgMgrConfig(http.ResponseWriter, *http.Request)
	GetCfgMgrConfigs(http.ResponseWriter, *http.Request)
	GetCfgMgrRawConfig(http.ResponseWriter, *http.Request)
	PostCfgMgrAutocreate(http.ResponseWriter, *http.Request)
	PostCfgMgrConfigs(http.ResponseWriter, *http.Request)
	PutCfgMgrConfig(http.ResponseWriter, *http.Request)
}
// DevicesAPIRouter defines the required methods for binding the api requests to a responses for the DevicesAPI
// The DevicesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DevicesAPIServicer to perform the required actions, then write the service results to the http response.
type DevicesAPIRouter interface { 
	DeleteDevMgrDevice(http.ResponseWriter, *http.Request)
	DeleteDevMgrSynchronize(http.ResponseWriter, *http.Request)
	DevMgrDevicesPost(http.ResponseWriter, *http.Request)
	GetDevMgr(http.ResponseWriter, *http.Request)
	GetDevMgrDevice(http.ResponseWriter, *http.Request)
	GetDevMgrDevices(http.ResponseWriter, *http.Request)
	GetDevMgrSynchronize(http.ResponseWriter, *http.Request)
	PostDevMgrDhcpinfo(http.ResponseWriter, *http.Request)
	PostDevMgrReconfigure(http.ResponseWriter, *http.Request)
	PostDevMgrSynchronize(http.ResponseWriter, *http.Request)
	PutDevMgrDevice(http.ResponseWriter, *http.Request)
}
// PluginsAPIRouter defines the required methods for binding the api requests to a responses for the PluginsAPI
// The PluginsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PluginsAPIServicer to perform the required actions, then write the service results to the http response.
type PluginsAPIRouter interface { 
	DeletePgMgrInstall(http.ResponseWriter, *http.Request)
	DeletePgMgrInstallMonitor(http.ResponseWriter, *http.Request)
	DeletePgMgrMonitor(http.ResponseWriter, *http.Request)
	DeletePgMgrPluginUpgradeMonitor(http.ResponseWriter, *http.Request)
	DeletePgMgrUpgradeMonitor(http.ResponseWriter, *http.Request)
	GetPgMgr(http.ResponseWriter, *http.Request)
	GetPgMgrInstall(http.ResponseWriter, *http.Request)
	GetPgMgrInstallStatus(http.ResponseWriter, *http.Request)
	GetPgMgrInstallable(http.ResponseWriter, *http.Request)
	GetPgMgrInstallableList(http.ResponseWriter, *http.Request)
	GetPgMgrInstalled(http.ResponseWriter, *http.Request)
	GetPgMgrInstalledList(http.ResponseWriter, *http.Request)
	GetPgMgrPlugin(http.ResponseWriter, *http.Request)
	GetPgMgrPluginInfo(http.ResponseWriter, *http.Request)
	GetPgMgrPluginInstall(http.ResponseWriter, *http.Request)
	GetPgMgrPluginInstallStatus(http.ResponseWriter, *http.Request)
	GetPgMgrPluginUpgradeStatus(http.ResponseWriter, *http.Request)
	GetPgMgrPlugins(http.ResponseWriter, *http.Request)
	GetPgMgrUpdateStatus(http.ResponseWriter, *http.Request)
	GetPgMgrUpgradeStatus(http.ResponseWriter, *http.Request)
	PostPgMgrInstallPlugin(http.ResponseWriter, *http.Request)
	PostPgMgrPluginInstallPlugin(http.ResponseWriter, *http.Request)
	PostPgMgrPluginUninstallPlugin(http.ResponseWriter, *http.Request)
	PostPgMgrReload(http.ResponseWriter, *http.Request)
	PostPgMgrUninstallPlugin(http.ResponseWriter, *http.Request)
	PostPgMgrUpdateList(http.ResponseWriter, *http.Request)
	PostPgMgrUpgradePlugin(http.ResponseWriter, *http.Request)
}
// ProvdAPIRouter defines the required methods for binding the api requests to a responses for the ProvdAPI
// The ProvdAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProvdAPIServicer to perform the required actions, then write the service results to the http response.
type ProvdAPIRouter interface { 
	GetConfigure(http.ResponseWriter, *http.Request)
	GetConfigureParamId(http.ResponseWriter, *http.Request)
	GetProvd(http.ResponseWriter, *http.Request)
	PutConfigureFtpProxy(http.ResponseWriter, *http.Request)
	PutConfigureHttpProxy(http.ResponseWriter, *http.Request)
	PutConfigureHttpsProxy(http.ResponseWriter, *http.Request)
	PutConfigureLocale(http.ResponseWriter, *http.Request)
	PutConfigureNAT(http.ResponseWriter, *http.Request)
	PutConfigureParamId(http.ResponseWriter, *http.Request)
	PutConfigurePluginServer(http.ResponseWriter, *http.Request)
	PutConfigureProvisioningKey(http.ResponseWriter, *http.Request)
}
// StatusAPIRouter defines the required methods for binding the api requests to a responses for the StatusAPI
// The StatusAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StatusAPIServicer to perform the required actions, then write the service results to the http response.
type StatusAPIRouter interface { 
	GetStatus(http.ResponseWriter, *http.Request)
}


// ConfigsAPIServicer defines the api actions for the ConfigsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ConfigsAPIServicer interface { 
	DeleteCfgMgrConfigsConfigId(context.Context, string) (ImplResponse, error)
	GetCfgMgr(context.Context) (ImplResponse, error)
	GetCfgMgrConfig(context.Context, string) (ImplResponse, error)
	GetCfgMgrConfigs(context.Context, string, string, int32, string, string) (ImplResponse, error)
	GetCfgMgrRawConfig(context.Context, string) (ImplResponse, error)
	PostCfgMgrAutocreate(context.Context, map[string]interface{}) (ImplResponse, error)
	PostCfgMgrConfigs(context.Context, ConfigObject) (ImplResponse, error)
	PutCfgMgrConfig(context.Context, string, ConfigObject) (ImplResponse, error)
}


// DevicesAPIServicer defines the api actions for the DevicesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DevicesAPIServicer interface { 
	DeleteDevMgrDevice(context.Context, string, string) (ImplResponse, error)
	DeleteDevMgrSynchronize(context.Context, string) (ImplResponse, error)
	DevMgrDevicesPost(context.Context, string, DeviceObject) (ImplResponse, error)
	GetDevMgr(context.Context) (ImplResponse, error)
	GetDevMgrDevice(context.Context, string, string) (ImplResponse, error)
	GetDevMgrDevices(context.Context, string, string, int32, string, string, string, bool) (ImplResponse, error)
	GetDevMgrSynchronize(context.Context, string) (ImplResponse, error)
	PostDevMgrDhcpinfo(context.Context, string, DhcpInfoObject) (ImplResponse, error)
	PostDevMgrReconfigure(context.Context, string, IdObject) (ImplResponse, error)
	PostDevMgrSynchronize(context.Context, string, IdObject) (ImplResponse, error)
	PutDevMgrDevice(context.Context, string, string, DeviceObject) (ImplResponse, error)
}


// PluginsAPIServicer defines the api actions for the PluginsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PluginsAPIServicer interface { 
	DeletePgMgrInstall(context.Context, string) (ImplResponse, error)
	DeletePgMgrInstallMonitor(context.Context, string, string) (ImplResponse, error)
	DeletePgMgrMonitor(context.Context, string) (ImplResponse, error)
	DeletePgMgrPluginUpgradeMonitor(context.Context, string, string) (ImplResponse, error)
	DeletePgMgrUpgradeMonitor(context.Context, string) (ImplResponse, error)
	GetPgMgr(context.Context) (ImplResponse, error)
	GetPgMgrInstall(context.Context) (ImplResponse, error)
	GetPgMgrInstallStatus(context.Context, string) (ImplResponse, error)
	GetPgMgrInstallable(context.Context) (ImplResponse, error)
	GetPgMgrInstallableList(context.Context, string) (ImplResponse, error)
	GetPgMgrInstalled(context.Context) (ImplResponse, error)
	GetPgMgrInstalledList(context.Context, string) (ImplResponse, error)
	GetPgMgrPlugin(context.Context, string) (ImplResponse, error)
	GetPgMgrPluginInfo(context.Context, string) (ImplResponse, error)
	GetPgMgrPluginInstall(context.Context, string) (ImplResponse, error)
	GetPgMgrPluginInstallStatus(context.Context, string, string) (ImplResponse, error)
	GetPgMgrPluginUpgradeStatus(context.Context, string, string) (ImplResponse, error)
	GetPgMgrPlugins(context.Context) (ImplResponse, error)
	GetPgMgrUpdateStatus(context.Context, string) (ImplResponse, error)
	GetPgMgrUpgradeStatus(context.Context, string) (ImplResponse, error)
	PostPgMgrInstallPlugin(context.Context, IdObject) (ImplResponse, error)
	PostPgMgrPluginInstallPlugin(context.Context, string, IdObject) (ImplResponse, error)
	PostPgMgrPluginUninstallPlugin(context.Context, string, IdObject) (ImplResponse, error)
	PostPgMgrReload(context.Context, IdObject) (ImplResponse, error)
	PostPgMgrUninstallPlugin(context.Context, IdObject) (ImplResponse, error)
	PostPgMgrUpdateList(context.Context, map[string]interface{}) (ImplResponse, error)
	PostPgMgrUpgradePlugin(context.Context, IdObject) (ImplResponse, error)
}


// ProvdAPIServicer defines the api actions for the ProvdAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProvdAPIServicer interface { 
	GetConfigure(context.Context) (ImplResponse, error)
	GetConfigureParamId(context.Context, string, string) (ImplResponse, error)
	GetProvd(context.Context) (ImplResponse, error)
	PutConfigureFtpProxy(context.Context, FtpProxy) (ImplResponse, error)
	PutConfigureHttpProxy(context.Context, HttpProxy) (ImplResponse, error)
	PutConfigureHttpsProxy(context.Context, HttpsProxy) (ImplResponse, error)
	PutConfigureLocale(context.Context, Locale) (ImplResponse, error)
	PutConfigureNAT(context.Context, Nat) (ImplResponse, error)
	PutConfigureParamId(context.Context, string, Param) (ImplResponse, error)
	PutConfigurePluginServer(context.Context, PluginServer) (ImplResponse, error)
	PutConfigureProvisioningKey(context.Context, string, ProvisioningKey) (ImplResponse, error)
}


// StatusAPIServicer defines the api actions for the StatusAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StatusAPIServicer interface { 
	GetStatus(context.Context) (ImplResponse, error)
}
