/*
 * accent-provd
 *
 * Provisioning application REST API
 *
 * API version: 0.2
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package provdserver

import (
	"context"
	"errors"
	"net/http"
)

// PluginsAPIService is a service that implements the logic for the PluginsAPIServicer
// This service should implement the business logic for every endpoint for the PluginsAPI API.
// Include any external packages or services that will be required by this service.
type PluginsAPIService struct {
}

// NewPluginsAPIService creates a default api service
func NewPluginsAPIService() PluginsAPIServicer {
	return &PluginsAPIService{}
}

// DeletePgMgrInstall - Delete the Operation In Progress
func (s *PluginsAPIService) DeletePgMgrInstall(ctx context.Context, operationId string) (ImplResponse, error) {
	// TODO - update DeletePgMgrInstall with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePgMgrInstall method not implemented")
}

// DeletePgMgrInstallMonitor - Delete the Operation In Progress
func (s *PluginsAPIService) DeletePgMgrInstallMonitor(ctx context.Context, pluginId string, operationId string) (ImplResponse, error) {
	// TODO - update DeletePgMgrInstallMonitor with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePgMgrInstallMonitor method not implemented")
}

// DeletePgMgrMonitor - Delete the Operation In Progress
func (s *PluginsAPIService) DeletePgMgrMonitor(ctx context.Context, operationId string) (ImplResponse, error) {
	// TODO - update DeletePgMgrMonitor with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePgMgrMonitor method not implemented")
}

// DeletePgMgrPluginUpgradeMonitor - Delete the Operation In Progress
func (s *PluginsAPIService) DeletePgMgrPluginUpgradeMonitor(ctx context.Context, pluginId string, operationId string) (ImplResponse, error) {
	// TODO - update DeletePgMgrPluginUpgradeMonitor with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePgMgrPluginUpgradeMonitor method not implemented")
}

// DeletePgMgrUpgradeMonitor - Delete the Operation In Progress
func (s *PluginsAPIService) DeletePgMgrUpgradeMonitor(ctx context.Context, operationId string) (ImplResponse, error) {
	// TODO - update DeletePgMgrUpgradeMonitor with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePgMgrUpgradeMonitor method not implemented")
}

// GetPgMgr - Get the Plugin Manager resource
func (s *PluginsAPIService) GetPgMgr(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPgMgr with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LinksObject{}) or use other options such as http.Ok ...
	// return Response(200, LinksObject{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgr method not implemented")
}

// GetPgMgrInstall - Get the installation service resources
func (s *PluginsAPIService) GetPgMgrInstall(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPgMgrInstall with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LinksObject{}) or use other options such as http.Ok ...
	// return Response(200, LinksObject{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrInstall method not implemented")
}

// GetPgMgrInstallStatus - Get the status of a plugin installation Operation In Progress
func (s *PluginsAPIService) GetPgMgrInstallStatus(ctx context.Context, operationId string) (ImplResponse, error) {
	// TODO - update GetPgMgrInstallStatus with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationInProgressObject{}) or use other options such as http.Ok ...
	// return Response(200, OperationInProgressObject{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrInstallStatus method not implemented")
}

// GetPgMgrInstallable - Get the installable plugins list
func (s *PluginsAPIService) GetPgMgrInstallable(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPgMgrInstallable with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PackageList{}) or use other options such as http.Ok ...
	// return Response(200, PackageList{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrInstallable method not implemented")
}

// GetPgMgrInstallableList - Get the installable packages list
func (s *PluginsAPIService) GetPgMgrInstallableList(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update GetPgMgrInstallableList with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PackageList{}) or use other options such as http.Ok ...
	// return Response(200, PackageList{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrInstallableList method not implemented")
}

// GetPgMgrInstalled - Get the installed plugins list
func (s *PluginsAPIService) GetPgMgrInstalled(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPgMgrInstalled with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PackageList{}) or use other options such as http.Ok ...
	// return Response(200, PackageList{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrInstalled method not implemented")
}

// GetPgMgrInstalledList - Get the installed packages list
func (s *PluginsAPIService) GetPgMgrInstalledList(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update GetPgMgrInstalledList with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PackageList{}) or use other options such as http.Ok ...
	// return Response(200, PackageList{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrInstalledList method not implemented")
}

// GetPgMgrPlugin - Get the resources of a specific plugin
func (s *PluginsAPIService) GetPgMgrPlugin(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update GetPgMgrPlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LinksObject{}) or use other options such as http.Ok ...
	// return Response(200, LinksObject{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrPlugin method not implemented")
}

// GetPgMgrPluginInfo - Get the information of a plugin
func (s *PluginsAPIService) GetPgMgrPluginInfo(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update GetPgMgrPluginInfo with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PluginInfo{}) or use other options such as http.Ok ...
	// return Response(200, PluginInfo{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrPluginInfo method not implemented")
}

// GetPgMgrPluginInstall - Get the package installation service resources
func (s *PluginsAPIService) GetPgMgrPluginInstall(ctx context.Context, pluginId string) (ImplResponse, error) {
	// TODO - update GetPgMgrPluginInstall with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LinksObject{}) or use other options such as http.Ok ...
	// return Response(200, LinksObject{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrPluginInstall method not implemented")
}

// GetPgMgrPluginInstallStatus - Get the status of a package installation Operation In Progress
func (s *PluginsAPIService) GetPgMgrPluginInstallStatus(ctx context.Context, pluginId string, operationId string) (ImplResponse, error) {
	// TODO - update GetPgMgrPluginInstallStatus with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationInProgressObject{}) or use other options such as http.Ok ...
	// return Response(200, OperationInProgressObject{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrPluginInstallStatus method not implemented")
}

// GetPgMgrPluginUpgradeStatus - Get the status of a package upgrade Operation In Progress
func (s *PluginsAPIService) GetPgMgrPluginUpgradeStatus(ctx context.Context, pluginId string, operationId string) (ImplResponse, error) {
	// TODO - update GetPgMgrPluginUpgradeStatus with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationInProgressObject{}) or use other options such as http.Ok ...
	// return Response(200, OperationInProgressObject{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrPluginUpgradeStatus method not implemented")
}

// GetPgMgrPlugins - List the installed plugins
func (s *PluginsAPIService) GetPgMgrPlugins(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetPgMgrPlugins with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, PluginsObject{}) or use other options such as http.Ok ...
	// return Response(200, PluginsObject{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrPlugins method not implemented")
}

// GetPgMgrUpdateStatus - Get the status of a plugin database update Operation In Progress
func (s *PluginsAPIService) GetPgMgrUpdateStatus(ctx context.Context, operationId string) (ImplResponse, error) {
	// TODO - update GetPgMgrUpdateStatus with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationInProgressObject{}) or use other options such as http.Ok ...
	// return Response(200, OperationInProgressObject{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrUpdateStatus method not implemented")
}

// GetPgMgrUpgradeStatus - Get the status of a plugin upgrade Operation In Progress
func (s *PluginsAPIService) GetPgMgrUpgradeStatus(ctx context.Context, operationId string) (ImplResponse, error) {
	// TODO - update GetPgMgrUpgradeStatus with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, OperationInProgressObject{}) or use other options such as http.Ok ...
	// return Response(200, OperationInProgressObject{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPgMgrUpgradeStatus method not implemented")
}

// PostPgMgrInstallPlugin - Install a plugin
func (s *PluginsAPIService) PostPgMgrInstallPlugin(ctx context.Context, body IdObject) (ImplResponse, error) {
	// TODO - update PostPgMgrInstallPlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	// TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	// return Response(400, string{}), nil

	// TODO: Uncomment the next line to return response Response(415, string{}) or use other options such as http.Ok ...
	// return Response(415, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPgMgrInstallPlugin method not implemented")
}

// PostPgMgrPluginInstallPlugin - Install a package
func (s *PluginsAPIService) PostPgMgrPluginInstallPlugin(ctx context.Context, pluginId string, body IdObject) (ImplResponse, error) {
	// TODO - update PostPgMgrPluginInstallPlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	// TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	// return Response(400, string{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	// TODO: Uncomment the next line to return response Response(415, string{}) or use other options such as http.Ok ...
	// return Response(415, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPgMgrPluginInstallPlugin method not implemented")
}

// PostPgMgrPluginUninstallPlugin - Uninstall a package
func (s *PluginsAPIService) PostPgMgrPluginUninstallPlugin(ctx context.Context, pluginId string, body IdObject) (ImplResponse, error) {
	// TODO - update PostPgMgrPluginUninstallPlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	// return Response(400, string{}), nil

	// TODO: Uncomment the next line to return response Response(404, string{}) or use other options such as http.Ok ...
	// return Response(404, string{}), nil

	// TODO: Uncomment the next line to return response Response(415, string{}) or use other options such as http.Ok ...
	// return Response(415, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPgMgrPluginUninstallPlugin method not implemented")
}

// PostPgMgrReload - Reload a plugin
func (s *PluginsAPIService) PostPgMgrReload(ctx context.Context, body IdObject) (ImplResponse, error) {
	// TODO - update PostPgMgrReload with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPgMgrReload method not implemented")
}

// PostPgMgrUninstallPlugin - Uninstall a plugin
func (s *PluginsAPIService) PostPgMgrUninstallPlugin(ctx context.Context, body IdObject) (ImplResponse, error) {
	// TODO - update PostPgMgrUninstallPlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	// return Response(400, string{}), nil

	// TODO: Uncomment the next line to return response Response(415, string{}) or use other options such as http.Ok ...
	// return Response(415, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPgMgrUninstallPlugin method not implemented")
}

// PostPgMgrUpdateList - Update the List of installable plugins
func (s *PluginsAPIService) PostPgMgrUpdateList(ctx context.Context, body map[string]interface{}) (ImplResponse, error) {
	// TODO - update PostPgMgrUpdateList with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	// TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	// return Response(400, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPgMgrUpdateList method not implemented")
}

// PostPgMgrUpgradePlugin - Upgrade a plugin
func (s *PluginsAPIService) PostPgMgrUpgradePlugin(ctx context.Context, body IdObject) (ImplResponse, error) {
	// TODO - update PostPgMgrUpgradePlugin with the required logic for this service method.
	// Add api_plugins_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	// TODO: Uncomment the next line to return response Response(400, string{}) or use other options such as http.Ok ...
	// return Response(400, string{}), nil

	// TODO: Uncomment the next line to return response Response(415, string{}) or use other options such as http.Ok ...
	// return Response(415, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostPgMgrUpgradePlugin method not implemented")
}
