/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	confdserver "github.com/ryanwclark/accent-voice/src"
)

func main() {
	log.Printf("Server started")

	AccessFeaturesAPIService := confdserver.NewAccessFeaturesAPIService()
	AccessFeaturesAPIController := confdserver.NewAccessFeaturesAPIController(AccessFeaturesAPIService)

	AgentsAPIService := confdserver.NewAgentsAPIService()
	AgentsAPIController := confdserver.NewAgentsAPIController(AgentsAPIService)

	ApplicationsAPIService := confdserver.NewApplicationsAPIService()
	ApplicationsAPIController := confdserver.NewApplicationsAPIController(ApplicationsAPIService)

	AsteriskAPIService := confdserver.NewAsteriskAPIService()
	AsteriskAPIController := confdserver.NewAsteriskAPIController(AsteriskAPIService)

	CallfiltersAPIService := confdserver.NewCallfiltersAPIService()
	CallfiltersAPIController := confdserver.NewCallfiltersAPIController(CallfiltersAPIService)

	CallpermissionsAPIService := confdserver.NewCallpermissionsAPIService()
	CallpermissionsAPIController := confdserver.NewCallpermissionsAPIController(CallpermissionsAPIService)

	CallpickupsAPIService := confdserver.NewCallpickupsAPIService()
	CallpickupsAPIController := confdserver.NewCallpickupsAPIController(CallpickupsAPIService)

	ConferencesAPIService := confdserver.NewConferencesAPIService()
	ConferencesAPIController := confdserver.NewConferencesAPIController(ConferencesAPIService)

	ConfigurationAPIService := confdserver.NewConfigurationAPIService()
	ConfigurationAPIController := confdserver.NewConfigurationAPIController(ConfigurationAPIService)

	ContextsAPIService := confdserver.NewContextsAPIService()
	ContextsAPIController := confdserver.NewContextsAPIController(ContextsAPIService)

	CustomAPIService := confdserver.NewCustomAPIService()
	CustomAPIController := confdserver.NewCustomAPIController(CustomAPIService)

	DevicesAPIService := confdserver.NewDevicesAPIService()
	DevicesAPIController := confdserver.NewDevicesAPIController(DevicesAPIService)

	DhcpAPIService := confdserver.NewDhcpAPIService()
	DhcpAPIController := confdserver.NewDhcpAPIController(DhcpAPIService)

	EmailsAPIService := confdserver.NewEmailsAPIService()
	EmailsAPIController := confdserver.NewEmailsAPIController(EmailsAPIService)

	EndpointsAPIService := confdserver.NewEndpointsAPIService()
	EndpointsAPIController := confdserver.NewEndpointsAPIController(EndpointsAPIService)

	ExtensionsAPIService := confdserver.NewExtensionsAPIService()
	ExtensionsAPIController := confdserver.NewExtensionsAPIController(ExtensionsAPIService)

	ExternalAppsAPIService := confdserver.NewExternalAppsAPIService()
	ExternalAppsAPIController := confdserver.NewExternalAppsAPIController(ExternalAppsAPIService)

	ForwardsAPIService := confdserver.NewForwardsAPIService()
	ForwardsAPIController := confdserver.NewForwardsAPIController(ForwardsAPIService)

	FunckeysAPIService := confdserver.NewFunckeysAPIService()
	FunckeysAPIController := confdserver.NewFunckeysAPIController(FunckeysAPIService)

	GroupsAPIService := confdserver.NewGroupsAPIService()
	GroupsAPIController := confdserver.NewGroupsAPIController(GroupsAPIService)

	GuestsAPIService := confdserver.NewGuestsAPIService()
	GuestsAPIController := confdserver.NewGuestsAPIController(GuestsAPIService)

	HaAPIService := confdserver.NewHaAPIService()
	HaAPIController := confdserver.NewHaAPIController(HaAPIService)

	IaxAPIService := confdserver.NewIaxAPIService()
	IaxAPIController := confdserver.NewIaxAPIController(IaxAPIService)

	IncallsAPIService := confdserver.NewIncallsAPIService()
	IncallsAPIController := confdserver.NewIncallsAPIController(IncallsAPIService)

	InfosAPIService := confdserver.NewInfosAPIService()
	InfosAPIController := confdserver.NewInfosAPIController(InfosAPIService)

	IngressesAPIService := confdserver.NewIngressesAPIService()
	IngressesAPIController := confdserver.NewIngressesAPIController(IngressesAPIService)

	IvrAPIService := confdserver.NewIvrAPIService()
	IvrAPIController := confdserver.NewIvrAPIController(IvrAPIService)

	LinesAPIService := confdserver.NewLinesAPIService()
	LinesAPIController := confdserver.NewLinesAPIController(LinesAPIService)

	MeetingAuthorizationsAPIService := confdserver.NewMeetingAuthorizationsAPIService()
	MeetingAuthorizationsAPIController := confdserver.NewMeetingAuthorizationsAPIController(MeetingAuthorizationsAPIService)

	MeetingsAPIService := confdserver.NewMeetingsAPIService()
	MeetingsAPIController := confdserver.NewMeetingsAPIController(MeetingsAPIService)

	MohAPIService := confdserver.NewMohAPIService()
	MohAPIController := confdserver.NewMohAPIController(MohAPIService)

	OutcallsAPIService := confdserver.NewOutcallsAPIService()
	OutcallsAPIController := confdserver.NewOutcallsAPIController(OutcallsAPIService)

	PagingsAPIService := confdserver.NewPagingsAPIService()
	PagingsAPIController := confdserver.NewPagingsAPIController(PagingsAPIService)

	ParkingLotsAPIService := confdserver.NewParkingLotsAPIService()
	ParkingLotsAPIController := confdserver.NewParkingLotsAPIController(ParkingLotsAPIService)

	ProvisioningAPIService := confdserver.NewProvisioningAPIService()
	ProvisioningAPIController := confdserver.NewProvisioningAPIController(ProvisioningAPIService)

	QueuesAPIService := confdserver.NewQueuesAPIService()
	QueuesAPIController := confdserver.NewQueuesAPIController(QueuesAPIService)

	RegistersAPIService := confdserver.NewRegistersAPIService()
	RegistersAPIController := confdserver.NewRegistersAPIController(RegistersAPIService)

	RegistrarsAPIService := confdserver.NewRegistrarsAPIService()
	RegistrarsAPIController := confdserver.NewRegistrarsAPIController(RegistrarsAPIService)

	SccpAPIService := confdserver.NewSccpAPIService()
	SccpAPIController := confdserver.NewSccpAPIController(SccpAPIService)

	SchedulesAPIService := confdserver.NewSchedulesAPIService()
	SchedulesAPIController := confdserver.NewSchedulesAPIController(SchedulesAPIService)

	SipAPIService := confdserver.NewSipAPIService()
	SipAPIController := confdserver.NewSipAPIController(SipAPIService)

	SkillsAPIService := confdserver.NewSkillsAPIService()
	SkillsAPIController := confdserver.NewSkillsAPIController(SkillsAPIService)

	SoundsAPIService := confdserver.NewSoundsAPIService()
	SoundsAPIController := confdserver.NewSoundsAPIController(SoundsAPIService)

	StatusAPIService := confdserver.NewStatusAPIService()
	StatusAPIController := confdserver.NewStatusAPIController(StatusAPIService)

	SwitchboardsAPIService := confdserver.NewSwitchboardsAPIService()
	SwitchboardsAPIController := confdserver.NewSwitchboardsAPIController(SwitchboardsAPIService)

	TenantsAPIService := confdserver.NewTenantsAPIService()
	TenantsAPIController := confdserver.NewTenantsAPIController(TenantsAPIService)

	TimezonesAPIService := confdserver.NewTimezonesAPIService()
	TimezonesAPIController := confdserver.NewTimezonesAPIController(TimezonesAPIService)

	TrunksAPIService := confdserver.NewTrunksAPIService()
	TrunksAPIController := confdserver.NewTrunksAPIController(TrunksAPIService)

	UsersAPIService := confdserver.NewUsersAPIService()
	UsersAPIController := confdserver.NewUsersAPIController(UsersAPIService)

	VoicemailsAPIService := confdserver.NewVoicemailsAPIService()
	VoicemailsAPIController := confdserver.NewVoicemailsAPIController(VoicemailsAPIService)

	WizardAPIService := confdserver.NewWizardAPIService()
	WizardAPIController := confdserver.NewWizardAPIController(WizardAPIService)

	router := confdserver.NewRouter(AccessFeaturesAPIController, AgentsAPIController, ApplicationsAPIController, AsteriskAPIController, CallfiltersAPIController, CallpermissionsAPIController, CallpickupsAPIController, ConferencesAPIController, ConfigurationAPIController, ContextsAPIController, CustomAPIController, DevicesAPIController, DhcpAPIController, EmailsAPIController, EndpointsAPIController, ExtensionsAPIController, ExternalAppsAPIController, ForwardsAPIController, FunckeysAPIController, GroupsAPIController, GuestsAPIController, HaAPIController, IaxAPIController, IncallsAPIController, InfosAPIController, IngressesAPIController, IvrAPIController, LinesAPIController, MeetingAuthorizationsAPIController, MeetingsAPIController, MohAPIController, OutcallsAPIController, PagingsAPIController, ParkingLotsAPIController, ProvisioningAPIController, QueuesAPIController, RegistersAPIController, RegistrarsAPIController, SccpAPIController, SchedulesAPIController, SipAPIController, SkillsAPIController, SoundsAPIController, StatusAPIController, SwitchboardsAPIController, TenantsAPIController, TimezonesAPIController, TrunksAPIController, UsersAPIController, VoicemailsAPIController, WizardAPIController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
