/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

type Device struct {
	Description string `json:"description,omitempty"`

	// Device ID
	Id string `json:"id,omitempty"`

	// IP address (10.0.0.0)
	Ip string `json:"ip,omitempty"`

	// Indicates if the device is a new device, ie in the master tenant
	IsNew bool `json:"is_new,omitempty"`

	// MAC address (aa:bb:cc:dd:ee:ff)
	Mac string `json:"mac,omitempty"`

	// Device model
	Model string `json:"model,omitempty"`

	Options DeviceOptions `json:"options,omitempty"`

	// Provisioning plugin to be used by device
	Plugin string `json:"plugin,omitempty"`

	// Serial number
	Sn string `json:"sn,omitempty"`

	// Device status. autoprov: Device can be provisionned using a provisioning code, configured: Device is configured and ready to be used, not_configured : Device has not been completely configured
	Status string `json:"status,omitempty"`

	// ID of the device template. All device using a device template will have a certain number of common parameters preconfigured for the device
	TemplateId string `json:"template_id,omitempty"`

	// The UUID of the tenant
	TenantUuid string `json:"tenant_uuid,omitempty"`

	// Vendor name
	Vendor string `json:"vendor,omitempty"`

	// Firmware version
	Version string `json:"version,omitempty"`
}

// AssertDeviceRequired checks if the required fields are not zero-ed
func AssertDeviceRequired(obj Device) error {
	if err := AssertDeviceOptionsRequired(obj.Options); err != nil {
		return err
	}
	return nil
}

// AssertDeviceConstraints checks if the values respects the defined constraints
func AssertDeviceConstraints(obj Device) error {
	return nil
}
