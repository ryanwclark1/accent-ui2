/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

type PjsipConfigurationOptions struct {

	// A list of all configuration options for this section
	Aor []PjsipConfigurationOption `json:"aor,omitempty"`

	// A list of all configuration options for this section
	Auth []PjsipConfigurationOption `json:"auth,omitempty"`

	// A list of all configuration options for this section
	Contact []PjsipConfigurationOption `json:"contact,omitempty"`

	// A list of all configuration options for this section
	DomainAlias []PjsipConfigurationOption `json:"domain_alias,omitempty"`

	// A list of all configuration options for this section
	Endpoint []PjsipConfigurationOption `json:"endpoint,omitempty"`

	// A list of all configuration options for this section
	Global []PjsipConfigurationOption `json:"global,omitempty"`

	// A list of all configuration options for this section
	Registration []PjsipConfigurationOption `json:"registration,omitempty"`

	// A list of all configuration options for this section
	System []PjsipConfigurationOption `json:"system,omitempty"`

	// A list of all configuration options for this section
	Transport []PjsipConfigurationOption `json:"transport,omitempty"`
}

// AssertPjsipConfigurationOptionsRequired checks if the required fields are not zero-ed
func AssertPjsipConfigurationOptionsRequired(obj PjsipConfigurationOptions) error {
	for _, el := range obj.Aor {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Auth {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Contact {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.DomainAlias {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Endpoint {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Global {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Registration {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.System {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Transport {
		if err := AssertPjsipConfigurationOptionRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPjsipConfigurationOptionsConstraints checks if the values respects the defined constraints
func AssertPjsipConfigurationOptionsConstraints(obj PjsipConfigurationOptions) error {
	return nil
}
