/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

import (
	"context"
	"errors"
	"net/http"
)

// AccessFeaturesAPIService is a service that implements the logic for the AccessFeaturesAPIServicer
// This service should implement the business logic for every endpoint for the AccessFeaturesAPI API.
// Include any external packages or services that will be required by this service.
type AccessFeaturesAPIService struct {
}

// NewAccessFeaturesAPIService creates a default api service
func NewAccessFeaturesAPIService() AccessFeaturesAPIServicer {
	return &AccessFeaturesAPIService{}
}

// CreateAccessFeature - Create access_feature
func (s *AccessFeaturesAPIService) CreateAccessFeature(ctx context.Context, body AccessFeature) (ImplResponse, error) {
	// TODO - update CreateAccessFeature with the required logic for this service method.
	// Add api_access_features_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, AccessFeature{}) or use other options such as http.Ok ...
	// return Response(201, AccessFeature{}), nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateAccessFeature method not implemented")
}

// DeleteAccessFeature - Delete access feature
func (s *AccessFeaturesAPIService) DeleteAccessFeature(ctx context.Context, accessFeatureId int32) (ImplResponse, error) {
	// TODO - update DeleteAccessFeature with the required logic for this service method.
	// Add api_access_features_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteAccessFeature method not implemented")
}

// GetAccessFeature - Get access_feature
func (s *AccessFeaturesAPIService) GetAccessFeature(ctx context.Context, accessFeatureId int32) (ImplResponse, error) {
	// TODO - update GetAccessFeature with the required logic for this service method.
	// Add api_access_features_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AccessFeature{}) or use other options such as http.Ok ...
	// return Response(200, AccessFeature{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAccessFeature method not implemented")
}

// ListAccessFeatures - List access features
func (s *AccessFeaturesAPIService) ListAccessFeatures(ctx context.Context, order string, direction string, limit int32, offset int32, search string) (ImplResponse, error) {
	// TODO - update ListAccessFeatures with the required logic for this service method.
	// Add api_access_features_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AccessFeatureItems{}) or use other options such as http.Ok ...
	// return Response(200, AccessFeatureItems{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListAccessFeatures method not implemented")
}

// UpdateAccessFeature - Update access_feature
func (s *AccessFeaturesAPIService) UpdateAccessFeature(ctx context.Context, accessFeatureId int32, body AccessFeature) (ImplResponse, error) {
	// TODO - update UpdateAccessFeature with the required logic for this service method.
	// Add api_access_features_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateAccessFeature method not implemented")
}
