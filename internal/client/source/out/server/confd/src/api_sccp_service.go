/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

import (
	"context"
	"errors"
	"net/http"
)

// SccpAPIService is a service that implements the logic for the SccpAPIServicer
// This service should implement the business logic for every endpoint for the SccpAPI API.
// Include any external packages or services that will be required by this service.
type SccpAPIService struct {
}

// NewSccpAPIService creates a default api service
func NewSccpAPIService() SccpAPIServicer {
	return &SccpAPIService{}
}

// AssociateLineEndpointSccp - Associate line and SCCP endpoint
func (s *SccpAPIService) AssociateLineEndpointSccp(ctx context.Context, lineId int32, sccpId int32) (ImplResponse, error) {
	// TODO - update AssociateLineEndpointSccp with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssociateLineEndpointSccp method not implemented")
}

// CreateEndpointSccp - Create SCCP endpoint
func (s *SccpAPIService) CreateEndpointSccp(ctx context.Context, accentTenant string, body EndpointSccp) (ImplResponse, error) {
	// TODO - update CreateEndpointSccp with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, EndpointSccp{}) or use other options such as http.Ok ...
	// return Response(201, EndpointSccp{}), nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateEndpointSccp method not implemented")
}

// DeleteEndpointSccp - Delete SCCP Endpoint
func (s *SccpAPIService) DeleteEndpointSccp(ctx context.Context, sccpId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update DeleteEndpointSccp with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteEndpointSccp method not implemented")
}

// DissociateLineEndpointSccp - Dissociate line and SCCP endpoint
func (s *SccpAPIService) DissociateLineEndpointSccp(ctx context.Context, lineId int32, sccpId int32) (ImplResponse, error) {
	// TODO - update DissociateLineEndpointSccp with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DissociateLineEndpointSccp method not implemented")
}

// GetEndpointSccp - Get SCCP Endpoint
func (s *SccpAPIService) GetEndpointSccp(ctx context.Context, sccpId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update GetEndpointSccp with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EndpointSccp{}) or use other options such as http.Ok ...
	// return Response(200, EndpointSccp{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEndpointSccp method not implemented")
}

// ListAsteriskSccpGeneral - List SCCP general options
func (s *SccpAPIService) ListAsteriskSccpGeneral(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListAsteriskSccpGeneral with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, SccpGeneral{}) or use other options such as http.Ok ...
	// return Response(200, SccpGeneral{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListAsteriskSccpGeneral method not implemented")
}

// ListEndpointsSccp - List SCCP endpoints
func (s *SccpAPIService) ListEndpointsSccp(ctx context.Context, accentTenant string, recurse bool, order string, direction string, limit int32, offset int32, search string) (ImplResponse, error) {
	// TODO - update ListEndpointsSccp with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, EndpointSccpItems{}) or use other options such as http.Ok ...
	// return Response(200, EndpointSccpItems{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListEndpointsSccp method not implemented")
}

// UpdateAsteriskSccpGeneral - Update SCCP general option
func (s *SccpAPIService) UpdateAsteriskSccpGeneral(ctx context.Context, body SccpGeneral) (ImplResponse, error) {
	// TODO - update UpdateAsteriskSccpGeneral with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateAsteriskSccpGeneral method not implemented")
}

// UpdateEndpointSccp - Update SCCP Endpoint
func (s *SccpAPIService) UpdateEndpointSccp(ctx context.Context, sccpId int32, body EndpointSccp, accentTenant string) (ImplResponse, error) {
	// TODO - update UpdateEndpointSccp with the required logic for this service method.
	// Add api_sccp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateEndpointSccp method not implemented")
}
