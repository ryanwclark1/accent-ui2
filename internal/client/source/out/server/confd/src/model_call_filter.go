/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

type CallFilter struct {
	Recipients CallFilterRecipientUsers `json:"recipients,omitempty"`

	Surrogates CallFilterSurrogateUsers `json:"surrogates,omitempty"`

	// How the caller_id_name will be treated
	CallerIdMode string `json:"caller_id_mode,omitempty"`

	// Name to display
	CallerIdName string `json:"caller_id_name,omitempty"`

	// Additional information about the call filter
	Description string `json:"description,omitempty"`

	// Disable or enable the call filter
	Enabled bool `json:"enabled,omitempty"`

	// The id of the call filter
	Id int32 `json:"id,omitempty"`

	// The name of the call filter
	Name string `json:"name"`

	// Call type to apply call filter
	Source string `json:"source"`

	// Determine which will ring.
	Strategy string `json:"strategy"`

	// Number of seconds the filter's surrogates will ring before falling back
	SurrogatesTimeout int32 `json:"surrogates_timeout,omitempty"`

	// The UUID of the tenant
	TenantUuid string `json:"tenant_uuid,omitempty"`
}

// AssertCallFilterRequired checks if the required fields are not zero-ed
func AssertCallFilterRequired(obj CallFilter) error {
	elements := map[string]interface{}{
		"name":     obj.Name,
		"source":   obj.Source,
		"strategy": obj.Strategy,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertCallFilterRecipientUsersRequired(obj.Recipients); err != nil {
		return err
	}
	if err := AssertCallFilterSurrogateUsersRequired(obj.Surrogates); err != nil {
		return err
	}
	return nil
}

// AssertCallFilterConstraints checks if the values respects the defined constraints
func AssertCallFilterConstraints(obj CallFilter) error {
	return nil
}
