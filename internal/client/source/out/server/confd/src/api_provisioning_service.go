/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

import (
	"context"
	"errors"
	"net/http"
)

// ProvisioningAPIService is a service that implements the logic for the ProvisioningAPIServicer
// This service should implement the business logic for every endpoint for the ProvisioningAPI API.
// Include any external packages or services that will be required by this service.
type ProvisioningAPIService struct {
}

// NewProvisioningAPIService creates a default api service
func NewProvisioningAPIService() ProvisioningAPIServicer {
	return &ProvisioningAPIService{}
}

// GetProvisioningNetworking - Get Provisioning Networking configuration
func (s *ProvisioningAPIService) GetProvisioningNetworking(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetProvisioningNetworking with the required logic for this service method.
	// Add api_provisioning_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ProvisioningNetworking{}) or use other options such as http.Ok ...
	// return Response(200, ProvisioningNetworking{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetProvisioningNetworking method not implemented")
}

// UpdateProvisioningNetworking - Update Provisioning Networking configuration
func (s *ProvisioningAPIService) UpdateProvisioningNetworking(ctx context.Context, body ProvisioningNetworking) (ImplResponse, error) {
	// TODO - update UpdateProvisioningNetworking with the required logic for this service method.
	// Add api_provisioning_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateProvisioningNetworking method not implemented")
}
