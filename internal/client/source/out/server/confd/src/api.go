/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

import (
	"context"
	"net/http"
)



// AccessFeaturesAPIRouter defines the required methods for binding the api requests to a responses for the AccessFeaturesAPI
// The AccessFeaturesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AccessFeaturesAPIServicer to perform the required actions, then write the service results to the http response.
type AccessFeaturesAPIRouter interface { 
	CreateAccessFeature(http.ResponseWriter, *http.Request)
	DeleteAccessFeature(http.ResponseWriter, *http.Request)
	GetAccessFeature(http.ResponseWriter, *http.Request)
	ListAccessFeatures(http.ResponseWriter, *http.Request)
	UpdateAccessFeature(http.ResponseWriter, *http.Request)
}
// AgentsAPIRouter defines the required methods for binding the api requests to a responses for the AgentsAPI
// The AgentsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AgentsAPIServicer to perform the required actions, then write the service results to the http response.
type AgentsAPIRouter interface { 
	AssociateAgentSkill(http.ResponseWriter, *http.Request)
	AssociateUserAgent(http.ResponseWriter, *http.Request)
	CreateAgent(http.ResponseWriter, *http.Request)
	CreateSkill(http.ResponseWriter, *http.Request)
	DeleteAgent(http.ResponseWriter, *http.Request)
	DissociateAgentQueue(http.ResponseWriter, *http.Request)
	DissociateAgentSkill(http.ResponseWriter, *http.Request)
	DissociateUserAgent(http.ResponseWriter, *http.Request)
	GetAgent(http.ResponseWriter, *http.Request)
	GetSkill(http.ResponseWriter, *http.Request)
	ListAgents(http.ResponseWriter, *http.Request)
	ListSkills(http.ResponseWriter, *http.Request)
	UpdateAgent(http.ResponseWriter, *http.Request)
	UpdateAgentQueueAssociation(http.ResponseWriter, *http.Request)
}
// ApplicationsAPIRouter defines the required methods for binding the api requests to a responses for the ApplicationsAPI
// The ApplicationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ApplicationsAPIServicer to perform the required actions, then write the service results to the http response.
type ApplicationsAPIRouter interface { 
	AssociateLineApplication(http.ResponseWriter, *http.Request)
	CreateApplication(http.ResponseWriter, *http.Request)
	DeleteApplication(http.ResponseWriter, *http.Request)
	DissociateLineApplication(http.ResponseWriter, *http.Request)
	GetApplication(http.ResponseWriter, *http.Request)
	ListApplications(http.ResponseWriter, *http.Request)
	UpdateApplication(http.ResponseWriter, *http.Request)
}
// AsteriskAPIRouter defines the required methods for binding the api requests to a responses for the AsteriskAPI
// The AsteriskAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AsteriskAPIServicer to perform the required actions, then write the service results to the http response.
type AsteriskAPIRouter interface { 
	ListAsteriskConfbridgeAccentDefaultBridge(http.ResponseWriter, *http.Request)
	ListAsteriskConfbridgeAccentDefaultUser(http.ResponseWriter, *http.Request)
	ListAsteriskFeaturesApplicationmap(http.ResponseWriter, *http.Request)
	ListAsteriskFeaturesFeaturemap(http.ResponseWriter, *http.Request)
	ListAsteriskFeaturesGeneral(http.ResponseWriter, *http.Request)
	ListAsteriskHepGeneral(http.ResponseWriter, *http.Request)
	ListAsteriskIaxCallnumberlimits(http.ResponseWriter, *http.Request)
	ListAsteriskIaxGeneral(http.ResponseWriter, *http.Request)
	ListAsteriskPjsipGlobal(http.ResponseWriter, *http.Request)
	ListAsteriskPjsipSystem(http.ResponseWriter, *http.Request)
	ListAsteriskQueueGeneral(http.ResponseWriter, *http.Request)
	ListAsteriskRtpGeneral(http.ResponseWriter, *http.Request)
	ListAsteriskRtpIceHostCandidates(http.ResponseWriter, *http.Request)
	ListAsteriskSccpGeneral(http.ResponseWriter, *http.Request)
	ListAsteriskVoicemailGeneral(http.ResponseWriter, *http.Request)
	ListAsteriskVoicemailZonemessages(http.ResponseWriter, *http.Request)
	ShowPjsipDoc(http.ResponseWriter, *http.Request)
	UpdateAsteriskConfbridgeAccentDefaultBridge(http.ResponseWriter, *http.Request)
	UpdateAsteriskConfbridgeAccentDefaultUser(http.ResponseWriter, *http.Request)
	UpdateAsteriskFeaturesApplicationmap(http.ResponseWriter, *http.Request)
	UpdateAsteriskFeaturesFeaturemap(http.ResponseWriter, *http.Request)
	UpdateAsteriskFeaturesGeneral(http.ResponseWriter, *http.Request)
	UpdateAsteriskHepGeneral(http.ResponseWriter, *http.Request)
	UpdateAsteriskIaxCallnumberlimits(http.ResponseWriter, *http.Request)
	UpdateAsteriskIaxGeneral(http.ResponseWriter, *http.Request)
	UpdateAsteriskPjsipGlobal(http.ResponseWriter, *http.Request)
	UpdateAsteriskPjsipSystem(http.ResponseWriter, *http.Request)
	UpdateAsteriskQueueGeneral(http.ResponseWriter, *http.Request)
	UpdateAsteriskRtpGeneral(http.ResponseWriter, *http.Request)
	UpdateAsteriskRtpIceHostCandidates(http.ResponseWriter, *http.Request)
	UpdateAsteriskSccpGeneral(http.ResponseWriter, *http.Request)
	UpdateAsteriskVoicemailGeneral(http.ResponseWriter, *http.Request)
	UpdateAsteriskVoicemailZonemessages(http.ResponseWriter, *http.Request)
}
// CallfiltersAPIRouter defines the required methods for binding the api requests to a responses for the CallfiltersAPI
// The CallfiltersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CallfiltersAPIServicer to perform the required actions, then write the service results to the http response.
type CallfiltersAPIRouter interface { 
	CreateCallfilter(http.ResponseWriter, *http.Request)
	DeleteCallfilter(http.ResponseWriter, *http.Request)
	GetCallFilterFallback(http.ResponseWriter, *http.Request)
	GetCallfilter(http.ResponseWriter, *http.Request)
	ListCallFilters(http.ResponseWriter, *http.Request)
	UpdateCallFilterCallerUsers(http.ResponseWriter, *http.Request)
	UpdateCallFilterFallback(http.ResponseWriter, *http.Request)
	UpdateCallFilterMemberUsers(http.ResponseWriter, *http.Request)
	UpdateCallfilter(http.ResponseWriter, *http.Request)
}
// CallpermissionsAPIRouter defines the required methods for binding the api requests to a responses for the CallpermissionsAPI
// The CallpermissionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CallpermissionsAPIServicer to perform the required actions, then write the service results to the http response.
type CallpermissionsAPIRouter interface { 
	AssociateGroupCallpermission(http.ResponseWriter, *http.Request)
	AssociateOutcallCallpermission(http.ResponseWriter, *http.Request)
	AssociateUserCallpermission(http.ResponseWriter, *http.Request)
	CreateCallpermission(http.ResponseWriter, *http.Request)
	DeleteCallpermission(http.ResponseWriter, *http.Request)
	DissociateGroupCallpermission(http.ResponseWriter, *http.Request)
	DissociateOutcallCallpermission(http.ResponseWriter, *http.Request)
	DissociateUserCallpermission(http.ResponseWriter, *http.Request)
	GetCallpermission(http.ResponseWriter, *http.Request)
	ListCallpermissions(http.ResponseWriter, *http.Request)
	UpdateCallpermission(http.ResponseWriter, *http.Request)
}
// CallpickupsAPIRouter defines the required methods for binding the api requests to a responses for the CallpickupsAPI
// The CallpickupsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CallpickupsAPIServicer to perform the required actions, then write the service results to the http response.
type CallpickupsAPIRouter interface { 
	CreateCallpickup(http.ResponseWriter, *http.Request)
	DeleteCallpickup(http.ResponseWriter, *http.Request)
	GetCallpickup(http.ResponseWriter, *http.Request)
	ListCallPickups(http.ResponseWriter, *http.Request)
	UpdateCallPickupInterceptorGroups(http.ResponseWriter, *http.Request)
	UpdateCallPickupInterceptorUsers(http.ResponseWriter, *http.Request)
	UpdateCallPickupTargetGroups(http.ResponseWriter, *http.Request)
	UpdateCallPickupTargetUsers(http.ResponseWriter, *http.Request)
	UpdateCallpickup(http.ResponseWriter, *http.Request)
}
// ConferencesAPIRouter defines the required methods for binding the api requests to a responses for the ConferencesAPI
// The ConferencesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ConferencesAPIServicer to perform the required actions, then write the service results to the http response.
type ConferencesAPIRouter interface { 
	AssociateConferenceExtension(http.ResponseWriter, *http.Request)
	CreateConference(http.ResponseWriter, *http.Request)
	DeleteConference(http.ResponseWriter, *http.Request)
	DissociateConferenceExtension(http.ResponseWriter, *http.Request)
	GetConference(http.ResponseWriter, *http.Request)
	ListAsteriskConfbridgeAccentDefaultBridge(http.ResponseWriter, *http.Request)
	ListAsteriskConfbridgeAccentDefaultUser(http.ResponseWriter, *http.Request)
	ListConferences(http.ResponseWriter, *http.Request)
	UpdateAsteriskConfbridgeAccentDefaultBridge(http.ResponseWriter, *http.Request)
	UpdateAsteriskConfbridgeAccentDefaultUser(http.ResponseWriter, *http.Request)
	UpdateConference(http.ResponseWriter, *http.Request)
}
// ConfigurationAPIRouter defines the required methods for binding the api requests to a responses for the ConfigurationAPI
// The ConfigurationAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ConfigurationAPIServicer to perform the required actions, then write the service results to the http response.
type ConfigurationAPIRouter interface { 
	GetConfiguration(http.ResponseWriter, *http.Request)
	UpdateConfiguration(http.ResponseWriter, *http.Request)
}
// ContextsAPIRouter defines the required methods for binding the api requests to a responses for the ContextsAPI
// The ContextsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ContextsAPIServicer to perform the required actions, then write the service results to the http response.
type ContextsAPIRouter interface { 
	AssociateContextContexts(http.ResponseWriter, *http.Request)
	CreateContext(http.ResponseWriter, *http.Request)
	DeleteContext(http.ResponseWriter, *http.Request)
	GetContext(http.ResponseWriter, *http.Request)
	ListContexts(http.ResponseWriter, *http.Request)
	ListContextsRange(http.ResponseWriter, *http.Request)
	UpdateContext(http.ResponseWriter, *http.Request)
}
// CustomAPIRouter defines the required methods for binding the api requests to a responses for the CustomAPI
// The CustomAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CustomAPIServicer to perform the required actions, then write the service results to the http response.
type CustomAPIRouter interface { 
	AssociateLineEndpointCustom(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointCustom(http.ResponseWriter, *http.Request)
	CreateEndpointCustom(http.ResponseWriter, *http.Request)
	DeleteEndpointCustom(http.ResponseWriter, *http.Request)
	DissociateLineEndpointCustom(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointCustom(http.ResponseWriter, *http.Request)
	GetEndpointCustom(http.ResponseWriter, *http.Request)
	ListEndpointsCustom(http.ResponseWriter, *http.Request)
	UpdateEndpointCustom(http.ResponseWriter, *http.Request)
}
// DevicesAPIRouter defines the required methods for binding the api requests to a responses for the DevicesAPI
// The DevicesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DevicesAPIServicer to perform the required actions, then write the service results to the http response.
type DevicesAPIRouter interface { 
	AssignUnallocatedDeviceTenant(http.ResponseWriter, *http.Request)
	AssociateLineDevice(http.ResponseWriter, *http.Request)
	CreateDevice(http.ResponseWriter, *http.Request)
	DeleteDevice(http.ResponseWriter, *http.Request)
	DissociateLineDevice(http.ResponseWriter, *http.Request)
	GetDevice(http.ResponseWriter, *http.Request)
	GetDeviceLineAssociation(http.ResponseWriter, *http.Request)
	GetLineDevice(http.ResponseWriter, *http.Request)
	ListDevices(http.ResponseWriter, *http.Request)
	ListUnallocatedDevices(http.ResponseWriter, *http.Request)
	ResetDeviceAutoprov(http.ResponseWriter, *http.Request)
	SynchronizeDevice(http.ResponseWriter, *http.Request)
	UpdateDevice(http.ResponseWriter, *http.Request)
}
// DhcpAPIRouter defines the required methods for binding the api requests to a responses for the DhcpAPI
// The DhcpAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DhcpAPIServicer to perform the required actions, then write the service results to the http response.
type DhcpAPIRouter interface { 
	GetDhcp(http.ResponseWriter, *http.Request)
	UpdateDhcp(http.ResponseWriter, *http.Request)
}
// EmailsAPIRouter defines the required methods for binding the api requests to a responses for the EmailsAPI
// The EmailsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a EmailsAPIServicer to perform the required actions, then write the service results to the http response.
type EmailsAPIRouter interface { 
	GetEmailsConfig(http.ResponseWriter, *http.Request)
	UpdateEmailsConfig(http.ResponseWriter, *http.Request)
}
// EndpointsAPIRouter defines the required methods for binding the api requests to a responses for the EndpointsAPI
// The EndpointsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a EndpointsAPIServicer to perform the required actions, then write the service results to the http response.
type EndpointsAPIRouter interface { 
	AssociateLineEndpointCustom(http.ResponseWriter, *http.Request)
	AssociateLineEndpointSccp(http.ResponseWriter, *http.Request)
	AssociateLineEndpointSip(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointCustom(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointIax(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointSip(http.ResponseWriter, *http.Request)
	CreateEndpointCustom(http.ResponseWriter, *http.Request)
	CreateEndpointIax(http.ResponseWriter, *http.Request)
	CreateEndpointSccp(http.ResponseWriter, *http.Request)
	CreateEndpointSip(http.ResponseWriter, *http.Request)
	CreateEndpointSipTemplate(http.ResponseWriter, *http.Request)
	DeleteEndpointCustom(http.ResponseWriter, *http.Request)
	DeleteEndpointIax(http.ResponseWriter, *http.Request)
	DeleteEndpointSccp(http.ResponseWriter, *http.Request)
	DeleteEndpointSip(http.ResponseWriter, *http.Request)
	DeleteEndpointSipTemplate(http.ResponseWriter, *http.Request)
	DissociateLineEndpointCustom(http.ResponseWriter, *http.Request)
	DissociateLineEndpointSccp(http.ResponseWriter, *http.Request)
	DissociateLineEndpointSip(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointCustom(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointIax(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointSip(http.ResponseWriter, *http.Request)
	GetEndpointCustom(http.ResponseWriter, *http.Request)
	GetEndpointIax(http.ResponseWriter, *http.Request)
	GetEndpointSccp(http.ResponseWriter, *http.Request)
	GetEndpointSip(http.ResponseWriter, *http.Request)
	GetEndpointSipTemplate(http.ResponseWriter, *http.Request)
	GetUserLineAssociatedEndpointsSip(http.ResponseWriter, *http.Request)
	GetUserLineMainAssociatedEndpointsSip(http.ResponseWriter, *http.Request)
	ListEndpointsCustom(http.ResponseWriter, *http.Request)
	ListEndpointsIax(http.ResponseWriter, *http.Request)
	ListEndpointsSccp(http.ResponseWriter, *http.Request)
	ListEndpointsSip(http.ResponseWriter, *http.Request)
	ListEndpointsSipTemplates(http.ResponseWriter, *http.Request)
	UpdateEndpointCustom(http.ResponseWriter, *http.Request)
	UpdateEndpointIax(http.ResponseWriter, *http.Request)
	UpdateEndpointSccp(http.ResponseWriter, *http.Request)
	UpdateEndpointSip(http.ResponseWriter, *http.Request)
	UpdateEndpointSipTemplate(http.ResponseWriter, *http.Request)
}
// ExtensionsAPIRouter defines the required methods for binding the api requests to a responses for the ExtensionsAPI
// The ExtensionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ExtensionsAPIServicer to perform the required actions, then write the service results to the http response.
type ExtensionsAPIRouter interface { 
	AssociateConferenceExtension(http.ResponseWriter, *http.Request)
	AssociateGroupExtension(http.ResponseWriter, *http.Request)
	AssociateIncallExtension(http.ResponseWriter, *http.Request)
	AssociateLineExtension(http.ResponseWriter, *http.Request)
	AssociateOutcallExtension(http.ResponseWriter, *http.Request)
	AssociateParkingLotExtension(http.ResponseWriter, *http.Request)
	AssociateQueueExtension(http.ResponseWriter, *http.Request)
	CreateExtension(http.ResponseWriter, *http.Request)
	CreateLineExtension(http.ResponseWriter, *http.Request)
	DeleteExtension(http.ResponseWriter, *http.Request)
	DissociateConferenceExtension(http.ResponseWriter, *http.Request)
	DissociateGroupExtension(http.ResponseWriter, *http.Request)
	DissociateIncallExtension(http.ResponseWriter, *http.Request)
	DissociateLineExtension(http.ResponseWriter, *http.Request)
	DissociateOutcallExtension(http.ResponseWriter, *http.Request)
	DissociateParkingLotExtension(http.ResponseWriter, *http.Request)
	DissociateQueueExtension(http.ResponseWriter, *http.Request)
	GetExtension(http.ResponseWriter, *http.Request)
	GetExtensionFeature(http.ResponseWriter, *http.Request)
	ListExtensions(http.ResponseWriter, *http.Request)
	ListExtensionsFeatures(http.ResponseWriter, *http.Request)
	UpdateExtension(http.ResponseWriter, *http.Request)
	UpdateExtensionFeature(http.ResponseWriter, *http.Request)
}
// ExternalAppsAPIRouter defines the required methods for binding the api requests to a responses for the ExternalAppsAPI
// The ExternalAppsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ExternalAppsAPIServicer to perform the required actions, then write the service results to the http response.
type ExternalAppsAPIRouter interface { 
	CreateExternalApp(http.ResponseWriter, *http.Request)
	CreateUserExternalApp(http.ResponseWriter, *http.Request)
	DeleteExternalApp(http.ResponseWriter, *http.Request)
	DeleteUserExternalApp(http.ResponseWriter, *http.Request)
	GetExternalApp(http.ResponseWriter, *http.Request)
	GetUserExternalApp(http.ResponseWriter, *http.Request)
	ListExternalApps(http.ResponseWriter, *http.Request)
	ListUserExternalApps(http.ResponseWriter, *http.Request)
	UpdateExternalApp(http.ResponseWriter, *http.Request)
	UpdateUserExternalApp(http.ResponseWriter, *http.Request)
}
// ForwardsAPIRouter defines the required methods for binding the api requests to a responses for the ForwardsAPI
// The ForwardsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ForwardsAPIServicer to perform the required actions, then write the service results to the http response.
type ForwardsAPIRouter interface { 
	GetUserForward(http.ResponseWriter, *http.Request)
	ListUserForwards(http.ResponseWriter, *http.Request)
	UpdateUserForward(http.ResponseWriter, *http.Request)
	UpdateUserForwards(http.ResponseWriter, *http.Request)
}
// FunckeysAPIRouter defines the required methods for binding the api requests to a responses for the FunckeysAPI
// The FunckeysAPIRouter implementation should parse necessary information from the http request,
// pass the data to a FunckeysAPIServicer to perform the required actions, then write the service results to the http response.
type FunckeysAPIRouter interface { 
	AssociateUserFuncKeyTemplate(http.ResponseWriter, *http.Request)
	CreateFuncKeyTemplate(http.ResponseWriter, *http.Request)
	DeleteFuncKey(http.ResponseWriter, *http.Request)
	DeleteFuncKeyTemplate(http.ResponseWriter, *http.Request)
	DeleteUserFuncKey(http.ResponseWriter, *http.Request)
	DissociateUserFuncKeyTemplate(http.ResponseWriter, *http.Request)
	GetFuncKey(http.ResponseWriter, *http.Request)
	GetFuncKeyTemplate(http.ResponseWriter, *http.Request)
	GetUserFuncKey(http.ResponseWriter, *http.Request)
	ListFuncKeyDestinations(http.ResponseWriter, *http.Request)
	ListFuncKeyTemplate(http.ResponseWriter, *http.Request)
	ListFuncKeyTemplateUserAssociations(http.ResponseWriter, *http.Request)
	ListUserFuncKeyTemplateAssociations(http.ResponseWriter, *http.Request)
	ListUserFuncKeys(http.ResponseWriter, *http.Request)
	UpdateFuncKey(http.ResponseWriter, *http.Request)
	UpdateFuncKeyTemplate(http.ResponseWriter, *http.Request)
	UpdateUserFuncKey(http.ResponseWriter, *http.Request)
	UpdateUserFuncKeys(http.ResponseWriter, *http.Request)
}
// GroupsAPIRouter defines the required methods for binding the api requests to a responses for the GroupsAPI
// The GroupsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GroupsAPIServicer to perform the required actions, then write the service results to the http response.
type GroupsAPIRouter interface { 
	AssociateGroupCallpermission(http.ResponseWriter, *http.Request)
	AssociateGroupExtension(http.ResponseWriter, *http.Request)
	AssociateGroupSchedule(http.ResponseWriter, *http.Request)
	CreateGroup(http.ResponseWriter, *http.Request)
	DeleteGroup(http.ResponseWriter, *http.Request)
	DissociateGroupCallpermission(http.ResponseWriter, *http.Request)
	DissociateGroupExtension(http.ResponseWriter, *http.Request)
	DissociateGroupSchedule(http.ResponseWriter, *http.Request)
	GetGroup(http.ResponseWriter, *http.Request)
	GetGroupFallback(http.ResponseWriter, *http.Request)
	ListGroups(http.ResponseWriter, *http.Request)
	UpdateCallPickupInterceptorGroups(http.ResponseWriter, *http.Request)
	UpdateCallPickupTargetGroups(http.ResponseWriter, *http.Request)
	UpdateGroup(http.ResponseWriter, *http.Request)
	UpdateGroupFallback(http.ResponseWriter, *http.Request)
	UpdateGroupMemberExtensions(http.ResponseWriter, *http.Request)
	UpdateGroupMemberUsers(http.ResponseWriter, *http.Request)
	UpdateUserGroups(http.ResponseWriter, *http.Request)
}
// GuestsAPIRouter defines the required methods for binding the api requests to a responses for the GuestsAPI
// The GuestsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a GuestsAPIServicer to perform the required actions, then write the service results to the http response.
type GuestsAPIRouter interface { 
	CreateGuestMeetingAuthorization(http.ResponseWriter, *http.Request)
	DeleteUserMeetingAuthorization(http.ResponseWriter, *http.Request)
	GetGuestMeeting(http.ResponseWriter, *http.Request)
	GetGuestMeetingAuthorization(http.ResponseWriter, *http.Request)
	GetUserMeetingAuthorization(http.ResponseWriter, *http.Request)
}
// HaAPIRouter defines the required methods for binding the api requests to a responses for the HaAPI
// The HaAPIRouter implementation should parse necessary information from the http request,
// pass the data to a HaAPIServicer to perform the required actions, then write the service results to the http response.
type HaAPIRouter interface { 
	GetHa(http.ResponseWriter, *http.Request)
	UpdateHa(http.ResponseWriter, *http.Request)
}
// IaxAPIRouter defines the required methods for binding the api requests to a responses for the IaxAPI
// The IaxAPIRouter implementation should parse necessary information from the http request,
// pass the data to a IaxAPIServicer to perform the required actions, then write the service results to the http response.
type IaxAPIRouter interface { 
	AssociateTrunkEndpointIax(http.ResponseWriter, *http.Request)
	AssociateTrunkRegisterIax(http.ResponseWriter, *http.Request)
	CreateEndpointIax(http.ResponseWriter, *http.Request)
	CreateRegisterIax(http.ResponseWriter, *http.Request)
	DeleteEndpointIax(http.ResponseWriter, *http.Request)
	DeleteRegisterIax(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointIax(http.ResponseWriter, *http.Request)
	DissociateTrunkRegisterIax(http.ResponseWriter, *http.Request)
	GetEndpointIax(http.ResponseWriter, *http.Request)
	GetRegisterIax(http.ResponseWriter, *http.Request)
	ListAsteriskIaxCallnumberlimits(http.ResponseWriter, *http.Request)
	ListEndpointsIax(http.ResponseWriter, *http.Request)
	ListRegistersIax(http.ResponseWriter, *http.Request)
	UpdateAsteriskIaxCallnumberlimits(http.ResponseWriter, *http.Request)
	UpdateEndpointIax(http.ResponseWriter, *http.Request)
	UpdateRegisterIax(http.ResponseWriter, *http.Request)
}
// IncallsAPIRouter defines the required methods for binding the api requests to a responses for the IncallsAPI
// The IncallsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a IncallsAPIServicer to perform the required actions, then write the service results to the http response.
type IncallsAPIRouter interface { 
	AssociateIncallExtension(http.ResponseWriter, *http.Request)
	AssociateIncallSchedule(http.ResponseWriter, *http.Request)
	CreateIncall(http.ResponseWriter, *http.Request)
	DeleteIncall(http.ResponseWriter, *http.Request)
	DissociateIncallExtension(http.ResponseWriter, *http.Request)
	DissociateIncallSchedule(http.ResponseWriter, *http.Request)
	GetIncall(http.ResponseWriter, *http.Request)
	ListIncalls(http.ResponseWriter, *http.Request)
	UpdateIncall(http.ResponseWriter, *http.Request)
}
// InfosAPIRouter defines the required methods for binding the api requests to a responses for the InfosAPI
// The InfosAPIRouter implementation should parse necessary information from the http request,
// pass the data to a InfosAPIServicer to perform the required actions, then write the service results to the http response.
type InfosAPIRouter interface { 
	GetInfos(http.ResponseWriter, *http.Request)
}
// IngressesAPIRouter defines the required methods for binding the api requests to a responses for the IngressesAPI
// The IngressesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a IngressesAPIServicer to perform the required actions, then write the service results to the http response.
type IngressesAPIRouter interface { 
	CreateHttpIngress(http.ResponseWriter, *http.Request)
	DeleteHttpIngress(http.ResponseWriter, *http.Request)
	GetHttpIngress(http.ResponseWriter, *http.Request)
	ListHttpIngresses(http.ResponseWriter, *http.Request)
	UpdateHttpIngress(http.ResponseWriter, *http.Request)
}
// IvrAPIRouter defines the required methods for binding the api requests to a responses for the IvrAPI
// The IvrAPIRouter implementation should parse necessary information from the http request,
// pass the data to a IvrAPIServicer to perform the required actions, then write the service results to the http response.
type IvrAPIRouter interface { 
	CreateIvr(http.ResponseWriter, *http.Request)
	DeleteIvr(http.ResponseWriter, *http.Request)
	GetIvr(http.ResponseWriter, *http.Request)
	ListIvr(http.ResponseWriter, *http.Request)
	UpdateIvr(http.ResponseWriter, *http.Request)
}
// LinesAPIRouter defines the required methods for binding the api requests to a responses for the LinesAPI
// The LinesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a LinesAPIServicer to perform the required actions, then write the service results to the http response.
type LinesAPIRouter interface { 
	AssociateLineApplication(http.ResponseWriter, *http.Request)
	AssociateLineDevice(http.ResponseWriter, *http.Request)
	AssociateLineEndpointCustom(http.ResponseWriter, *http.Request)
	AssociateLineEndpointSccp(http.ResponseWriter, *http.Request)
	AssociateLineEndpointSip(http.ResponseWriter, *http.Request)
	AssociateLineExtension(http.ResponseWriter, *http.Request)
	AssociateUserLine(http.ResponseWriter, *http.Request)
	AssociateUserLines(http.ResponseWriter, *http.Request)
	CreateLine(http.ResponseWriter, *http.Request)
	CreateLineExtension(http.ResponseWriter, *http.Request)
	DeleteLine(http.ResponseWriter, *http.Request)
	DissociateLineApplication(http.ResponseWriter, *http.Request)
	DissociateLineDevice(http.ResponseWriter, *http.Request)
	DissociateLineEndpointCustom(http.ResponseWriter, *http.Request)
	DissociateLineEndpointSccp(http.ResponseWriter, *http.Request)
	DissociateLineEndpointSip(http.ResponseWriter, *http.Request)
	DissociateLineExtension(http.ResponseWriter, *http.Request)
	DissociateUserLine(http.ResponseWriter, *http.Request)
	GetDeviceLineAssociation(http.ResponseWriter, *http.Request)
	GetLine(http.ResponseWriter, *http.Request)
	GetLineDevice(http.ResponseWriter, *http.Request)
	GetUserLineAssociatedEndpointsSip(http.ResponseWriter, *http.Request)
	GetUserLineMainAssociatedEndpointsSip(http.ResponseWriter, *http.Request)
	ListLines(http.ResponseWriter, *http.Request)
	UpdateLine(http.ResponseWriter, *http.Request)
}
// MeetingAuthorizationsAPIRouter defines the required methods for binding the api requests to a responses for the MeetingAuthorizationsAPI
// The MeetingAuthorizationsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MeetingAuthorizationsAPIServicer to perform the required actions, then write the service results to the http response.
type MeetingAuthorizationsAPIRouter interface { 
	CreateGuestMeetingAuthorization(http.ResponseWriter, *http.Request)
	DeleteUserMeetingAuthorization(http.ResponseWriter, *http.Request)
	GetGuestMeetingAuthorization(http.ResponseWriter, *http.Request)
	GetUserMeetingAuthorization(http.ResponseWriter, *http.Request)
	ListUserMeetingAuthorizations(http.ResponseWriter, *http.Request)
	PutUserMeetingAuthorizationAccept(http.ResponseWriter, *http.Request)
	PutUserMeetingAuthorizationReject(http.ResponseWriter, *http.Request)
}
// MeetingsAPIRouter defines the required methods for binding the api requests to a responses for the MeetingsAPI
// The MeetingsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MeetingsAPIServicer to perform the required actions, then write the service results to the http response.
type MeetingsAPIRouter interface { 
	CreateGuestMeetingAuthorization(http.ResponseWriter, *http.Request)
	CreateMeeting(http.ResponseWriter, *http.Request)
	CreateUserMeeting(http.ResponseWriter, *http.Request)
	DeleteMeeting(http.ResponseWriter, *http.Request)
	DeleteUserMeeting(http.ResponseWriter, *http.Request)
	DeleteUserMeetingAuthorization(http.ResponseWriter, *http.Request)
	GetGuestMeeting(http.ResponseWriter, *http.Request)
	GetGuestMeetingAuthorization(http.ResponseWriter, *http.Request)
	GetMeeting(http.ResponseWriter, *http.Request)
	GetUserMeeting(http.ResponseWriter, *http.Request)
	GetUserMeetingAuthorization(http.ResponseWriter, *http.Request)
	ListMeetings(http.ResponseWriter, *http.Request)
	ListUserMeetingAuthorizations(http.ResponseWriter, *http.Request)
	ListUserMeetings(http.ResponseWriter, *http.Request)
	PutUserMeetingAuthorizationAccept(http.ResponseWriter, *http.Request)
	PutUserMeetingAuthorizationReject(http.ResponseWriter, *http.Request)
	UpdateMeeting(http.ResponseWriter, *http.Request)
	UpdateUserMeeting(http.ResponseWriter, *http.Request)
}
// MohAPIRouter defines the required methods for binding the api requests to a responses for the MohAPI
// The MohAPIRouter implementation should parse necessary information from the http request,
// pass the data to a MohAPIServicer to perform the required actions, then write the service results to the http response.
type MohAPIRouter interface { 
	CreateMoh(http.ResponseWriter, *http.Request)
	DeleteMoh(http.ResponseWriter, *http.Request)
	DeleteMohFiles(http.ResponseWriter, *http.Request)
	GetMoh(http.ResponseWriter, *http.Request)
	GetMohFiles(http.ResponseWriter, *http.Request)
	ListMoh(http.ResponseWriter, *http.Request)
	UpdateMoh(http.ResponseWriter, *http.Request)
	UpdateMohFiles(http.ResponseWriter, *http.Request)
}
// OutcallsAPIRouter defines the required methods for binding the api requests to a responses for the OutcallsAPI
// The OutcallsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a OutcallsAPIServicer to perform the required actions, then write the service results to the http response.
type OutcallsAPIRouter interface { 
	AssociateOutcallCallpermission(http.ResponseWriter, *http.Request)
	AssociateOutcallExtension(http.ResponseWriter, *http.Request)
	AssociateOutcallSchedule(http.ResponseWriter, *http.Request)
	AssociateOutcallTrunks(http.ResponseWriter, *http.Request)
	CreateOutcall(http.ResponseWriter, *http.Request)
	DeleteOutcall(http.ResponseWriter, *http.Request)
	DissociateOutcallCallpermission(http.ResponseWriter, *http.Request)
	DissociateOutcallExtension(http.ResponseWriter, *http.Request)
	DissociateOutcallSchedule(http.ResponseWriter, *http.Request)
	GetOutcall(http.ResponseWriter, *http.Request)
	ListOutcalls(http.ResponseWriter, *http.Request)
	UpdateOutcall(http.ResponseWriter, *http.Request)
}
// PagingsAPIRouter defines the required methods for binding the api requests to a responses for the PagingsAPI
// The PagingsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PagingsAPIServicer to perform the required actions, then write the service results to the http response.
type PagingsAPIRouter interface { 
	CreatePaging(http.ResponseWriter, *http.Request)
	DeletePaging(http.ResponseWriter, *http.Request)
	GetPaging(http.ResponseWriter, *http.Request)
	ListPagings(http.ResponseWriter, *http.Request)
	UpdatePaging(http.ResponseWriter, *http.Request)
	UpdatePagingCallerUsers(http.ResponseWriter, *http.Request)
	UpdatePagingMemberUsers(http.ResponseWriter, *http.Request)
}
// ParkingLotsAPIRouter defines the required methods for binding the api requests to a responses for the ParkingLotsAPI
// The ParkingLotsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ParkingLotsAPIServicer to perform the required actions, then write the service results to the http response.
type ParkingLotsAPIRouter interface { 
	AssociateParkingLotExtension(http.ResponseWriter, *http.Request)
	CreateParkingLot(http.ResponseWriter, *http.Request)
	DeleteParkingLot(http.ResponseWriter, *http.Request)
	DissociateParkingLotExtension(http.ResponseWriter, *http.Request)
	GetParkingLot(http.ResponseWriter, *http.Request)
	ListParkingLots(http.ResponseWriter, *http.Request)
	UpdateParkingLot(http.ResponseWriter, *http.Request)
}
// ProvisioningAPIRouter defines the required methods for binding the api requests to a responses for the ProvisioningAPI
// The ProvisioningAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ProvisioningAPIServicer to perform the required actions, then write the service results to the http response.
type ProvisioningAPIRouter interface { 
	GetProvisioningNetworking(http.ResponseWriter, *http.Request)
	UpdateProvisioningNetworking(http.ResponseWriter, *http.Request)
}
// QueuesAPIRouter defines the required methods for binding the api requests to a responses for the QueuesAPI
// The QueuesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a QueuesAPIServicer to perform the required actions, then write the service results to the http response.
type QueuesAPIRouter interface { 
	AssociateQueueExtension(http.ResponseWriter, *http.Request)
	AssociateQueueSchedule(http.ResponseWriter, *http.Request)
	CreateQueue(http.ResponseWriter, *http.Request)
	CreateSkillRule(http.ResponseWriter, *http.Request)
	DeleteQueue(http.ResponseWriter, *http.Request)
	DeleteSkillRule(http.ResponseWriter, *http.Request)
	DissociateAgentQueue(http.ResponseWriter, *http.Request)
	DissociateQueueExtension(http.ResponseWriter, *http.Request)
	DissociateQueueSchedule(http.ResponseWriter, *http.Request)
	DissociateUserQueue(http.ResponseWriter, *http.Request)
	GetQueue(http.ResponseWriter, *http.Request)
	GetQueueFallback(http.ResponseWriter, *http.Request)
	GetSkillRule(http.ResponseWriter, *http.Request)
	ListQueues(http.ResponseWriter, *http.Request)
	ListSkillRules(http.ResponseWriter, *http.Request)
	UpdateAgentQueueAssociation(http.ResponseWriter, *http.Request)
	UpdateQueue(http.ResponseWriter, *http.Request)
	UpdateQueueFallback(http.ResponseWriter, *http.Request)
	UpdateSkillRule(http.ResponseWriter, *http.Request)
	UpdateUserQueueAssociation(http.ResponseWriter, *http.Request)
}
// RegistersAPIRouter defines the required methods for binding the api requests to a responses for the RegistersAPI
// The RegistersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RegistersAPIServicer to perform the required actions, then write the service results to the http response.
type RegistersAPIRouter interface { 
	AssociateTrunkRegisterIax(http.ResponseWriter, *http.Request)
	CreateRegisterIax(http.ResponseWriter, *http.Request)
	DeleteRegisterIax(http.ResponseWriter, *http.Request)
	DissociateTrunkRegisterIax(http.ResponseWriter, *http.Request)
	GetRegisterIax(http.ResponseWriter, *http.Request)
	ListRegistersIax(http.ResponseWriter, *http.Request)
	UpdateRegisterIax(http.ResponseWriter, *http.Request)
}
// RegistrarsAPIRouter defines the required methods for binding the api requests to a responses for the RegistrarsAPI
// The RegistrarsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RegistrarsAPIServicer to perform the required actions, then write the service results to the http response.
type RegistrarsAPIRouter interface { 
	CreateRegistrar(http.ResponseWriter, *http.Request)
	DeleteRegistrar(http.ResponseWriter, *http.Request)
	GetRegistrar(http.ResponseWriter, *http.Request)
	GetRegistrars(http.ResponseWriter, *http.Request)
	UpdateRegistrar(http.ResponseWriter, *http.Request)
}
// SccpAPIRouter defines the required methods for binding the api requests to a responses for the SccpAPI
// The SccpAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SccpAPIServicer to perform the required actions, then write the service results to the http response.
type SccpAPIRouter interface { 
	AssociateLineEndpointSccp(http.ResponseWriter, *http.Request)
	CreateEndpointSccp(http.ResponseWriter, *http.Request)
	DeleteEndpointSccp(http.ResponseWriter, *http.Request)
	DissociateLineEndpointSccp(http.ResponseWriter, *http.Request)
	GetEndpointSccp(http.ResponseWriter, *http.Request)
	ListAsteriskSccpGeneral(http.ResponseWriter, *http.Request)
	ListEndpointsSccp(http.ResponseWriter, *http.Request)
	UpdateAsteriskSccpGeneral(http.ResponseWriter, *http.Request)
	UpdateEndpointSccp(http.ResponseWriter, *http.Request)
}
// SchedulesAPIRouter defines the required methods for binding the api requests to a responses for the SchedulesAPI
// The SchedulesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SchedulesAPIServicer to perform the required actions, then write the service results to the http response.
type SchedulesAPIRouter interface { 
	AssociateGroupSchedule(http.ResponseWriter, *http.Request)
	AssociateIncallSchedule(http.ResponseWriter, *http.Request)
	AssociateOutcallSchedule(http.ResponseWriter, *http.Request)
	AssociateQueueSchedule(http.ResponseWriter, *http.Request)
	AssociateUserSchedule(http.ResponseWriter, *http.Request)
	CreateSchedule(http.ResponseWriter, *http.Request)
	DeleteSchedule(http.ResponseWriter, *http.Request)
	DissociateGroupSchedule(http.ResponseWriter, *http.Request)
	DissociateIncallSchedule(http.ResponseWriter, *http.Request)
	DissociateOutcallSchedule(http.ResponseWriter, *http.Request)
	DissociateQueueSchedule(http.ResponseWriter, *http.Request)
	DissociateUserSchedule(http.ResponseWriter, *http.Request)
	GetSchedule(http.ResponseWriter, *http.Request)
	ListSchedules(http.ResponseWriter, *http.Request)
	UpdateSchedule(http.ResponseWriter, *http.Request)
}
// SipAPIRouter defines the required methods for binding the api requests to a responses for the SipAPI
// The SipAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SipAPIServicer to perform the required actions, then write the service results to the http response.
type SipAPIRouter interface { 
	AssociateLineEndpointSip(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointSip(http.ResponseWriter, *http.Request)
	CreateEndpointSip(http.ResponseWriter, *http.Request)
	CreateEndpointSipTemplate(http.ResponseWriter, *http.Request)
	CreateSipTransport(http.ResponseWriter, *http.Request)
	DeleteEndpointSip(http.ResponseWriter, *http.Request)
	DeleteEndpointSipTemplate(http.ResponseWriter, *http.Request)
	DeleteSipTransport(http.ResponseWriter, *http.Request)
	DissociateLineEndpointSip(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointSip(http.ResponseWriter, *http.Request)
	GetEndpointSip(http.ResponseWriter, *http.Request)
	GetEndpointSipTemplate(http.ResponseWriter, *http.Request)
	GetSipTransport(http.ResponseWriter, *http.Request)
	ListAsteriskPjsipGlobal(http.ResponseWriter, *http.Request)
	ListAsteriskPjsipSystem(http.ResponseWriter, *http.Request)
	ListEndpointsSip(http.ResponseWriter, *http.Request)
	ListEndpointsSipTemplates(http.ResponseWriter, *http.Request)
	ListSipTransports(http.ResponseWriter, *http.Request)
	ShowPjsipDoc(http.ResponseWriter, *http.Request)
	UpdateAsteriskPjsipGlobal(http.ResponseWriter, *http.Request)
	UpdateAsteriskPjsipSystem(http.ResponseWriter, *http.Request)
	UpdateEndpointSip(http.ResponseWriter, *http.Request)
	UpdateEndpointSipTemplate(http.ResponseWriter, *http.Request)
	UpdateSipTransport(http.ResponseWriter, *http.Request)
}
// SkillsAPIRouter defines the required methods for binding the api requests to a responses for the SkillsAPI
// The SkillsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SkillsAPIServicer to perform the required actions, then write the service results to the http response.
type SkillsAPIRouter interface { 
	AssociateAgentSkill(http.ResponseWriter, *http.Request)
	CreateSkill(http.ResponseWriter, *http.Request)
	CreateSkillRule(http.ResponseWriter, *http.Request)
	DeleteSkill(http.ResponseWriter, *http.Request)
	DeleteSkillRule(http.ResponseWriter, *http.Request)
	DissociateAgentSkill(http.ResponseWriter, *http.Request)
	GetSkill(http.ResponseWriter, *http.Request)
	GetSkillRule(http.ResponseWriter, *http.Request)
	ListSkillRules(http.ResponseWriter, *http.Request)
	ListSkills(http.ResponseWriter, *http.Request)
	UpdateSkill(http.ResponseWriter, *http.Request)
	UpdateSkillRule(http.ResponseWriter, *http.Request)
}
// SoundsAPIRouter defines the required methods for binding the api requests to a responses for the SoundsAPI
// The SoundsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SoundsAPIServicer to perform the required actions, then write the service results to the http response.
type SoundsAPIRouter interface { 
	CreateSounds(http.ResponseWriter, *http.Request)
	DeleteSounds(http.ResponseWriter, *http.Request)
	DeleteSoundsFiles(http.ResponseWriter, *http.Request)
	GetSounds(http.ResponseWriter, *http.Request)
	GetSoundsFiles(http.ResponseWriter, *http.Request)
	ListSounds(http.ResponseWriter, *http.Request)
	ListSoundsLanguages(http.ResponseWriter, *http.Request)
	UpdateSoundsFiles(http.ResponseWriter, *http.Request)
}
// StatusAPIRouter defines the required methods for binding the api requests to a responses for the StatusAPI
// The StatusAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StatusAPIServicer to perform the required actions, then write the service results to the http response.
type StatusAPIRouter interface { 
	StatusGet(http.ResponseWriter, *http.Request)
}
// SwitchboardsAPIRouter defines the required methods for binding the api requests to a responses for the SwitchboardsAPI
// The SwitchboardsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a SwitchboardsAPIServicer to perform the required actions, then write the service results to the http response.
type SwitchboardsAPIRouter interface { 
	GetSwitchboardFallback(http.ResponseWriter, *http.Request)
	SwitchboardsGet(http.ResponseWriter, *http.Request)
	SwitchboardsPost(http.ResponseWriter, *http.Request)
	SwitchboardsSwitchboardUuidDelete(http.ResponseWriter, *http.Request)
	SwitchboardsSwitchboardUuidGet(http.ResponseWriter, *http.Request)
	SwitchboardsSwitchboardUuidPut(http.ResponseWriter, *http.Request)
	UpdateSwitchboardFallback(http.ResponseWriter, *http.Request)
	UpdateSwitchboardMemberUsers(http.ResponseWriter, *http.Request)
}
// TenantsAPIRouter defines the required methods for binding the api requests to a responses for the TenantsAPI
// The TenantsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TenantsAPIServicer to perform the required actions, then write the service results to the http response.
type TenantsAPIRouter interface { 
	GetTenant(http.ResponseWriter, *http.Request)
	ListTenants(http.ResponseWriter, *http.Request)
}
// TimezonesAPIRouter defines the required methods for binding the api requests to a responses for the TimezonesAPI
// The TimezonesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TimezonesAPIServicer to perform the required actions, then write the service results to the http response.
type TimezonesAPIRouter interface { 
	ListTimezones(http.ResponseWriter, *http.Request)
}
// TrunksAPIRouter defines the required methods for binding the api requests to a responses for the TrunksAPI
// The TrunksAPIRouter implementation should parse necessary information from the http request,
// pass the data to a TrunksAPIServicer to perform the required actions, then write the service results to the http response.
type TrunksAPIRouter interface { 
	AssociateOutcallTrunks(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointCustom(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointIax(http.ResponseWriter, *http.Request)
	AssociateTrunkEndpointSip(http.ResponseWriter, *http.Request)
	AssociateTrunkRegisterIax(http.ResponseWriter, *http.Request)
	CreateTrunk(http.ResponseWriter, *http.Request)
	DeleteTrunk(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointCustom(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointIax(http.ResponseWriter, *http.Request)
	DissociateTrunkEndpointSip(http.ResponseWriter, *http.Request)
	DissociateTrunkRegisterIax(http.ResponseWriter, *http.Request)
	GetTrunk(http.ResponseWriter, *http.Request)
	ListTrunks(http.ResponseWriter, *http.Request)
	UpdateTrunk(http.ResponseWriter, *http.Request)
}
// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersAPI
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersAPIServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface { 
	AssociateUserAgent(http.ResponseWriter, *http.Request)
	AssociateUserCallpermission(http.ResponseWriter, *http.Request)
	AssociateUserFuncKeyTemplate(http.ResponseWriter, *http.Request)
	AssociateUserLine(http.ResponseWriter, *http.Request)
	AssociateUserLines(http.ResponseWriter, *http.Request)
	AssociateUserSchedule(http.ResponseWriter, *http.Request)
	AssociateUserVoicemail(http.ResponseWriter, *http.Request)
	CreateUser(http.ResponseWriter, *http.Request)
	CreateUserExternalApp(http.ResponseWriter, *http.Request)
	CreateUserMeeting(http.ResponseWriter, *http.Request)
	CreateUserVoicemail(http.ResponseWriter, *http.Request)
	DeleteUser(http.ResponseWriter, *http.Request)
	DeleteUserExternalApp(http.ResponseWriter, *http.Request)
	DeleteUserFuncKey(http.ResponseWriter, *http.Request)
	DeleteUserMeeting(http.ResponseWriter, *http.Request)
	DissociateUserAgent(http.ResponseWriter, *http.Request)
	DissociateUserCallpermission(http.ResponseWriter, *http.Request)
	DissociateUserFuncKeyTemplate(http.ResponseWriter, *http.Request)
	DissociateUserLine(http.ResponseWriter, *http.Request)
	DissociateUserQueue(http.ResponseWriter, *http.Request)
	DissociateUserSchedule(http.ResponseWriter, *http.Request)
	DissociateUserVoicemail(http.ResponseWriter, *http.Request)
	ExportUsersCsv(http.ResponseWriter, *http.Request)
	GetUser(http.ResponseWriter, *http.Request)
	GetUserExternalApp(http.ResponseWriter, *http.Request)
	GetUserFallback(http.ResponseWriter, *http.Request)
	GetUserForward(http.ResponseWriter, *http.Request)
	GetUserFuncKey(http.ResponseWriter, *http.Request)
	GetUserLineAssociatedEndpointsSip(http.ResponseWriter, *http.Request)
	GetUserLineMainAssociatedEndpointsSip(http.ResponseWriter, *http.Request)
	GetUserMeeting(http.ResponseWriter, *http.Request)
	GetUserService(http.ResponseWriter, *http.Request)
	GetUserServices(http.ResponseWriter, *http.Request)
	GetUserVoicemail(http.ResponseWriter, *http.Request)
	GetUsersSubscriptions(http.ResponseWriter, *http.Request)
	HeadUser(http.ResponseWriter, *http.Request)
	ImportUsersCsv(http.ResponseWriter, *http.Request)
	ListFuncKeyTemplateUserAssociations(http.ResponseWriter, *http.Request)
	ListUser(http.ResponseWriter, *http.Request)
	ListUserExternalApps(http.ResponseWriter, *http.Request)
	ListUserForwards(http.ResponseWriter, *http.Request)
	ListUserFuncKeyTemplateAssociations(http.ResponseWriter, *http.Request)
	ListUserFuncKeys(http.ResponseWriter, *http.Request)
	ListUserMeetingAuthorizations(http.ResponseWriter, *http.Request)
	ListUserMeetings(http.ResponseWriter, *http.Request)
	PutUserMeetingAuthorizationAccept(http.ResponseWriter, *http.Request)
	PutUserMeetingAuthorizationReject(http.ResponseWriter, *http.Request)
	UpdateCallFilterCallerUsers(http.ResponseWriter, *http.Request)
	UpdateCallFilterMemberUsers(http.ResponseWriter, *http.Request)
	UpdateCallPickupInterceptorUsers(http.ResponseWriter, *http.Request)
	UpdateCallPickupTargetUsers(http.ResponseWriter, *http.Request)
	UpdateGroupMemberUsers(http.ResponseWriter, *http.Request)
	UpdatePagingCallerUsers(http.ResponseWriter, *http.Request)
	UpdatePagingMemberUsers(http.ResponseWriter, *http.Request)
	UpdateSwitchboardMemberUsers(http.ResponseWriter, *http.Request)
	UpdateUser(http.ResponseWriter, *http.Request)
	UpdateUserExternalApp(http.ResponseWriter, *http.Request)
	UpdateUserFallback(http.ResponseWriter, *http.Request)
	UpdateUserForward(http.ResponseWriter, *http.Request)
	UpdateUserForwards(http.ResponseWriter, *http.Request)
	UpdateUserFuncKey(http.ResponseWriter, *http.Request)
	UpdateUserFuncKeys(http.ResponseWriter, *http.Request)
	UpdateUserGroups(http.ResponseWriter, *http.Request)
	UpdateUserMeeting(http.ResponseWriter, *http.Request)
	UpdateUserQueueAssociation(http.ResponseWriter, *http.Request)
	UpdateUserService(http.ResponseWriter, *http.Request)
	UpdateUserServices(http.ResponseWriter, *http.Request)
	UpdateUsersCsv(http.ResponseWriter, *http.Request)
}
// VoicemailsAPIRouter defines the required methods for binding the api requests to a responses for the VoicemailsAPI
// The VoicemailsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a VoicemailsAPIServicer to perform the required actions, then write the service results to the http response.
type VoicemailsAPIRouter interface { 
	AssociateUserVoicemail(http.ResponseWriter, *http.Request)
	CreateUserVoicemail(http.ResponseWriter, *http.Request)
	CreateVoicemail(http.ResponseWriter, *http.Request)
	DeleteVoicemail(http.ResponseWriter, *http.Request)
	DissociateUserVoicemail(http.ResponseWriter, *http.Request)
	GetUserVoicemail(http.ResponseWriter, *http.Request)
	GetVoicemail(http.ResponseWriter, *http.Request)
	ListAsteriskVoicemailZonemessages(http.ResponseWriter, *http.Request)
	ListVoicemails(http.ResponseWriter, *http.Request)
	UpdateAsteriskVoicemailZonemessages(http.ResponseWriter, *http.Request)
	UpdateVoicemail(http.ResponseWriter, *http.Request)
}
// WizardAPIRouter defines the required methods for binding the api requests to a responses for the WizardAPI
// The WizardAPIRouter implementation should parse necessary information from the http request,
// pass the data to a WizardAPIServicer to perform the required actions, then write the service results to the http response.
type WizardAPIRouter interface { 
	GetWizardDiscover(http.ResponseWriter, *http.Request)
	GetWizardStatus(http.ResponseWriter, *http.Request)
	PassWizard(http.ResponseWriter, *http.Request)
}


// AccessFeaturesAPIServicer defines the api actions for the AccessFeaturesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AccessFeaturesAPIServicer interface { 
	CreateAccessFeature(context.Context, AccessFeature) (ImplResponse, error)
	DeleteAccessFeature(context.Context, int32) (ImplResponse, error)
	GetAccessFeature(context.Context, int32) (ImplResponse, error)
	ListAccessFeatures(context.Context, string, string, int32, int32, string) (ImplResponse, error)
	UpdateAccessFeature(context.Context, int32, AccessFeature) (ImplResponse, error)
}


// AgentsAPIServicer defines the api actions for the AgentsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AgentsAPIServicer interface { 
	AssociateAgentSkill(context.Context, int32, int32, string, AgentSkill) (ImplResponse, error)
	AssociateUserAgent(context.Context, string, int32, string) (ImplResponse, error)
	CreateAgent(context.Context, Agent, string) (ImplResponse, error)
	CreateSkill(context.Context, Skill, string) (ImplResponse, error)
	DeleteAgent(context.Context, int32, string) (ImplResponse, error)
	DissociateAgentQueue(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateAgentSkill(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateUserAgent(context.Context, string, string) (ImplResponse, error)
	GetAgent(context.Context, int32, string) (ImplResponse, error)
	GetSkill(context.Context, int32, string) (ImplResponse, error)
	ListAgents(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListSkills(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateAgent(context.Context, int32, Agent, string) (ImplResponse, error)
	UpdateAgentQueueAssociation(context.Context, int32, int32, string, QueueMemberAgent) (ImplResponse, error)
}


// ApplicationsAPIServicer defines the api actions for the ApplicationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ApplicationsAPIServicer interface { 
	AssociateLineApplication(context.Context, int32, int32, string) (ImplResponse, error)
	CreateApplication(context.Context, Application, string) (ImplResponse, error)
	DeleteApplication(context.Context, int32, string) (ImplResponse, error)
	DissociateLineApplication(context.Context, int32, int32, string) (ImplResponse, error)
	GetApplication(context.Context, int32, string) (ImplResponse, error)
	ListApplications(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateApplication(context.Context, int32, Application, string) (ImplResponse, error)
}


// AsteriskAPIServicer defines the api actions for the AsteriskAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AsteriskAPIServicer interface { 
	ListAsteriskConfbridgeAccentDefaultBridge(context.Context) (ImplResponse, error)
	ListAsteriskConfbridgeAccentDefaultUser(context.Context) (ImplResponse, error)
	ListAsteriskFeaturesApplicationmap(context.Context) (ImplResponse, error)
	ListAsteriskFeaturesFeaturemap(context.Context) (ImplResponse, error)
	ListAsteriskFeaturesGeneral(context.Context) (ImplResponse, error)
	ListAsteriskHepGeneral(context.Context) (ImplResponse, error)
	ListAsteriskIaxCallnumberlimits(context.Context) (ImplResponse, error)
	ListAsteriskIaxGeneral(context.Context) (ImplResponse, error)
	ListAsteriskPjsipGlobal(context.Context) (ImplResponse, error)
	ListAsteriskPjsipSystem(context.Context) (ImplResponse, error)
	ListAsteriskQueueGeneral(context.Context) (ImplResponse, error)
	ListAsteriskRtpGeneral(context.Context) (ImplResponse, error)
	ListAsteriskRtpIceHostCandidates(context.Context) (ImplResponse, error)
	ListAsteriskSccpGeneral(context.Context) (ImplResponse, error)
	ListAsteriskVoicemailGeneral(context.Context) (ImplResponse, error)
	ListAsteriskVoicemailZonemessages(context.Context) (ImplResponse, error)
	ShowPjsipDoc(context.Context) (ImplResponse, error)
	UpdateAsteriskConfbridgeAccentDefaultBridge(context.Context, ConfBridgeConfiguration) (ImplResponse, error)
	UpdateAsteriskConfbridgeAccentDefaultUser(context.Context, ConfBridgeConfiguration) (ImplResponse, error)
	UpdateAsteriskFeaturesApplicationmap(context.Context, FeaturesConfiguration) (ImplResponse, error)
	UpdateAsteriskFeaturesFeaturemap(context.Context, FeaturesConfiguration) (ImplResponse, error)
	UpdateAsteriskFeaturesGeneral(context.Context, FeaturesConfiguration) (ImplResponse, error)
	UpdateAsteriskHepGeneral(context.Context, HepConfiguration) (ImplResponse, error)
	UpdateAsteriskIaxCallnumberlimits(context.Context, IaxCallNumberLimitss) (ImplResponse, error)
	UpdateAsteriskIaxGeneral(context.Context, IaxGeneral) (ImplResponse, error)
	UpdateAsteriskPjsipGlobal(context.Context, PjsipGlobal) (ImplResponse, error)
	UpdateAsteriskPjsipSystem(context.Context, PjsipSystem) (ImplResponse, error)
	UpdateAsteriskQueueGeneral(context.Context, QueueGeneral) (ImplResponse, error)
	UpdateAsteriskRtpGeneral(context.Context, RtpConfiguration) (ImplResponse, error)
	UpdateAsteriskRtpIceHostCandidates(context.Context, RtpConfiguration) (ImplResponse, error)
	UpdateAsteriskSccpGeneral(context.Context, SccpGeneral) (ImplResponse, error)
	UpdateAsteriskVoicemailGeneral(context.Context, VoicemailGeneral) (ImplResponse, error)
	UpdateAsteriskVoicemailZonemessages(context.Context, VoicemailZoneMessages) (ImplResponse, error)
}


// CallfiltersAPIServicer defines the api actions for the CallfiltersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CallfiltersAPIServicer interface { 
	CreateCallfilter(context.Context, CallFilter, string) (ImplResponse, error)
	DeleteCallfilter(context.Context, int32, string) (ImplResponse, error)
	GetCallFilterFallback(context.Context, int32) (ImplResponse, error)
	GetCallfilter(context.Context, int32, string) (ImplResponse, error)
	ListCallFilters(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateCallFilterCallerUsers(context.Context, int32, CallFilterRecipientUsersUuid) (ImplResponse, error)
	UpdateCallFilterFallback(context.Context, int32, CallFilterFallbacks) (ImplResponse, error)
	UpdateCallFilterMemberUsers(context.Context, int32, UsersUuid) (ImplResponse, error)
	UpdateCallfilter(context.Context, int32, CallFilter, string) (ImplResponse, error)
}


// CallpermissionsAPIServicer defines the api actions for the CallpermissionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CallpermissionsAPIServicer interface { 
	AssociateGroupCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	AssociateOutcallCallpermission(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateUserCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	CreateCallpermission(context.Context, CallPermission, string) (ImplResponse, error)
	DeleteCallpermission(context.Context, int32, string) (ImplResponse, error)
	DissociateGroupCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	DissociateOutcallCallpermission(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateUserCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	GetCallpermission(context.Context, int32, string) (ImplResponse, error)
	ListCallpermissions(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateCallpermission(context.Context, int32, CallPermission, string) (ImplResponse, error)
}


// CallpickupsAPIServicer defines the api actions for the CallpickupsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CallpickupsAPIServicer interface { 
	CreateCallpickup(context.Context, CallPickup, string) (ImplResponse, error)
	DeleteCallpickup(context.Context, int32, string) (ImplResponse, error)
	GetCallpickup(context.Context, int32, string) (ImplResponse, error)
	ListCallPickups(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateCallPickupInterceptorGroups(context.Context, int32, GroupsId, string) (ImplResponse, error)
	UpdateCallPickupInterceptorUsers(context.Context, int32, UsersUuid, string) (ImplResponse, error)
	UpdateCallPickupTargetGroups(context.Context, int32, GroupsId, string) (ImplResponse, error)
	UpdateCallPickupTargetUsers(context.Context, int32, UsersUuid, string) (ImplResponse, error)
	UpdateCallpickup(context.Context, int32, CallPickup, string) (ImplResponse, error)
}


// ConferencesAPIServicer defines the api actions for the ConferencesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ConferencesAPIServicer interface { 
	AssociateConferenceExtension(context.Context, int32, int32) (ImplResponse, error)
	CreateConference(context.Context, string, Conference) (ImplResponse, error)
	DeleteConference(context.Context, int32, string) (ImplResponse, error)
	DissociateConferenceExtension(context.Context, int32, int32) (ImplResponse, error)
	GetConference(context.Context, int32, string) (ImplResponse, error)
	ListAsteriskConfbridgeAccentDefaultBridge(context.Context) (ImplResponse, error)
	ListAsteriskConfbridgeAccentDefaultUser(context.Context) (ImplResponse, error)
	ListConferences(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateAsteriskConfbridgeAccentDefaultBridge(context.Context, ConfBridgeConfiguration) (ImplResponse, error)
	UpdateAsteriskConfbridgeAccentDefaultUser(context.Context, ConfBridgeConfiguration) (ImplResponse, error)
	UpdateConference(context.Context, int32, Conference, string) (ImplResponse, error)
}


// ConfigurationAPIServicer defines the api actions for the ConfigurationAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ConfigurationAPIServicer interface { 
	GetConfiguration(context.Context) (ImplResponse, error)
	UpdateConfiguration(context.Context, LiveReload) (ImplResponse, error)
}


// ContextsAPIServicer defines the api actions for the ContextsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ContextsAPIServicer interface { 
	AssociateContextContexts(context.Context, int32, ContextsId) (ImplResponse, error)
	CreateContext(context.Context, Context, string) (ImplResponse, error)
	DeleteContext(context.Context, int32) (ImplResponse, error)
	GetContext(context.Context, int32) (ImplResponse, error)
	ListContexts(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListContextsRange(context.Context, string, int32, string, string, string, int32, int32, string, string) (ImplResponse, error)
	UpdateContext(context.Context, int32, Context) (ImplResponse, error)
}


// CustomAPIServicer defines the api actions for the CustomAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CustomAPIServicer interface { 
	AssociateLineEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	AssociateTrunkEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	CreateEndpointCustom(context.Context, EndpointCustom, string) (ImplResponse, error)
	DeleteEndpointCustom(context.Context, int32, string) (ImplResponse, error)
	DissociateLineEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	DissociateTrunkEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	GetEndpointCustom(context.Context, int32, string) (ImplResponse, error)
	ListEndpointsCustom(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateEndpointCustom(context.Context, int32, EndpointCustom, string) (ImplResponse, error)
}


// DevicesAPIServicer defines the api actions for the DevicesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DevicesAPIServicer interface { 
	AssignUnallocatedDeviceTenant(context.Context, string, string) (ImplResponse, error)
	AssociateLineDevice(context.Context, int32, string, string) (ImplResponse, error)
	CreateDevice(context.Context, string, Device) (ImplResponse, error)
	DeleteDevice(context.Context, string, string) (ImplResponse, error)
	DissociateLineDevice(context.Context, int32, string, string) (ImplResponse, error)
	GetDevice(context.Context, string, string) (ImplResponse, error)
	GetDeviceLineAssociation(context.Context, string, string) (ImplResponse, error)
	GetLineDevice(context.Context, int32, string) (ImplResponse, error)
	ListDevices(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListUnallocatedDevices(context.Context, string, string, int32, int32, string) (ImplResponse, error)
	ResetDeviceAutoprov(context.Context, string, string) (ImplResponse, error)
	SynchronizeDevice(context.Context, string, string) (ImplResponse, error)
	UpdateDevice(context.Context, string, Device, string) (ImplResponse, error)
}


// DhcpAPIServicer defines the api actions for the DhcpAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DhcpAPIServicer interface { 
	GetDhcp(context.Context) (ImplResponse, error)
	UpdateDhcp(context.Context, Dhcp) (ImplResponse, error)
}


// EmailsAPIServicer defines the api actions for the EmailsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EmailsAPIServicer interface { 
	GetEmailsConfig(context.Context) (ImplResponse, error)
	UpdateEmailsConfig(context.Context, EmailConfig) (ImplResponse, error)
}


// EndpointsAPIServicer defines the api actions for the EndpointsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EndpointsAPIServicer interface { 
	AssociateLineEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	AssociateLineEndpointSccp(context.Context, int32, int32) (ImplResponse, error)
	AssociateLineEndpointSip(context.Context, int32, string) (ImplResponse, error)
	AssociateTrunkEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	AssociateTrunkEndpointIax(context.Context, int32, int32) (ImplResponse, error)
	AssociateTrunkEndpointSip(context.Context, int32, string) (ImplResponse, error)
	CreateEndpointCustom(context.Context, EndpointCustom, string) (ImplResponse, error)
	CreateEndpointIax(context.Context, string, EndpointIax) (ImplResponse, error)
	CreateEndpointSccp(context.Context, string, EndpointSccp) (ImplResponse, error)
	CreateEndpointSip(context.Context, string, EndpointSip) (ImplResponse, error)
	CreateEndpointSipTemplate(context.Context, string, EndpointSip) (ImplResponse, error)
	DeleteEndpointCustom(context.Context, int32, string) (ImplResponse, error)
	DeleteEndpointIax(context.Context, int32, string) (ImplResponse, error)
	DeleteEndpointSccp(context.Context, int32, string) (ImplResponse, error)
	DeleteEndpointSip(context.Context, string, string) (ImplResponse, error)
	DeleteEndpointSipTemplate(context.Context, string, string) (ImplResponse, error)
	DissociateLineEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	DissociateLineEndpointSccp(context.Context, int32, int32) (ImplResponse, error)
	DissociateLineEndpointSip(context.Context, int32, string) (ImplResponse, error)
	DissociateTrunkEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	DissociateTrunkEndpointIax(context.Context, int32, int32) (ImplResponse, error)
	DissociateTrunkEndpointSip(context.Context, int32, string) (ImplResponse, error)
	GetEndpointCustom(context.Context, int32, string) (ImplResponse, error)
	GetEndpointIax(context.Context, int32, string) (ImplResponse, error)
	GetEndpointSccp(context.Context, int32, string) (ImplResponse, error)
	GetEndpointSip(context.Context, string, string, string) (ImplResponse, error)
	GetEndpointSipTemplate(context.Context, string, string) (ImplResponse, error)
	GetUserLineAssociatedEndpointsSip(context.Context, string, int32, string) (ImplResponse, error)
	GetUserLineMainAssociatedEndpointsSip(context.Context, string, string) (ImplResponse, error)
	ListEndpointsCustom(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListEndpointsIax(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListEndpointsSccp(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListEndpointsSip(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListEndpointsSipTemplates(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateEndpointCustom(context.Context, int32, EndpointCustom, string) (ImplResponse, error)
	UpdateEndpointIax(context.Context, int32, EndpointIax, string) (ImplResponse, error)
	UpdateEndpointSccp(context.Context, int32, EndpointSccp, string) (ImplResponse, error)
	UpdateEndpointSip(context.Context, string, EndpointSip, string) (ImplResponse, error)
	UpdateEndpointSipTemplate(context.Context, string, EndpointSip, string) (ImplResponse, error)
}


// ExtensionsAPIServicer defines the api actions for the ExtensionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ExtensionsAPIServicer interface { 
	AssociateConferenceExtension(context.Context, int32, int32) (ImplResponse, error)
	AssociateGroupExtension(context.Context, string, int32) (ImplResponse, error)
	AssociateIncallExtension(context.Context, int32, int32) (ImplResponse, error)
	AssociateLineExtension(context.Context, int32, int32) (ImplResponse, error)
	AssociateOutcallExtension(context.Context, int32, int32, OutcallExtension) (ImplResponse, error)
	AssociateParkingLotExtension(context.Context, int32, int32) (ImplResponse, error)
	AssociateQueueExtension(context.Context, int32, int32, string) (ImplResponse, error)
	CreateExtension(context.Context, Extension, string) (ImplResponse, error)
	CreateLineExtension(context.Context, int32, Extension, string) (ImplResponse, error)
	DeleteExtension(context.Context, int32) (ImplResponse, error)
	DissociateConferenceExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateGroupExtension(context.Context, string, int32) (ImplResponse, error)
	DissociateIncallExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateLineExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateOutcallExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateParkingLotExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateQueueExtension(context.Context, int32, int32, string) (ImplResponse, error)
	GetExtension(context.Context, int32) (ImplResponse, error)
	GetExtensionFeature(context.Context, string) (ImplResponse, error)
	ListExtensions(context.Context, string, bool, string, string, int32, int32, string, string, string, string) (ImplResponse, error)
	ListExtensionsFeatures(context.Context, string, string, int32, int32, string) (ImplResponse, error)
	UpdateExtension(context.Context, int32, Extension) (ImplResponse, error)
	UpdateExtensionFeature(context.Context, string, ExtensionFeature) (ImplResponse, error)
}


// ExternalAppsAPIServicer defines the api actions for the ExternalAppsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ExternalAppsAPIServicer interface { 
	CreateExternalApp(context.Context, string, ExternalApp, string) (ImplResponse, error)
	CreateUserExternalApp(context.Context, string, string, UserExternalApp, string) (ImplResponse, error)
	DeleteExternalApp(context.Context, string, string) (ImplResponse, error)
	DeleteUserExternalApp(context.Context, string, string, string) (ImplResponse, error)
	GetExternalApp(context.Context, string, string) (ImplResponse, error)
	GetUserExternalApp(context.Context, string, string, string, string) (ImplResponse, error)
	ListExternalApps(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListUserExternalApps(context.Context, string, string, string, string, int32, int32, string, string) (ImplResponse, error)
	UpdateExternalApp(context.Context, string, ExternalApp, string) (ImplResponse, error)
	UpdateUserExternalApp(context.Context, string, string, UserExternalApp, string) (ImplResponse, error)
}


// ForwardsAPIServicer defines the api actions for the ForwardsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ForwardsAPIServicer interface { 
	GetUserForward(context.Context, string, string) (ImplResponse, error)
	ListUserForwards(context.Context, string) (ImplResponse, error)
	UpdateUserForward(context.Context, string, string, UserForward) (ImplResponse, error)
	UpdateUserForwards(context.Context, string, UserForwards) (ImplResponse, error)
}


// FunckeysAPIServicer defines the api actions for the FunckeysAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type FunckeysAPIServicer interface { 
	AssociateUserFuncKeyTemplate(context.Context, string, int32, string) (ImplResponse, error)
	CreateFuncKeyTemplate(context.Context, string, FuncKeyTemplate) (ImplResponse, error)
	DeleteFuncKey(context.Context, int32, int32, string) (ImplResponse, error)
	DeleteFuncKeyTemplate(context.Context, int32, string) (ImplResponse, error)
	DeleteUserFuncKey(context.Context, string, int32, string) (ImplResponse, error)
	DissociateUserFuncKeyTemplate(context.Context, string, int32, string) (ImplResponse, error)
	GetFuncKey(context.Context, int32, int32, string) (ImplResponse, error)
	GetFuncKeyTemplate(context.Context, int32, string) (ImplResponse, error)
	GetUserFuncKey(context.Context, string, int32, string) (ImplResponse, error)
	ListFuncKeyDestinations(context.Context) (ImplResponse, error)
	ListFuncKeyTemplate(context.Context, string, bool) (ImplResponse, error)
	ListFuncKeyTemplateUserAssociations(context.Context, int32, string) (ImplResponse, error)
	ListUserFuncKeyTemplateAssociations(context.Context, string, string) (ImplResponse, error)
	ListUserFuncKeys(context.Context, string, string) (ImplResponse, error)
	UpdateFuncKey(context.Context, int32, int32, FuncKey, string) (ImplResponse, error)
	UpdateFuncKeyTemplate(context.Context, int32, FuncKeyTemplate, string) (ImplResponse, error)
	UpdateUserFuncKey(context.Context, string, int32, FuncKey, string) (ImplResponse, error)
	UpdateUserFuncKeys(context.Context, string, FuncKeyTemplate, string) (ImplResponse, error)
}


// GroupsAPIServicer defines the api actions for the GroupsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GroupsAPIServicer interface { 
	AssociateGroupCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	AssociateGroupExtension(context.Context, string, int32) (ImplResponse, error)
	AssociateGroupSchedule(context.Context, string, int32, string) (ImplResponse, error)
	CreateGroup(context.Context, Group, string) (ImplResponse, error)
	DeleteGroup(context.Context, string, string) (ImplResponse, error)
	DissociateGroupCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	DissociateGroupExtension(context.Context, string, int32) (ImplResponse, error)
	DissociateGroupSchedule(context.Context, string, int32, string) (ImplResponse, error)
	GetGroup(context.Context, string, string) (ImplResponse, error)
	GetGroupFallback(context.Context, string) (ImplResponse, error)
	ListGroups(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateCallPickupInterceptorGroups(context.Context, int32, GroupsId, string) (ImplResponse, error)
	UpdateCallPickupTargetGroups(context.Context, int32, GroupsId, string) (ImplResponse, error)
	UpdateGroup(context.Context, string, Group, string) (ImplResponse, error)
	UpdateGroupFallback(context.Context, string, GroupFallbacks) (ImplResponse, error)
	UpdateGroupMemberExtensions(context.Context, string, GroupMemberExtensions) (ImplResponse, error)
	UpdateGroupMemberUsers(context.Context, string, GroupMemberUsers) (ImplResponse, error)
	UpdateUserGroups(context.Context, string, UserGroupsId) (ImplResponse, error)
}


// GuestsAPIServicer defines the api actions for the GuestsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type GuestsAPIServicer interface { 
	CreateGuestMeetingAuthorization(context.Context, string, string, MeetingAuthorizationRequest) (ImplResponse, error)
	DeleteUserMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	GetGuestMeeting(context.Context, string) (ImplResponse, error)
	GetGuestMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	GetUserMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
}


// HaAPIServicer defines the api actions for the HaAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type HaAPIServicer interface { 
	GetHa(context.Context) (ImplResponse, error)
	UpdateHa(context.Context, Ha) (ImplResponse, error)
}


// IaxAPIServicer defines the api actions for the IaxAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IaxAPIServicer interface { 
	AssociateTrunkEndpointIax(context.Context, int32, int32) (ImplResponse, error)
	AssociateTrunkRegisterIax(context.Context, int32, int32) (ImplResponse, error)
	CreateEndpointIax(context.Context, string, EndpointIax) (ImplResponse, error)
	CreateRegisterIax(context.Context, RegisterIax) (ImplResponse, error)
	DeleteEndpointIax(context.Context, int32, string) (ImplResponse, error)
	DeleteRegisterIax(context.Context, int32) (ImplResponse, error)
	DissociateTrunkEndpointIax(context.Context, int32, int32) (ImplResponse, error)
	DissociateTrunkRegisterIax(context.Context, int32, int32) (ImplResponse, error)
	GetEndpointIax(context.Context, int32, string) (ImplResponse, error)
	GetRegisterIax(context.Context, int32) (ImplResponse, error)
	ListAsteriskIaxCallnumberlimits(context.Context) (ImplResponse, error)
	ListEndpointsIax(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListRegistersIax(context.Context, string, string, int32, int32, string) (ImplResponse, error)
	UpdateAsteriskIaxCallnumberlimits(context.Context, IaxCallNumberLimitss) (ImplResponse, error)
	UpdateEndpointIax(context.Context, int32, EndpointIax, string) (ImplResponse, error)
	UpdateRegisterIax(context.Context, int32, RegisterIax) (ImplResponse, error)
}


// IncallsAPIServicer defines the api actions for the IncallsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IncallsAPIServicer interface { 
	AssociateIncallExtension(context.Context, int32, int32) (ImplResponse, error)
	AssociateIncallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	CreateIncall(context.Context, Incall, string) (ImplResponse, error)
	DeleteIncall(context.Context, int32, string) (ImplResponse, error)
	DissociateIncallExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateIncallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	GetIncall(context.Context, int32, string) (ImplResponse, error)
	ListIncalls(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateIncall(context.Context, int32, Incall, string) (ImplResponse, error)
}


// InfosAPIServicer defines the api actions for the InfosAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type InfosAPIServicer interface { 
	GetInfos(context.Context) (ImplResponse, error)
}


// IngressesAPIServicer defines the api actions for the IngressesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IngressesAPIServicer interface { 
	CreateHttpIngress(context.Context, HttpIngressRequest, string) (ImplResponse, error)
	DeleteHttpIngress(context.Context, string, string) (ImplResponse, error)
	GetHttpIngress(context.Context, string, string) (ImplResponse, error)
	ListHttpIngresses(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateHttpIngress(context.Context, string, HttpIngressRequest, string) (ImplResponse, error)
}


// IvrAPIServicer defines the api actions for the IvrAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type IvrAPIServicer interface { 
	CreateIvr(context.Context, Ivr, string) (ImplResponse, error)
	DeleteIvr(context.Context, int32, string) (ImplResponse, error)
	GetIvr(context.Context, int32, string) (ImplResponse, error)
	ListIvr(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateIvr(context.Context, int32, Ivr, string) (ImplResponse, error)
}


// LinesAPIServicer defines the api actions for the LinesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type LinesAPIServicer interface { 
	AssociateLineApplication(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateLineDevice(context.Context, int32, string, string) (ImplResponse, error)
	AssociateLineEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	AssociateLineEndpointSccp(context.Context, int32, int32) (ImplResponse, error)
	AssociateLineEndpointSip(context.Context, int32, string) (ImplResponse, error)
	AssociateLineExtension(context.Context, int32, int32) (ImplResponse, error)
	AssociateUserLine(context.Context, string, int32) (ImplResponse, error)
	AssociateUserLines(context.Context, string, LinesId) (ImplResponse, error)
	CreateLine(context.Context, LineCreate, string) (ImplResponse, error)
	CreateLineExtension(context.Context, int32, Extension, string) (ImplResponse, error)
	DeleteLine(context.Context, int32, string) (ImplResponse, error)
	DissociateLineApplication(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateLineDevice(context.Context, int32, string, string) (ImplResponse, error)
	DissociateLineEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	DissociateLineEndpointSccp(context.Context, int32, int32) (ImplResponse, error)
	DissociateLineEndpointSip(context.Context, int32, string) (ImplResponse, error)
	DissociateLineExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateUserLine(context.Context, string, int32) (ImplResponse, error)
	GetDeviceLineAssociation(context.Context, string, string) (ImplResponse, error)
	GetLine(context.Context, int32, string) (ImplResponse, error)
	GetLineDevice(context.Context, int32, string) (ImplResponse, error)
	GetUserLineAssociatedEndpointsSip(context.Context, string, int32, string) (ImplResponse, error)
	GetUserLineMainAssociatedEndpointsSip(context.Context, string, string) (ImplResponse, error)
	ListLines(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateLine(context.Context, int32, Line, string) (ImplResponse, error)
}


// MeetingAuthorizationsAPIServicer defines the api actions for the MeetingAuthorizationsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MeetingAuthorizationsAPIServicer interface { 
	CreateGuestMeetingAuthorization(context.Context, string, string, MeetingAuthorizationRequest) (ImplResponse, error)
	DeleteUserMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	GetGuestMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	GetUserMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	ListUserMeetingAuthorizations(context.Context, string) (ImplResponse, error)
	PutUserMeetingAuthorizationAccept(context.Context, string, string) (ImplResponse, error)
	PutUserMeetingAuthorizationReject(context.Context, string, string) (ImplResponse, error)
}


// MeetingsAPIServicer defines the api actions for the MeetingsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MeetingsAPIServicer interface { 
	CreateGuestMeetingAuthorization(context.Context, string, string, MeetingAuthorizationRequest) (ImplResponse, error)
	CreateMeeting(context.Context, MeetingRequest, string) (ImplResponse, error)
	CreateUserMeeting(context.Context, MeetingUserRequest, string) (ImplResponse, error)
	DeleteMeeting(context.Context, string, string) (ImplResponse, error)
	DeleteUserMeeting(context.Context, string, string) (ImplResponse, error)
	DeleteUserMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	GetGuestMeeting(context.Context, string) (ImplResponse, error)
	GetGuestMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	GetMeeting(context.Context, string, string) (ImplResponse, error)
	GetUserMeeting(context.Context, string, string) (ImplResponse, error)
	GetUserMeetingAuthorization(context.Context, string, string, string) (ImplResponse, error)
	ListMeetings(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListUserMeetingAuthorizations(context.Context, string) (ImplResponse, error)
	ListUserMeetings(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	PutUserMeetingAuthorizationAccept(context.Context, string, string) (ImplResponse, error)
	PutUserMeetingAuthorizationReject(context.Context, string, string) (ImplResponse, error)
	UpdateMeeting(context.Context, string, MeetingRequest, string) (ImplResponse, error)
	UpdateUserMeeting(context.Context, string, MeetingRequest, string) (ImplResponse, error)
}


// MohAPIServicer defines the api actions for the MohAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MohAPIServicer interface { 
	CreateMoh(context.Context, Moh) (ImplResponse, error)
	DeleteMoh(context.Context, string, string) (ImplResponse, error)
	DeleteMohFiles(context.Context, string, string, string) (ImplResponse, error)
	GetMoh(context.Context, string, string) (ImplResponse, error)
	GetMohFiles(context.Context, string, string, string) (ImplResponse, error)
	ListMoh(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateMoh(context.Context, string, Moh, string) (ImplResponse, error)
	UpdateMohFiles(context.Context, string, string, map[string]interface{}, string) (ImplResponse, error)
}


// OutcallsAPIServicer defines the api actions for the OutcallsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type OutcallsAPIServicer interface { 
	AssociateOutcallCallpermission(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateOutcallExtension(context.Context, int32, int32, OutcallExtension) (ImplResponse, error)
	AssociateOutcallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateOutcallTrunks(context.Context, int32, TrunksId) (ImplResponse, error)
	CreateOutcall(context.Context, Outcall, string) (ImplResponse, error)
	DeleteOutcall(context.Context, int32, string) (ImplResponse, error)
	DissociateOutcallCallpermission(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateOutcallExtension(context.Context, int32, int32) (ImplResponse, error)
	DissociateOutcallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	GetOutcall(context.Context, int32, string) (ImplResponse, error)
	ListOutcalls(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateOutcall(context.Context, int32, Outcall, string) (ImplResponse, error)
}


// PagingsAPIServicer defines the api actions for the PagingsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PagingsAPIServicer interface { 
	CreatePaging(context.Context, Paging, string) (ImplResponse, error)
	DeletePaging(context.Context, int32, string) (ImplResponse, error)
	GetPaging(context.Context, int32, string) (ImplResponse, error)
	ListPagings(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdatePaging(context.Context, int32, Paging, string) (ImplResponse, error)
	UpdatePagingCallerUsers(context.Context, int32, UsersUuid) (ImplResponse, error)
	UpdatePagingMemberUsers(context.Context, int32, UsersUuid) (ImplResponse, error)
}


// ParkingLotsAPIServicer defines the api actions for the ParkingLotsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ParkingLotsAPIServicer interface { 
	AssociateParkingLotExtension(context.Context, int32, int32) (ImplResponse, error)
	CreateParkingLot(context.Context, ParkingLot, string) (ImplResponse, error)
	DeleteParkingLot(context.Context, int32, string) (ImplResponse, error)
	DissociateParkingLotExtension(context.Context, int32, int32) (ImplResponse, error)
	GetParkingLot(context.Context, int32, string) (ImplResponse, error)
	ListParkingLots(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateParkingLot(context.Context, int32, ParkingLot, string) (ImplResponse, error)
}


// ProvisioningAPIServicer defines the api actions for the ProvisioningAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ProvisioningAPIServicer interface { 
	GetProvisioningNetworking(context.Context) (ImplResponse, error)
	UpdateProvisioningNetworking(context.Context, ProvisioningNetworking) (ImplResponse, error)
}


// QueuesAPIServicer defines the api actions for the QueuesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type QueuesAPIServicer interface { 
	AssociateQueueExtension(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateQueueSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	CreateQueue(context.Context, Queue, string) (ImplResponse, error)
	CreateSkillRule(context.Context, SkillRule, string) (ImplResponse, error)
	DeleteQueue(context.Context, int32, string) (ImplResponse, error)
	DeleteSkillRule(context.Context, int32, string) (ImplResponse, error)
	DissociateAgentQueue(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateQueueExtension(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateQueueSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateUserQueue(context.Context, int32, string, string) (ImplResponse, error)
	GetQueue(context.Context, int32, string) (ImplResponse, error)
	GetQueueFallback(context.Context, int32, string) (ImplResponse, error)
	GetSkillRule(context.Context, int32, string) (ImplResponse, error)
	ListQueues(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListSkillRules(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateAgentQueueAssociation(context.Context, int32, int32, string, QueueMemberAgent) (ImplResponse, error)
	UpdateQueue(context.Context, int32, Queue, string) (ImplResponse, error)
	UpdateQueueFallback(context.Context, int32, string, QueueFallbacks) (ImplResponse, error)
	UpdateSkillRule(context.Context, int32, SkillRule, string) (ImplResponse, error)
	UpdateUserQueueAssociation(context.Context, int32, string, string, QueueMemberUser) (ImplResponse, error)
}


// RegistersAPIServicer defines the api actions for the RegistersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RegistersAPIServicer interface { 
	AssociateTrunkRegisterIax(context.Context, int32, int32) (ImplResponse, error)
	CreateRegisterIax(context.Context, RegisterIax) (ImplResponse, error)
	DeleteRegisterIax(context.Context, int32) (ImplResponse, error)
	DissociateTrunkRegisterIax(context.Context, int32, int32) (ImplResponse, error)
	GetRegisterIax(context.Context, int32) (ImplResponse, error)
	ListRegistersIax(context.Context, string, string, int32, int32, string) (ImplResponse, error)
	UpdateRegisterIax(context.Context, int32, RegisterIax) (ImplResponse, error)
}


// RegistrarsAPIServicer defines the api actions for the RegistrarsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RegistrarsAPIServicer interface { 
	CreateRegistrar(context.Context, Registrar) (ImplResponse, error)
	DeleteRegistrar(context.Context, string) (ImplResponse, error)
	GetRegistrar(context.Context, string) (ImplResponse, error)
	GetRegistrars(context.Context, string, string, int32, int32, string) (ImplResponse, error)
	UpdateRegistrar(context.Context, string, Registrar) (ImplResponse, error)
}


// SccpAPIServicer defines the api actions for the SccpAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SccpAPIServicer interface { 
	AssociateLineEndpointSccp(context.Context, int32, int32) (ImplResponse, error)
	CreateEndpointSccp(context.Context, string, EndpointSccp) (ImplResponse, error)
	DeleteEndpointSccp(context.Context, int32, string) (ImplResponse, error)
	DissociateLineEndpointSccp(context.Context, int32, int32) (ImplResponse, error)
	GetEndpointSccp(context.Context, int32, string) (ImplResponse, error)
	ListAsteriskSccpGeneral(context.Context) (ImplResponse, error)
	ListEndpointsSccp(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateAsteriskSccpGeneral(context.Context, SccpGeneral) (ImplResponse, error)
	UpdateEndpointSccp(context.Context, int32, EndpointSccp, string) (ImplResponse, error)
}


// SchedulesAPIServicer defines the api actions for the SchedulesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SchedulesAPIServicer interface { 
	AssociateGroupSchedule(context.Context, string, int32, string) (ImplResponse, error)
	AssociateIncallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateOutcallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateQueueSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	AssociateUserSchedule(context.Context, string, int32, string) (ImplResponse, error)
	CreateSchedule(context.Context, Schedule, string) (ImplResponse, error)
	DeleteSchedule(context.Context, int32, string) (ImplResponse, error)
	DissociateGroupSchedule(context.Context, string, int32, string) (ImplResponse, error)
	DissociateIncallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateOutcallSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateQueueSchedule(context.Context, int32, int32, string) (ImplResponse, error)
	DissociateUserSchedule(context.Context, string, int32, string) (ImplResponse, error)
	GetSchedule(context.Context, int32, string) (ImplResponse, error)
	ListSchedules(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateSchedule(context.Context, int32, Schedule, string) (ImplResponse, error)
}


// SipAPIServicer defines the api actions for the SipAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SipAPIServicer interface { 
	AssociateLineEndpointSip(context.Context, int32, string) (ImplResponse, error)
	AssociateTrunkEndpointSip(context.Context, int32, string) (ImplResponse, error)
	CreateEndpointSip(context.Context, string, EndpointSip) (ImplResponse, error)
	CreateEndpointSipTemplate(context.Context, string, EndpointSip) (ImplResponse, error)
	CreateSipTransport(context.Context, SipTransport) (ImplResponse, error)
	DeleteEndpointSip(context.Context, string, string) (ImplResponse, error)
	DeleteEndpointSipTemplate(context.Context, string, string) (ImplResponse, error)
	DeleteSipTransport(context.Context, string, string) (ImplResponse, error)
	DissociateLineEndpointSip(context.Context, int32, string) (ImplResponse, error)
	DissociateTrunkEndpointSip(context.Context, int32, string) (ImplResponse, error)
	GetEndpointSip(context.Context, string, string, string) (ImplResponse, error)
	GetEndpointSipTemplate(context.Context, string, string) (ImplResponse, error)
	GetSipTransport(context.Context, string) (ImplResponse, error)
	ListAsteriskPjsipGlobal(context.Context) (ImplResponse, error)
	ListAsteriskPjsipSystem(context.Context) (ImplResponse, error)
	ListEndpointsSip(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListEndpointsSipTemplates(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListSipTransports(context.Context, string, string, int32, int32, string) (ImplResponse, error)
	ShowPjsipDoc(context.Context) (ImplResponse, error)
	UpdateAsteriskPjsipGlobal(context.Context, PjsipGlobal) (ImplResponse, error)
	UpdateAsteriskPjsipSystem(context.Context, PjsipSystem) (ImplResponse, error)
	UpdateEndpointSip(context.Context, string, EndpointSip, string) (ImplResponse, error)
	UpdateEndpointSipTemplate(context.Context, string, EndpointSip, string) (ImplResponse, error)
	UpdateSipTransport(context.Context, string, SipTransport) (ImplResponse, error)
}


// SkillsAPIServicer defines the api actions for the SkillsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SkillsAPIServicer interface { 
	AssociateAgentSkill(context.Context, int32, int32, string, AgentSkill) (ImplResponse, error)
	CreateSkill(context.Context, Skill, string) (ImplResponse, error)
	CreateSkillRule(context.Context, SkillRule, string) (ImplResponse, error)
	DeleteSkill(context.Context, int32, string) (ImplResponse, error)
	DeleteSkillRule(context.Context, int32, string) (ImplResponse, error)
	DissociateAgentSkill(context.Context, int32, int32, string) (ImplResponse, error)
	GetSkill(context.Context, int32, string) (ImplResponse, error)
	GetSkillRule(context.Context, int32, string) (ImplResponse, error)
	ListSkillRules(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListSkills(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateSkill(context.Context, int32, Skill, string) (ImplResponse, error)
	UpdateSkillRule(context.Context, int32, SkillRule, string) (ImplResponse, error)
}


// SoundsAPIServicer defines the api actions for the SoundsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SoundsAPIServicer interface { 
	CreateSounds(context.Context, Sound, string) (ImplResponse, error)
	DeleteSounds(context.Context, string, string) (ImplResponse, error)
	DeleteSoundsFiles(context.Context, string, string, string, string, string) (ImplResponse, error)
	GetSounds(context.Context, string, string) (ImplResponse, error)
	GetSoundsFiles(context.Context, string, string, string, string, string) (ImplResponse, error)
	ListSounds(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	ListSoundsLanguages(context.Context) (ImplResponse, error)
	UpdateSoundsFiles(context.Context, string, string, map[string]interface{}, string, string, string) (ImplResponse, error)
}


// StatusAPIServicer defines the api actions for the StatusAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StatusAPIServicer interface { 
	StatusGet(context.Context) (ImplResponse, error)
}


// SwitchboardsAPIServicer defines the api actions for the SwitchboardsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SwitchboardsAPIServicer interface { 
	GetSwitchboardFallback(context.Context, string, string) (ImplResponse, error)
	SwitchboardsGet(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	SwitchboardsPost(context.Context, Switchboard, string) (ImplResponse, error)
	SwitchboardsSwitchboardUuidDelete(context.Context, string, string) (ImplResponse, error)
	SwitchboardsSwitchboardUuidGet(context.Context, string, string) (ImplResponse, error)
	SwitchboardsSwitchboardUuidPut(context.Context, string, Switchboard, string) (ImplResponse, error)
	UpdateSwitchboardFallback(context.Context, string, string, SwitchboardFallbacks) (ImplResponse, error)
	UpdateSwitchboardMemberUsers(context.Context, string, UsersUuid) (ImplResponse, error)
}


// TenantsAPIServicer defines the api actions for the TenantsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TenantsAPIServicer interface { 
	GetTenant(context.Context, string, string) (ImplResponse, error)
	ListTenants(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
}


// TimezonesAPIServicer defines the api actions for the TimezonesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TimezonesAPIServicer interface { 
	ListTimezones(context.Context) (ImplResponse, error)
}


// TrunksAPIServicer defines the api actions for the TrunksAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TrunksAPIServicer interface { 
	AssociateOutcallTrunks(context.Context, int32, TrunksId) (ImplResponse, error)
	AssociateTrunkEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	AssociateTrunkEndpointIax(context.Context, int32, int32) (ImplResponse, error)
	AssociateTrunkEndpointSip(context.Context, int32, string) (ImplResponse, error)
	AssociateTrunkRegisterIax(context.Context, int32, int32) (ImplResponse, error)
	CreateTrunk(context.Context, Trunk) (ImplResponse, error)
	DeleteTrunk(context.Context, int32, string) (ImplResponse, error)
	DissociateTrunkEndpointCustom(context.Context, int32, int32) (ImplResponse, error)
	DissociateTrunkEndpointIax(context.Context, int32, int32) (ImplResponse, error)
	DissociateTrunkEndpointSip(context.Context, int32, string) (ImplResponse, error)
	DissociateTrunkRegisterIax(context.Context, int32, int32) (ImplResponse, error)
	GetTrunk(context.Context, int32, string) (ImplResponse, error)
	ListTrunks(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateTrunk(context.Context, int32, Trunk, string) (ImplResponse, error)
}


// UsersAPIServicer defines the api actions for the UsersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersAPIServicer interface { 
	AssociateUserAgent(context.Context, string, int32, string) (ImplResponse, error)
	AssociateUserCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	AssociateUserFuncKeyTemplate(context.Context, string, int32, string) (ImplResponse, error)
	AssociateUserLine(context.Context, string, int32) (ImplResponse, error)
	AssociateUserLines(context.Context, string, LinesId) (ImplResponse, error)
	AssociateUserSchedule(context.Context, string, int32, string) (ImplResponse, error)
	AssociateUserVoicemail(context.Context, string, int32) (ImplResponse, error)
	CreateUser(context.Context, UserPost, string) (ImplResponse, error)
	CreateUserExternalApp(context.Context, string, string, UserExternalApp, string) (ImplResponse, error)
	CreateUserMeeting(context.Context, MeetingUserRequest, string) (ImplResponse, error)
	CreateUserVoicemail(context.Context, string, Voicemail, string) (ImplResponse, error)
	DeleteUser(context.Context, string, string, bool) (ImplResponse, error)
	DeleteUserExternalApp(context.Context, string, string, string) (ImplResponse, error)
	DeleteUserFuncKey(context.Context, string, int32, string) (ImplResponse, error)
	DeleteUserMeeting(context.Context, string, string) (ImplResponse, error)
	DissociateUserAgent(context.Context, string, string) (ImplResponse, error)
	DissociateUserCallpermission(context.Context, string, int32, string) (ImplResponse, error)
	DissociateUserFuncKeyTemplate(context.Context, string, int32, string) (ImplResponse, error)
	DissociateUserLine(context.Context, string, int32) (ImplResponse, error)
	DissociateUserQueue(context.Context, int32, string, string) (ImplResponse, error)
	DissociateUserSchedule(context.Context, string, int32, string) (ImplResponse, error)
	DissociateUserVoicemail(context.Context, string) (ImplResponse, error)
	ExportUsersCsv(context.Context, string) (ImplResponse, error)
	GetUser(context.Context, string, string) (ImplResponse, error)
	GetUserExternalApp(context.Context, string, string, string, string) (ImplResponse, error)
	GetUserFallback(context.Context, string) (ImplResponse, error)
	GetUserForward(context.Context, string, string) (ImplResponse, error)
	GetUserFuncKey(context.Context, string, int32, string) (ImplResponse, error)
	GetUserLineAssociatedEndpointsSip(context.Context, string, int32, string) (ImplResponse, error)
	GetUserLineMainAssociatedEndpointsSip(context.Context, string, string) (ImplResponse, error)
	GetUserMeeting(context.Context, string, string) (ImplResponse, error)
	GetUserService(context.Context, string, string) (ImplResponse, error)
	GetUserServices(context.Context, string) (ImplResponse, error)
	GetUserVoicemail(context.Context, string, string) (ImplResponse, error)
	GetUsersSubscriptions(context.Context, string) (ImplResponse, error)
	HeadUser(context.Context, string, string) (ImplResponse, error)
	ImportUsersCsv(context.Context, string, string) (ImplResponse, error)
	ListFuncKeyTemplateUserAssociations(context.Context, int32, string) (ImplResponse, error)
	ListUser(context.Context, string, bool, string, string, int32, int32, string, string) (ImplResponse, error)
	ListUserExternalApps(context.Context, string, string, string, string, int32, int32, string, string) (ImplResponse, error)
	ListUserForwards(context.Context, string) (ImplResponse, error)
	ListUserFuncKeyTemplateAssociations(context.Context, string, string) (ImplResponse, error)
	ListUserFuncKeys(context.Context, string, string) (ImplResponse, error)
	ListUserMeetingAuthorizations(context.Context, string) (ImplResponse, error)
	ListUserMeetings(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	PutUserMeetingAuthorizationAccept(context.Context, string, string) (ImplResponse, error)
	PutUserMeetingAuthorizationReject(context.Context, string, string) (ImplResponse, error)
	UpdateCallFilterCallerUsers(context.Context, int32, CallFilterRecipientUsersUuid) (ImplResponse, error)
	UpdateCallFilterMemberUsers(context.Context, int32, UsersUuid) (ImplResponse, error)
	UpdateCallPickupInterceptorUsers(context.Context, int32, UsersUuid, string) (ImplResponse, error)
	UpdateCallPickupTargetUsers(context.Context, int32, UsersUuid, string) (ImplResponse, error)
	UpdateGroupMemberUsers(context.Context, string, GroupMemberUsers) (ImplResponse, error)
	UpdatePagingCallerUsers(context.Context, int32, UsersUuid) (ImplResponse, error)
	UpdatePagingMemberUsers(context.Context, int32, UsersUuid) (ImplResponse, error)
	UpdateSwitchboardMemberUsers(context.Context, string, UsersUuid) (ImplResponse, error)
	UpdateUser(context.Context, string, User, string) (ImplResponse, error)
	UpdateUserExternalApp(context.Context, string, string, UserExternalApp, string) (ImplResponse, error)
	UpdateUserFallback(context.Context, string, UserFallbacks) (ImplResponse, error)
	UpdateUserForward(context.Context, string, string, UserForward) (ImplResponse, error)
	UpdateUserForwards(context.Context, string, UserForwards) (ImplResponse, error)
	UpdateUserFuncKey(context.Context, string, int32, FuncKey, string) (ImplResponse, error)
	UpdateUserFuncKeys(context.Context, string, FuncKeyTemplate, string) (ImplResponse, error)
	UpdateUserGroups(context.Context, string, UserGroupsId) (ImplResponse, error)
	UpdateUserMeeting(context.Context, string, MeetingRequest, string) (ImplResponse, error)
	UpdateUserQueueAssociation(context.Context, int32, string, string, QueueMemberUser) (ImplResponse, error)
	UpdateUserService(context.Context, string, string, UserService) (ImplResponse, error)
	UpdateUserServices(context.Context, string, UserServices) (ImplResponse, error)
	UpdateUsersCsv(context.Context, string, string) (ImplResponse, error)
}


// VoicemailsAPIServicer defines the api actions for the VoicemailsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type VoicemailsAPIServicer interface { 
	AssociateUserVoicemail(context.Context, string, int32) (ImplResponse, error)
	CreateUserVoicemail(context.Context, string, Voicemail, string) (ImplResponse, error)
	CreateVoicemail(context.Context, Voicemail) (ImplResponse, error)
	DeleteVoicemail(context.Context, int32, string) (ImplResponse, error)
	DissociateUserVoicemail(context.Context, string) (ImplResponse, error)
	GetUserVoicemail(context.Context, string, string) (ImplResponse, error)
	GetVoicemail(context.Context, int32, string) (ImplResponse, error)
	ListAsteriskVoicemailZonemessages(context.Context) (ImplResponse, error)
	ListVoicemails(context.Context, string, bool, string, string, int32, int32, string) (ImplResponse, error)
	UpdateAsteriskVoicemailZonemessages(context.Context, VoicemailZoneMessages) (ImplResponse, error)
	UpdateVoicemail(context.Context, int32, Voicemail, string) (ImplResponse, error)
}


// WizardAPIServicer defines the api actions for the WizardAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type WizardAPIServicer interface { 
	GetWizardDiscover(context.Context) (ImplResponse, error)
	GetWizardStatus(context.Context) (ImplResponse, error)
	PassWizard(context.Context, Wizard) (ImplResponse, error)
}
