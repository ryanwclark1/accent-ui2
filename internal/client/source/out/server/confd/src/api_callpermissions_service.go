/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

import (
	"context"
	"errors"
	"net/http"
)

// CallpermissionsAPIService is a service that implements the logic for the CallpermissionsAPIServicer
// This service should implement the business logic for every endpoint for the CallpermissionsAPI API.
// Include any external packages or services that will be required by this service.
type CallpermissionsAPIService struct {
}

// NewCallpermissionsAPIService creates a default api service
func NewCallpermissionsAPIService() CallpermissionsAPIServicer {
	return &CallpermissionsAPIService{}
}

// AssociateGroupCallpermission - Associate group and call permission
func (s *CallpermissionsAPIService) AssociateGroupCallpermission(ctx context.Context, groupUuid string, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update AssociateGroupCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssociateGroupCallpermission method not implemented")
}

// AssociateOutcallCallpermission - Associate outcall and call permission
func (s *CallpermissionsAPIService) AssociateOutcallCallpermission(ctx context.Context, outcallId int32, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update AssociateOutcallCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssociateOutcallCallpermission method not implemented")
}

// AssociateUserCallpermission - Associate user and call permission
func (s *CallpermissionsAPIService) AssociateUserCallpermission(ctx context.Context, userId string, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update AssociateUserCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssociateUserCallpermission method not implemented")
}

// CreateCallpermission - Create call permission
func (s *CallpermissionsAPIService) CreateCallpermission(ctx context.Context, body CallPermission, accentTenant string) (ImplResponse, error) {
	// TODO - update CreateCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, CallPermission{}) or use other options such as http.Ok ...
	// return Response(201, CallPermission{}), nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateCallpermission method not implemented")
}

// DeleteCallpermission - Delete call permission
func (s *CallpermissionsAPIService) DeleteCallpermission(ctx context.Context, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update DeleteCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteCallpermission method not implemented")
}

// DissociateGroupCallpermission - Dissociate group and call permission
func (s *CallpermissionsAPIService) DissociateGroupCallpermission(ctx context.Context, groupUuid string, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update DissociateGroupCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DissociateGroupCallpermission method not implemented")
}

// DissociateOutcallCallpermission - Dissociate outcall and call permission
func (s *CallpermissionsAPIService) DissociateOutcallCallpermission(ctx context.Context, outcallId int32, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update DissociateOutcallCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DissociateOutcallCallpermission method not implemented")
}

// DissociateUserCallpermission - Dissociate user and call permission
func (s *CallpermissionsAPIService) DissociateUserCallpermission(ctx context.Context, userId string, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update DissociateUserCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DissociateUserCallpermission method not implemented")
}

// GetCallpermission - Get call permission
func (s *CallpermissionsAPIService) GetCallpermission(ctx context.Context, callpermissionId int32, accentTenant string) (ImplResponse, error) {
	// TODO - update GetCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CallPermission{}) or use other options such as http.Ok ...
	// return Response(200, CallPermission{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCallpermission method not implemented")
}

// ListCallpermissions - List call permissions
func (s *CallpermissionsAPIService) ListCallpermissions(ctx context.Context, accentTenant string, recurse bool, order string, direction string, limit int32, offset int32, search string) (ImplResponse, error) {
	// TODO - update ListCallpermissions with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CallPermissionItems{}) or use other options such as http.Ok ...
	// return Response(200, CallPermissionItems{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListCallpermissions method not implemented")
}

// UpdateCallpermission - Update call permission
func (s *CallpermissionsAPIService) UpdateCallpermission(ctx context.Context, callpermissionId int32, body CallPermission, accentTenant string) (ImplResponse, error) {
	// TODO - update UpdateCallpermission with the required logic for this service method.
	// Add api_callpermissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateCallpermission method not implemented")
}
