/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

type Agent struct {
	Firstname string `json:"firstname,omitempty"`

	// The id of the agent
	Id int32 `json:"id,omitempty"`

	Lastname string `json:"lastname,omitempty"`

	// Agent number. Cannot be modified after creation
	Number string `json:"number,omitempty"`

	Queues []AgentRelationQueue `json:"queues,omitempty"`

	Users []AgentRelationUser `json:"users,omitempty"`

	Skills []AgentRelationSkill `json:"skills,omitempty"`

	// Additional information about the agent
	Description string `json:"description,omitempty"`

	// Language used for the agent menu prompt
	Language string `json:"language,omitempty"`

	// Numeric password used to log agent.
	Password string `json:"password,omitempty"`

	// Name of the subroutine to execute in asterisk before receiving a call
	PreprocessSubroutine string `json:"preprocess_subroutine,omitempty"`

	// The UUID of the tenant
	TenantUuid string `json:"tenant_uuid,omitempty"`
}

// AssertAgentRequired checks if the required fields are not zero-ed
func AssertAgentRequired(obj Agent) error {
	for _, el := range obj.Queues {
		if err := AssertAgentRelationQueueRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Users {
		if err := AssertAgentRelationUserRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Skills {
		if err := AssertAgentRelationSkillRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertAgentConstraints checks if the values respects the defined constraints
func AssertAgentConstraints(obj Agent) error {
	return nil
}
