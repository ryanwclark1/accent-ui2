/*
 * accent-confd
 *
 * Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.
 *
 * API version: 1.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package confdserver

import (
	"context"
	"errors"
	"net/http"
)

// ApplicationsAPIService is a service that implements the logic for the ApplicationsAPIServicer
// This service should implement the business logic for every endpoint for the ApplicationsAPI API.
// Include any external packages or services that will be required by this service.
type ApplicationsAPIService struct {
}

// NewApplicationsAPIService creates a default api service
func NewApplicationsAPIService() ApplicationsAPIServicer {
	return &ApplicationsAPIService{}
}

// AssociateLineApplication - Associate line and application
func (s *ApplicationsAPIService) AssociateLineApplication(ctx context.Context, lineId int32, applicationUuid int32, accentTenant string) (ImplResponse, error) {
	// TODO - update AssociateLineApplication with the required logic for this service method.
	// Add api_applications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AssociateLineApplication method not implemented")
}

// CreateApplication - Create application
func (s *ApplicationsAPIService) CreateApplication(ctx context.Context, body Application, accentTenant string) (ImplResponse, error) {
	// TODO - update CreateApplication with the required logic for this service method.
	// Add api_applications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Application{}) or use other options such as http.Ok ...
	// return Response(201, Application{}), nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateApplication method not implemented")
}

// DeleteApplication - Delete application
func (s *ApplicationsAPIService) DeleteApplication(ctx context.Context, applicationUuid int32, accentTenant string) (ImplResponse, error) {
	// TODO - update DeleteApplication with the required logic for this service method.
	// Add api_applications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteApplication method not implemented")
}

// DissociateLineApplication - Dissociate line and application
func (s *ApplicationsAPIService) DissociateLineApplication(ctx context.Context, lineId int32, applicationUuid int32, accentTenant string) (ImplResponse, error) {
	// TODO - update DissociateLineApplication with the required logic for this service method.
	// Add api_applications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DissociateLineApplication method not implemented")
}

// GetApplication - Get application
func (s *ApplicationsAPIService) GetApplication(ctx context.Context, applicationUuid int32, accentTenant string) (ImplResponse, error) {
	// TODO - update GetApplication with the required logic for this service method.
	// Add api_applications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Application{}) or use other options such as http.Ok ...
	// return Response(200, Application{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetApplication method not implemented")
}

// ListApplications - List application
func (s *ApplicationsAPIService) ListApplications(ctx context.Context, accentTenant string, recurse bool, order string, direction string, limit int32, offset int32, search string) (ImplResponse, error) {
	// TODO - update ListApplications with the required logic for this service method.
	// Add api_applications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ApplicationItems{}) or use other options such as http.Ok ...
	// return Response(200, ApplicationItems{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListApplications method not implemented")
}

// UpdateApplication - Update application
func (s *ApplicationsAPIService) UpdateApplication(ctx context.Context, applicationUuid int32, body Application, accentTenant string) (ImplResponse, error) {
	// TODO - update UpdateApplication with the required logic for this service method.
	// Add api_applications_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, []string{}) or use other options such as http.Ok ...
	// return Response(400, []string{}), nil

	// TODO: Uncomment the next line to return response Response(404, []string{}) or use other options such as http.Ok ...
	// return Response(404, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateApplication method not implemented")
}
