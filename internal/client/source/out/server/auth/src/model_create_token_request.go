/*
 * accent-auth
 *
 * Accent's authentication service
 *
 * API version: 0.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package authserver

import (
	"errors"
)

type CreateTokenRequest struct {

	// The `access_type` indicates whether your application can refresh the tokens when the user is not present at the browser. Valid parameter values are *online*, which is the default value, and *offline* Only one refresh token will be created for a given user with a given `client_id`. The old refresh for `client_id` will be revoken when creating a new one. The *client_id* field is required when using the `access_type` *offline*
	AccessType string `json:"access_type,omitempty"`

	Backend string `json:"backend,omitempty"`

	// The `client_id` is used in conjunction with the `access_type` *offline* to known for which application a refresh token has been emitted. *Required when using `access_type: offline`*
	ClientId string `json:"client_id,omitempty"`

	// The `domain_name` must match a tenant's domain_name entry to find the appropriate ldap configuration.
	DomainName string `json:"domain_name,omitempty"`

	// Expiration time in seconds.
	Expiration int32 `json:"expiration,omitempty"`

	// The `refresh_token` can be used to get a new access token without using the username/password. This is useful for client application that should not store the username and password once the user has logged in a first time.
	RefreshToken string `json:"refresh_token,omitempty"`
}

// AssertCreateTokenRequestRequired checks if the required fields are not zero-ed
func AssertCreateTokenRequestRequired(obj CreateTokenRequest) error {
	return nil
}

// AssertCreateTokenRequestConstraints checks if the values respects the defined constraints
func AssertCreateTokenRequestConstraints(obj CreateTokenRequest) error {
	if obj.Expiration > 315360000 {
		return &ParsingError{Err: errors.New(errMsgMaxValueConstraint)}
	}
	return nil
}
