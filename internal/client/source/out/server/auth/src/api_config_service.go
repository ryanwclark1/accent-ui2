/*
 * accent-auth
 *
 * Accent's authentication service
 *
 * API version: 0.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package authserver

import (
	"context"
	"errors"
	"net/http"
)

// ConfigAPIService is a service that implements the logic for the ConfigAPIServicer
// This service should implement the business logic for every endpoint for the ConfigAPI API.
// Include any external packages or services that will be required by this service.
type ConfigAPIService struct {
}

// NewConfigAPIService creates a default api service
func NewConfigAPIService() ConfigAPIServicer {
	return &ConfigAPIService{}
}

// GetConfig - Show the current configuration
func (s *ConfigAPIService) GetConfig(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetConfig with the required logic for this service method.
	// Add api_config_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetConfig method not implemented")
}

// PatchConfig - Update the current configuration.
func (s *ConfigAPIService) PatchConfig(ctx context.Context, configPatch []ConfigPatchItem) (ImplResponse, error) {
	// TODO - update PatchConfig with the required logic for this service method.
	// Add api_config_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PatchConfig method not implemented")
}
