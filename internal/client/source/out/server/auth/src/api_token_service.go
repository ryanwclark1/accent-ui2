/*
 * accent-auth
 *
 * Accent's authentication service
 *
 * API version: 0.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package authserver

import (
	"context"
	"errors"
	"net/http"
)

// TokenAPIService is a service that implements the logic for the TokenAPIServicer
// This service should implement the business logic for every endpoint for the TokenAPI API.
// Include any external packages or services that will be required by this service.
type TokenAPIService struct {
}

// NewTokenAPIService creates a default api service
func NewTokenAPIService() TokenAPIServicer {
	return &TokenAPIService{}
}

// CheckTokenContext - Checks if a token is valid
func (s *TokenAPIService) CheckTokenContext(ctx context.Context, token string, scope string, tenant string) (ImplResponse, error) {
	// TODO - update CheckTokenContext with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	// return Response(403, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CheckTokenContext method not implemented")
}

// CheckTokenScopes - Check a token against scopes
func (s *TokenAPIService) CheckTokenScopes(ctx context.Context, token string, body ScopeCheckRequest) (ImplResponse, error) {
	// TODO - update CheckTokenScopes with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ScopeList{}) or use other options such as http.Ok ...
	// return Response(200, ScopeList{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	// return Response(403, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CheckTokenScopes method not implemented")
}

// CreateToken - Creates a token
func (s *TokenAPIService) CreateToken(ctx context.Context, accentSessionType string, body CreateTokenRequest) (ImplResponse, error) {
	// TODO - update CreateToken with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Token{}) or use other options such as http.Ok ...
	// return Response(200, Token{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateToken method not implemented")
}

// DeleteRefreshTokens - Delete a user&#39;s refresh token
func (s *TokenAPIService) DeleteRefreshTokens(ctx context.Context, userUuidOrMe string, clientId string) (ImplResponse, error) {
	// TODO - update DeleteRefreshTokens with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(401, ApiError{}) or use other options such as http.Ok ...
	// return Response(401, ApiError{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiError{}) or use other options such as http.Ok ...
	// return Response(404, ApiError{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiError{}) or use other options such as http.Ok ...
	// return Response(500, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteRefreshTokens method not implemented")
}

// GetToken - Retrieves token data
func (s *TokenAPIService) GetToken(ctx context.Context, token string, scope string, tenant string) (ImplResponse, error) {
	// TODO - update GetToken with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Token{}) or use other options such as http.Ok ...
	// return Response(200, Token{}), nil

	// TODO: Uncomment the next line to return response Response(403, Error{}) or use other options such as http.Ok ...
	// return Response(403, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetToken method not implemented")
}

// GetTokens - Retrieve a list of refresh tokens that have been created on the system
func (s *TokenAPIService) GetTokens(ctx context.Context, accentTenant string, recurse bool, order string, direction string, limit int32, offset int32, search string) (ImplResponse, error) {
	// TODO - update GetTokens with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RefreshTokenList{}) or use other options such as http.Ok ...
	// return Response(200, RefreshTokenList{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiError{}) or use other options such as http.Ok ...
	// return Response(400, ApiError{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiError{}) or use other options such as http.Ok ...
	// return Response(401, ApiError{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiError{}) or use other options such as http.Ok ...
	// return Response(500, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTokens method not implemented")
}

// GetUserTokens - Retrieve a user&#39;s refresh token list
func (s *TokenAPIService) GetUserTokens(ctx context.Context, userUuidOrMe string, accentTenant string, order string, direction string, limit int32, offset int32, search string) (ImplResponse, error) {
	// TODO - update GetUserTokens with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, RefreshTokenList{}) or use other options such as http.Ok ...
	// return Response(200, RefreshTokenList{}), nil

	// TODO: Uncomment the next line to return response Response(400, ApiError{}) or use other options such as http.Ok ...
	// return Response(400, ApiError{}), nil

	// TODO: Uncomment the next line to return response Response(401, ApiError{}) or use other options such as http.Ok ...
	// return Response(401, ApiError{}), nil

	// TODO: Uncomment the next line to return response Response(404, ApiError{}) or use other options such as http.Ok ...
	// return Response(404, ApiError{}), nil

	// TODO: Uncomment the next line to return response Response(500, ApiError{}) or use other options such as http.Ok ...
	// return Response(500, ApiError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserTokens method not implemented")
}

// RevokeToken - Revoke a token
func (s *TokenAPIService) RevokeToken(ctx context.Context, token string) (ImplResponse, error) {
	// TODO - update RevokeToken with the required logic for this service method.
	// Add api_token_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(500, Error{}) or use other options such as http.Ok ...
	// return Response(500, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RevokeToken method not implemented")
}
