/*
 * accent-call-logd
 *
 * Consult call logs from a REST API
 *
 * API version: 1.0.0
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package calllogdserver

import (
	"context"
	"net/http"
	"time"
	"time"
	"time"
	"time"
	"time"
)



// AgentStatisticsAPIRouter defines the required methods for binding the api requests to a responses for the AgentStatisticsAPI
// The AgentStatisticsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a AgentStatisticsAPIServicer to perform the required actions, then write the service results to the http response.
type AgentStatisticsAPIRouter interface { 
	GetAgentStatistics(http.ResponseWriter, *http.Request)
	GetAgentsStatistics(http.ResponseWriter, *http.Request)
}
// CdrAPIRouter defines the required methods for binding the api requests to a responses for the CdrAPI
// The CdrAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CdrAPIServicer to perform the required actions, then write the service results to the http response.
type CdrAPIRouter interface { 
	CreateCDRRecordingsMediaExport(http.ResponseWriter, *http.Request)
	DeleteCDRRecordingMedia(http.ResponseWriter, *http.Request)
	DeleteCDRRecordingsMedia(http.ResponseWriter, *http.Request)
	GetCDR(http.ResponseWriter, *http.Request)
	GetCDRRecordingMedia(http.ResponseWriter, *http.Request)
	GetCDRs(http.ResponseWriter, *http.Request)
	GetCurrentUserCDR(http.ResponseWriter, *http.Request)
	GetUserCDR(http.ResponseWriter, *http.Request)
}
// ConfigAPIRouter defines the required methods for binding the api requests to a responses for the ConfigAPI
// The ConfigAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ConfigAPIServicer to perform the required actions, then write the service results to the http response.
type ConfigAPIRouter interface { 
	GetConfig(http.ResponseWriter, *http.Request)
	UpdateConfig(http.ResponseWriter, *http.Request)
}
// ExportsAPIRouter defines the required methods for binding the api requests to a responses for the ExportsAPI
// The ExportsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ExportsAPIServicer to perform the required actions, then write the service results to the http response.
type ExportsAPIRouter interface { 
	CreateCDRRecordingsMediaExport(http.ResponseWriter, *http.Request)
	GetExport(http.ResponseWriter, *http.Request)
	GetExportDownload(http.ResponseWriter, *http.Request)
}
// QueueStatisticsAPIRouter defines the required methods for binding the api requests to a responses for the QueueStatisticsAPI
// The QueueStatisticsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a QueueStatisticsAPIServicer to perform the required actions, then write the service results to the http response.
type QueueStatisticsAPIRouter interface { 
	GetQueueQoSStatistics(http.ResponseWriter, *http.Request)
	GetQueueStatistics(http.ResponseWriter, *http.Request)
	GetQueuesStatistics(http.ResponseWriter, *http.Request)
}
// RetentionAPIRouter defines the required methods for binding the api requests to a responses for the RetentionAPI
// The RetentionAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RetentionAPIServicer to perform the required actions, then write the service results to the http response.
type RetentionAPIRouter interface { 
	GetRetention(http.ResponseWriter, *http.Request)
	UpdateRetention(http.ResponseWriter, *http.Request)
}
// StatusAPIRouter defines the required methods for binding the api requests to a responses for the StatusAPI
// The StatusAPIRouter implementation should parse necessary information from the http request,
// pass the data to a StatusAPIServicer to perform the required actions, then write the service results to the http response.
type StatusAPIRouter interface { 
	GetStatus(http.ResponseWriter, *http.Request)
}
// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersAPI
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersAPIServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface { 
	GetCurrentUserCDR(http.ResponseWriter, *http.Request)
	GetUserCDR(http.ResponseWriter, *http.Request)
}


// AgentStatisticsAPIServicer defines the api actions for the AgentStatisticsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type AgentStatisticsAPIServicer interface { 
	GetAgentStatistics(context.Context, int32, string, time.Time, time.Time, string, string, string, []int32, string) (ImplResponse, error)
	GetAgentsStatistics(context.Context, string, time.Time, time.Time, string, string, []int32, string) (ImplResponse, error)
}


// CdrAPIServicer defines the api actions for the CdrAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CdrAPIServicer interface { 
	CreateCDRRecordingsMediaExport(context.Context, time.Time, time.Time, string, string, string, []string, []string, int32, bool, string, string, CreateCdrRecordingsMediaExportRequest) (ImplResponse, error)
	DeleteCDRRecordingMedia(context.Context, int32, int32) (ImplResponse, error)
	DeleteCDRRecordingsMedia(context.Context, DeleteCdrRecordingsMediaRequest) (ImplResponse, error)
	GetCDR(context.Context, int32) (ImplResponse, error)
	GetCDRRecordingMedia(context.Context, int32, int32) (ImplResponse, error)
	GetCDRs(context.Context, string, time.Time, time.Time, int32, int32, string, string, string, string, string, []string, []string, int32, bool, string, bool, string) (ImplResponse, error)
	GetCurrentUserCDR(context.Context, time.Time, time.Time, int32, int32, string, string, string, string, string, int32, []string, string, bool, string) (ImplResponse, error)
	GetUserCDR(context.Context, string, time.Time, time.Time, int32, int32, string, string, string, string, string, int32, string, bool, string) (ImplResponse, error)
}


// ConfigAPIServicer defines the api actions for the ConfigAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ConfigAPIServicer interface { 
	GetConfig(context.Context) (ImplResponse, error)
	UpdateConfig(context.Context, []ConfigPatchItem) (ImplResponse, error)
}


// ExportsAPIServicer defines the api actions for the ExportsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ExportsAPIServicer interface { 
	CreateCDRRecordingsMediaExport(context.Context, time.Time, time.Time, string, string, string, []string, []string, int32, bool, string, string, CreateCdrRecordingsMediaExportRequest) (ImplResponse, error)
	GetExport(context.Context, string) (ImplResponse, error)
	GetExportDownload(context.Context, string) (ImplResponse, error)
}


// QueueStatisticsAPIServicer defines the api actions for the QueueStatisticsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type QueueStatisticsAPIServicer interface { 
	GetQueueQoSStatistics(context.Context, int32, string, time.Time, time.Time, string, []int32, string, string, []int32, string) (ImplResponse, error)
	GetQueueStatistics(context.Context, int32, string, time.Time, time.Time, string, int32, string, string, []int32, string) (ImplResponse, error)
	GetQueuesStatistics(context.Context, string, time.Time, time.Time, int32, string, string, []int32, string) (ImplResponse, error)
}


// RetentionAPIServicer defines the api actions for the RetentionAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RetentionAPIServicer interface { 
	GetRetention(context.Context, string) (ImplResponse, error)
	UpdateRetention(context.Context, Retention, string) (ImplResponse, error)
}


// StatusAPIServicer defines the api actions for the StatusAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type StatusAPIServicer interface { 
	GetStatus(context.Context) (ImplResponse, error)
}


// UsersAPIServicer defines the api actions for the UsersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersAPIServicer interface { 
	GetCurrentUserCDR(context.Context, time.Time, time.Time, int32, int32, string, string, string, string, string, int32, []string, string, bool, string) (ImplResponse, error)
	GetUserCDR(context.Context, string, time.Time, time.Time, int32, int32, string, string, string, string, string, int32, string, bool, string) (ImplResponse, error)
}
