/*
 * accent-calld
 *
 * Control your calls from a REST API
 *
 * API version: 1.0.0
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package calldserver

import (
	"fmt"
)

// TransferFlow : Behavior of the transfer. `attended` allows the initiator to talk to the recipient. `blind` does not.
type TransferFlow string

// List of TransferFlow
const (
	TRANSFERFLOW_ATTENDED TransferFlow = "attended"
	TRANSFERFLOW_BLIND    TransferFlow = "blind"
)

// AllowedTransferFlowEnumValues is all the allowed values of TransferFlow enum
var AllowedTransferFlowEnumValues = []TransferFlow{
	"attended",
	"blind",
}

// validTransferFlowEnumValue provides a map of TransferFlows for fast verification of use input
var validTransferFlowEnumValues = map[TransferFlow]struct{}{
	"attended": {},
	"blind":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TransferFlow) IsValid() bool {
	_, ok := validTransferFlowEnumValues[v]
	return ok
}

// NewTransferFlowFromValue returns a pointer to a valid TransferFlow
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTransferFlowFromValue(v string) (TransferFlow, error) {
	ev := TransferFlow(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for TransferFlow: valid values are %v", v, AllowedTransferFlowEnumValues)
	}
}

// AssertTransferFlowRequired checks if the required fields are not zero-ed
func AssertTransferFlowRequired(obj TransferFlow) error {
	return nil
}

// AssertTransferFlowConstraints checks if the values respects the defined constraints
func AssertTransferFlowConstraints(obj TransferFlow) error {
	return nil
}
