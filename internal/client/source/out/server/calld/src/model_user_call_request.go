/*
 * accent-calld
 *
 * Control your calls from a REST API
 *
 * API version: 1.0.0
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package calldserver

type UserCallRequest struct {

	// Use all of the lines of the user to make the call (ignored when `line_id` is specified).
	AllLines bool `json:"all_lines,omitempty"`

	// Inform the caller phone that it should answer automatically. Limitation: this does not work if `all_lines` is true, if `from_mobile` is true or if the phone is SCCP.
	AutoAnswerCaller bool `json:"auto_answer_caller,omitempty"`

	// Extension to call
	Extension string `json:"extension"`

	// Start the call from the user's mobile phone. Default is False. Limitation: this feature may return a wrong call_id if the outgoing call used to dial the mobile number has more than one associated trunk.
	FromMobile bool `json:"from_mobile,omitempty"`

	// ID of the line of the user used to make the call. Default is the main line of the user.
	LineId int32 `json:"line_id,omitempty"`

	// Channel variables to set
	Variables map[string]interface{} `json:"variables,omitempty"`
}

// AssertUserCallRequestRequired checks if the required fields are not zero-ed
func AssertUserCallRequestRequired(obj UserCallRequest) error {
	elements := map[string]interface{}{
		"extension": obj.Extension,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertUserCallRequestConstraints checks if the values respects the defined constraints
func AssertUserCallRequestConstraints(obj UserCallRequest) error {
	return nil
}
