/*
 * accent-calld
 *
 * Control your calls from a REST API
 *
 * API version: 1.0.0
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package calldserver

import (
	"fmt"
)

type RelocateCompletion string

// List of RelocateCompletion
const (
	RELOCATECOMPLETION_ANSWER RelocateCompletion = "answer"
	RELOCATECOMPLETION_API    RelocateCompletion = "api"
)

// AllowedRelocateCompletionEnumValues is all the allowed values of RelocateCompletion enum
var AllowedRelocateCompletionEnumValues = []RelocateCompletion{
	"answer",
	"api",
}

// validRelocateCompletionEnumValue provides a map of RelocateCompletions for fast verification of use input
var validRelocateCompletionEnumValues = map[RelocateCompletion]struct{}{
	"answer": {},
	"api":    {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RelocateCompletion) IsValid() bool {
	_, ok := validRelocateCompletionEnumValues[v]
	return ok
}

// NewRelocateCompletionFromValue returns a pointer to a valid RelocateCompletion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRelocateCompletionFromValue(v string) (RelocateCompletion, error) {
	ev := RelocateCompletion(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for RelocateCompletion: valid values are %v", v, AllowedRelocateCompletionEnumValues)
	}
}

// AssertRelocateCompletionRequired checks if the required fields are not zero-ed
func AssertRelocateCompletionRequired(obj RelocateCompletion) error {
	return nil
}

// AssertRelocateCompletionConstraints checks if the values respects the defined constraints
func AssertRelocateCompletionConstraints(obj RelocateCompletion) error {
	return nil
}
