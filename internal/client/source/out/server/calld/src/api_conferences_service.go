/*
 * accent-calld
 *
 * Control your calls from a REST API
 *
 * API version: 1.0.0
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package calldserver

import (
	"context"
	"errors"
	"net/http"
)

// ConferencesAPIService is a service that implements the logic for the ConferencesAPIServicer
// This service should implement the business logic for every endpoint for the ConferencesAPI API.
// Include any external packages or services that will be required by this service.
type ConferencesAPIService struct {
}

// NewConferencesAPIService creates a default api service
func NewConferencesAPIService() ConferencesAPIServicer {
	return &ConferencesAPIService{}
}

// KickParticipant - Kick participant from a conference
func (s *ConferencesAPIService) KickParticipant(ctx context.Context, conferenceId string, participantId string) (ImplResponse, error) {
	// TODO - update KickParticipant with the required logic for this service method.
	// Add api_conferences_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("KickParticipant method not implemented")
}

// ListConferenceParticipants - List participants of a conference
func (s *ConferencesAPIService) ListConferenceParticipants(ctx context.Context, conferenceId string) (ImplResponse, error) {
	// TODO - update ListConferenceParticipants with the required logic for this service method.
	// Add api_conferences_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ParticipantList{}) or use other options such as http.Ok ...
	// return Response(200, ParticipantList{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListConferenceParticipants method not implemented")
}

// ListUserConferenceParticipants - List participants of a conference as a user
func (s *ConferencesAPIService) ListUserConferenceParticipants(ctx context.Context, conferenceId string) (ImplResponse, error) {
	// TODO - update ListUserConferenceParticipants with the required logic for this service method.
	// Add api_conferences_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, ParticipantList{}) or use other options such as http.Ok ...
	// return Response(200, ParticipantList{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListUserConferenceParticipants method not implemented")
}

// MuteParticipant - Mute a participant in a conference
func (s *ConferencesAPIService) MuteParticipant(ctx context.Context, conferenceId string, participantId string) (ImplResponse, error) {
	// TODO - update MuteParticipant with the required logic for this service method.
	// Add api_conferences_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("MuteParticipant method not implemented")
}

// StartConferenceRecording - Record a conference
func (s *ConferencesAPIService) StartConferenceRecording(ctx context.Context, conferenceId string) (ImplResponse, error) {
	// TODO - update StartConferenceRecording with the required logic for this service method.
	// Add api_conferences_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("StartConferenceRecording method not implemented")
}

// StopConferenceRecording - Stop recording a conference
func (s *ConferencesAPIService) StopConferenceRecording(ctx context.Context, conferenceId string) (ImplResponse, error) {
	// TODO - update StopConferenceRecording with the required logic for this service method.
	// Add api_conferences_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("StopConferenceRecording method not implemented")
}

// UnmuteParticipant - Unmute a participant in a conference
func (s *ConferencesAPIService) UnmuteParticipant(ctx context.Context, conferenceId string, participantId string) (ImplResponse, error) {
	// TODO - update UnmuteParticipant with the required logic for this service method.
	// Add api_conferences_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, Error{}) or use other options such as http.Ok ...
	// return Response(404, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UnmuteParticipant method not implemented")
}
