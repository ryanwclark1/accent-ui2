/*
 * accent-calld
 *
 * Control your calls from a REST API
 *
 * API version: 1.0.0
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	calldserver "github.com/ryanwclark/accent-voice/src"
)

func main() {
	log.Printf("Server started")

	AdhocConferencesAPIService := calldserver.NewAdhocConferencesAPIService()
	AdhocConferencesAPIController := calldserver.NewAdhocConferencesAPIController(AdhocConferencesAPIService)

	ApplicationsAPIService := calldserver.NewApplicationsAPIService()
	ApplicationsAPIController := calldserver.NewApplicationsAPIController(ApplicationsAPIService)

	CallsAPIService := calldserver.NewCallsAPIService()
	CallsAPIController := calldserver.NewCallsAPIController(CallsAPIService)

	ConferencesAPIService := calldserver.NewConferencesAPIService()
	ConferencesAPIController := calldserver.NewConferencesAPIController(ConferencesAPIService)

	ConfigAPIService := calldserver.NewConfigAPIService()
	ConfigAPIController := calldserver.NewConfigAPIController(ConfigAPIService)

	FaxesAPIService := calldserver.NewFaxesAPIService()
	FaxesAPIController := calldserver.NewFaxesAPIController(FaxesAPIService)

	LinesAPIService := calldserver.NewLinesAPIService()
	LinesAPIController := calldserver.NewLinesAPIController(LinesAPIService)

	MeetingsAPIService := calldserver.NewMeetingsAPIService()
	MeetingsAPIController := calldserver.NewMeetingsAPIController(MeetingsAPIService)

	RelocatesAPIService := calldserver.NewRelocatesAPIService()
	RelocatesAPIController := calldserver.NewRelocatesAPIController(RelocatesAPIService)

	StatusAPIService := calldserver.NewStatusAPIService()
	StatusAPIController := calldserver.NewStatusAPIController(StatusAPIService)

	SwitchboardsAPIService := calldserver.NewSwitchboardsAPIService()
	SwitchboardsAPIController := calldserver.NewSwitchboardsAPIController(SwitchboardsAPIService)

	TransfersAPIService := calldserver.NewTransfersAPIService()
	TransfersAPIController := calldserver.NewTransfersAPIController(TransfersAPIService)

	TrunksAPIService := calldserver.NewTrunksAPIService()
	TrunksAPIController := calldserver.NewTrunksAPIController(TrunksAPIService)

	UsersAPIService := calldserver.NewUsersAPIService()
	UsersAPIController := calldserver.NewUsersAPIController(UsersAPIService)

	VoicemailsAPIService := calldserver.NewVoicemailsAPIService()
	VoicemailsAPIController := calldserver.NewVoicemailsAPIController(VoicemailsAPIService)

	router := calldserver.NewRouter(AdhocConferencesAPIController, ApplicationsAPIController, CallsAPIController, ConferencesAPIController, ConfigAPIController, FaxesAPIController, LinesAPIController, MeetingsAPIController, RelocatesAPIController, StatusAPIController, SwitchboardsAPIController, TransfersAPIController, TrunksAPIController, UsersAPIController, VoicemailsAPIController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
