/*
 * accent-amid
 *
 * Send AMI actions to Asterisk, providing token based authentication.
 *
 * API version: 0.1
 * Contact: help@accentvoice.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package amidserver

import (
	"context"
	"errors"
	"net/http"
)

// CommandAPIService is a service that implements the logic for the CommandAPIServicer
// This service should implement the business logic for every endpoint for the CommandAPI API.
// Include any external packages or services that will be required by this service.
type CommandAPIService struct {
}

// NewCommandAPIService creates a default api service
func NewCommandAPIService() CommandAPIServicer {
	return &CommandAPIService{}
}

// CommandAsteriskManager - AMI command
func (s *CommandAPIService) CommandAsteriskManager(ctx context.Context, command Command) (ImplResponse, error) {
	// TODO - update CommandAsteriskManager with the required logic for this service method.
	// Add api_command_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, CommandResponse{}) or use other options such as http.Ok ...
	// return Response(200, CommandResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, Error{}) or use other options such as http.Ok ...
	// return Response(400, Error{}), nil

	// TODO: Uncomment the next line to return response Response(401, Error{}) or use other options such as http.Ok ...
	// return Response(401, Error{}), nil

	// TODO: Uncomment the next line to return response Response(503, Error{}) or use other options such as http.Ok ...
	// return Response(503, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CommandAsteriskManager method not implemented")
}
