host: api.accentvoice.io
basePath: /1.0
consumes:
- application/json
definitions:
  APIError:
    allOf:
    - $ref: '#/definitions/Error'
    - properties:
        resource:
          description: Resource name of the error
          type: string
    type: object
  ComponentWithStatus:
    properties:
      status:
        $ref: '#/definitions/StatusValue'
    type: object
  Error:
    description: Error message for the client
    properties:
      details:
        description: Additional information about the error. The keys are specific
          to each error.
        type: object
      error_id:
        description: Identifier of the type of error. It is more precise than the
          HTTP status code.
        type: string
      message:
        description: Human readable explanation of the error
        type: string
      timestamp:
        description: Time when the error occured
        format: timestamp
        type: number
    title: Error
  Line:
    properties:
      id:
        readOnly: true
        type: integer
      state:
        description: The current state of the line.
        enum:
        - available
        - holding
        - ringing
        - progressing
        - talking
        - unavailable
        readOnly: true
        type: string
  Message:
    properties:
      alias:
        description: Alias/nickname of the sender
        type: string
      content:
        description: The content of the message
        type: string
      created_at:
        description: The date of the message's creation
        readOnly: true
        type: string
      room:
        $ref: '#/definitions/RoomRelationBase'
      tenant_uuid:
        description: tenant uuid of the sender
        type: string
      user_uuid:
        description: user uuid of the sender
        type: string
      uuid:
        description: The UUID of the message
        readOnly: true
        type: string
      accent_uuid:
        description: accent uuid of the sender
        type: string
  Messages:
    properties:
      filtered:
        type: integer
      items:
        items:
          $ref: '#/definitions/Message'
        type: array
      total:
        type: integer
    title: UserItems
  Presence:
    properties:
      connected:
        description: If the user has active connections.
        readOnly: true
        type: boolean
      do_not_disturb:
        description: The "do not disturb" status of the user.
        readOnly: true
        type: boolean
      last_activity:
        description: The date time in UTC of the user's last activity. The value is
          updated when the user changes his state explicitly. The value is NULL for
          new user.
        readOnly: true
        type: string
      line_state:
        description: 'The current state of the most prioritize state line. The prioritization
          of each state is the following: ringing > progressing > holding > talking
          > available > unavailable'
        enum:
        - available
        - holding
        - ringing
        - progressing
        - talking
        - unavailable
        readOnly: true
        type: string
      lines:
        items:
          $ref: '#/definitions/Line'
        readOnly: true
        type: array
      mobile:
        description: 'If the user uses a mobile application and can be considered
          reachable.


          mobile will be true in the following situations


          * The user has a mobile refresh token

          * The user has a mobile session

          '
        readOnly: true
        type: boolean
      state:
        description: The presence state of the user.
        enum:
        - available
        - away
        - unavailable
        - invisible
        type: string
      status:
        description: An extended description of the user presence.
        type: string
      tenant_uuid:
        description: The UUID of the tenant of the user
        readOnly: true
        type: string
      uuid:
        description: The UUID of the user
        readOnly: true
        type: string
    required:
    - state
    title: Presence
  PresenceList:
    properties:
      filtered:
        description: The number of result matching the searched terms
        type: integer
      items:
        items:
          $ref: '#/definitions/Presence'
        type: array
      total:
        description: The number of results without filter
        type: integer
    title: PresenceList
  Room:
    allOf:
    - $ref: '#/definitions/RoomRelationBase'
    - properties:
        name:
          description: The name of the room
          type: string
        users:
          items:
            $ref: '#/definitions/RoomUser'
          maxItems: 100
          type: array
      required:
      - users
    title: Room
  RoomRelationBase:
    properties:
      uuid:
        description: The UUID of the room
        readOnly: true
        type: string
  RoomUser:
    properties:
      tenant_uuid:
        description: The tenant of the user_uuid. Default to the same tenant as the
          token owner
        type: string
      uuid:
        type: string
      accent_uuid:
        description: The accent of the tenant_uuid. Default to the same accent as the
          token owner
        type: string
    required:
    - uuid
  Rooms:
    properties:
      filtered:
        type: integer
      items:
        items:
          $ref: '#/definitions/Room'
        type: array
      total:
        type: integer
    title: Rooms
  StatusSummary:
    properties:
      bus_consumer:
        $ref: '#/definitions/ComponentWithStatus'
      master_tenant:
        $ref: '#/definitions/ComponentWithStatus'
      presence_initialization:
        $ref: '#/definitions/ComponentWithStatus'
      rest_api:
        $ref: '#/definitions/ComponentWithStatus'
    type: object
  StatusValue:
    enum:
    - fail
    - ok
    type: string
  UserMessagePOST:
    properties:
      alias:
        description: Alias/nickname of the sender
        type: string
      content:
        description: The content of the message
        type: string
    required:
    - content
    - alias
info:
  contact:
    email: help@accentvoice.io
    name: Accent Team
    url: https://accentvoice.io/
  description: Control your message and presence from a REST API
  title: accent-chatd
  version: 1.0.0
  x-logo:
    altText: Accent Logo
    backgroundColor: '#FAFAFA'
    url: https://accentvoice.io/images/logo-black.svg
parameters:
  direction:
    description: Sort list of items in 'asc' (ascending) or 'desc' (descending) order
    enum:
    - asc
    - desc
    in: query
    name: direction
    required: false
    type: string
  distinct:
    description: Distinct list results by field. Always picks the latest entry. Required
      if `search` is not specified.
    enum:
    - room_uuid
    in: query
    name: distinct
    required: false
    type: string
  from_date:
    description: 'The date and time from which to retrieve messages. Example: 2019-06-12T10:00:00.000+00:00'
    format: date-time
    in: query
    name: from_date
    type: string
  limit:
    description: Maximum number of items to return in the list
    in: query
    name: limit
    required: false
    type: integer
  offset:
    description: Number of items to skip over in the list. Useful for pagination.
    in: query
    name: offset
    required: false
    type: integer
  order:
    description: Name of the field to use for sorting the list of items returned.
    in: query
    name: order
    required: false
    type: string
  recurse:
    default: false
    description: Should the query include sub-tenants
    in: query
    name: recurse
    required: false
    type: boolean
  room_uuid:
    description: The UUID of the room
    in: path
    name: room_uuid
    required: true
    type: string
  search:
    description: Search term for filtering a list of items. Only items with a field
      containing the search term will be returned. Required if `distinct` is not specified.
    in: query
    name: search
    required: false
    type: string
  search_distinct:
    description: Search term for filtering a list of items. Only items with a field
      containing the search term will be returned.
    in: query
    name: search
    required: false
    type: string
  tenant_uuid:
    description: The tenant's UUID, defining the ownership of a given resource.
    in: header
    name: Accent-Tenant
    required: false
    type: string
  user_uuid:
    description: The UUID of the user
    in: path
    name: user_uuid
    required: true
    type: string
  user_uuid_query:
    description: Filter by user_uuid. Many uuid can be specified. A logical AND is
      used for filtering. Each uuid MUST be separated by a comma (,).
    in: query
    items:
      type: string
    name: user_uuid
    required: false
    type: array
paths:
  /config:
    get:
      description: '**Required ACL:** `chatd.config.read`'
      operationId: getConfig
      responses:
        '200':
          description: The configuration of the service
      summary: Show the current configuration
      tags:
      - config
  /status:
    get:
      description: '**Required ACL:** `chatd.status.read`'
      operationId: getStatus
      responses:
        '200':
          description: The internal infos of accent-chatd
          schema:
            $ref: '#/definitions/StatusSummary'
      summary: Print infos about internal status of accent-chatd
      tags:
      - status
  /users/me/rooms:
    get:
      description: '**Required ACL:** `chatd.users.me.rooms.read`'
      operationId: get_room
      parameters:
      - $ref: '#/parameters/user_uuid_query'
      responses:
        '200':
          description: Room
          schema:
            $ref: '#/definitions/Rooms'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get room
      tags:
      - rooms
    post:
      description: '**Required ACL:** `chatd.users.me.rooms.create`
        **Warning**: **>=22.16**: If a room with the same participants exists,
        it will be returned instead of creating new one. In this case, no other
        parameter will be taken into account and the return code will be 201.
        This behaviour will disappear in the future and a 409 error will be
        raised.

        '
      operationId: create_room
      parameters:
      - description: room to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Room'
      responses:
        '201':
          description: Room created
          schema:
            $ref: '#/definitions/Room'
        '400':
          $ref: '#/responses/InvalidRequest'
      summary: Create room
      tags:
      - rooms
  /users/me/rooms/messages:
    get:
      description: '**Required ACL:** `chatd.users.me.rooms.messages.read`'
      operationId: list_rooms_messages
      parameters:
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search_distinct'
      - $ref: '#/parameters/distinct'
      responses:
        '200':
          description: Messages
          schema:
            $ref: '#/definitions/Messages'
        '400':
          $ref: '#/responses/InvalidRequest'
      summary: List rooms messages
      tags:
      - rooms
      - messages
  /users/me/rooms/{room_uuid}/messages:
    get:
      description: '**Required ACL:** `chatd.users.me.rooms.{room_uuid}.messages.read`'
      operationId: list_room_message
      parameters:
      - $ref: '#/parameters/room_uuid'
      - $ref: '#/parameters/from_date'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: Messages
          schema:
            $ref: '#/definitions/Messages'
        '400':
          $ref: '#/responses/InvalidRequest'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: List room messages
      tags:
      - rooms
      - messages
    post:
      description: '**Required ACL:** `chatd.users.me.rooms.{room_uuid}.messages.create`'
      operationId: create_room_message
      parameters:
      - $ref: '#/parameters/room_uuid'
      - description: message to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserMessagePOST'
      responses:
        '201':
          description: Message created
          schema:
            $ref: '#/definitions/Message'
        '400':
          $ref: '#/responses/InvalidRequest'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Create room messages
      tags:
      - rooms
      - messages
  /users/presences:
    get:
      description: '**Required ACL:** `chatd.users.presences.read`'
      operationId: list_presences
      parameters:
      - $ref: '#/parameters/tenant_uuid'
      - $ref: '#/parameters/recurse'
      - $ref: '#/parameters/user_uuid_query'
      responses:
        '200':
          description: Presences list
          schema:
            $ref: '#/definitions/PresenceList'
      summary: List presences
      tags:
      - presences
  /users/{user_uuid}/presences:
    get:
      description: '**Required ACL:** `chatd.users.{user_uuid}.presences.read`'
      operationId: get_user_presence
      parameters:
      - $ref: '#/parameters/tenant_uuid'
      - $ref: '#/parameters/user_uuid'
      responses:
        '200':
          description: Presence
          schema:
            $ref: '#/definitions/Presence'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Get user presence
      tags:
      - presences
    put:
      description: '**Required ACL:** `chatd.users.{user_uuid}.presences.update`'
      operationId: update_user_presence
      parameters:
      - $ref: '#/parameters/tenant_uuid'
      - $ref: '#/parameters/user_uuid'
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Presence'
      responses:
        '204':
          $ref: '#/responses/ResourceUpdated'
        '400':
          $ref: '#/responses/InvalidRequest'
        '404':
          $ref: '#/responses/NotFoundError'
      summary: Update user presence
      tags:
      - presences
  /users/{user_uuid}/teams/presence:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: update_teams_presence
      parameters:
      - $ref: '#/parameters/user_uuid'
      responses:
        '200':
          description: Microsoft Teams presence information has been received
          schema:
            $ref: '#/responses/ResourceUpdated'
        '404':
          description: The resource requested was not found on the server
          schema:
            $ref: '#/responses/NotFoundError'
      summary: Receive presence information from Microsoft Teams
      tags:
      - microsoft
produces:
- application/json
responses:
  AnotherServiceUnavailable:
    description: Another service is unavailable (e.g. accent-auth, accent-confd, ...)
    schema:
      $ref: '#/definitions/Error'
  InvalidRequest:
    description: Invalid request
    schema:
      $ref: '#/definitions/APIError'
  NotFoundError:
    description: The resource requested was not found on the server
    schema:
      $ref: '#/definitions/APIError'
  ResourceUpdated:
    description: Resource was updated successfully
schemes:
- http
- https
security:
- accent_auth_token: []
securityDefinitions:
  accent_auth_token:
    in: header
    name: X-Auth-Token
    type: apiKey
swagger: '2.0'
x-accent-name: chatd
x-accent-port: 9304
