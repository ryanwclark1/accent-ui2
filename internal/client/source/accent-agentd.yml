host: api.accentvoice.io
basePath: /1.0
consumes:
- application/json
definitions:
  AgentPauseReason:
    properties:
      reason:
        description: Pause Reason
        type: string
    title: Pause reason information
  AgentStatus:
    properties:
      context:
        description: The context on which the agent is logged, or null if the agent
          is not logged
        type: string
      extension:
        description: The extension on which the agent is logged, or null if the agent
          is not logged
        type: string
      id:
        description: Agent's ID
        format: int32
        type: integer
      logged:
        description: True if the agent is logged, else false
        type: boolean
      number:
        description: Agent's number
        type: string
      origin_uuid:
        description: Accent's UUID
        format: uuid
        type: string
      paused:
        description: True if the agent is paused, else false
        type: boolean
      paused_reason:
        description: The reason of the agent pause
        type: string
      state_interface:
        description: The interface (e.g. SIP/alice) to determine if the agent is in
          use or not
        type: string
      tenant_uuid:
        description: Tenant's UUID
        format: uuid
        type: string
    title: Agent status
  ComponentWithStatus:
    properties:
      status:
        $ref: '#/definitions/StatusValue'
    type: object
  Error:
    properties:
      error:
        description: Error identifier
        type: string
    title: Error
  LoginInfo:
    properties:
      context:
        description: Context
        type: string
      extension:
        description: Extension
        type: string
    title: Login information
  Queue:
    properties:
      queue_id:
        description: Queue's ID
        type: integer
    title: Queue
  StatusSummary:
    properties:
      bus_consumer:
        $ref: '#/definitions/ComponentWithStatus'
      service_token:
        $ref: '#/definitions/ComponentWithStatus'
    type: object
  StatusValue:
    enum:
    - fail
    - ok
    type: string
  UserAgentLoginInfo:
    properties:
      line_id:
        description: ID of the line where the agent should be logged
        type: integer
    title: Login information
info:
  contact:
    email: help@accentvoice.io
    name: Accent Team
    url: https://accentvoice.io/
  description: Agent service
  license:
    name: Proprietary
    url: https://accentvoice.io/
  title: accent-agentd
  version: '1.0'
  x-logo:
    altText: Accent Logo
    backgroundColor: '#FAFAFA'
    url: https://accentvoice.io/images/logo-black.svg
parameters:
  AgentID:
    description: Agent's ID
    in: path
    name: agent_id
    required: true
    type: integer
  AgentNumber:
    description: Agent's number
    in: path
    name: agent_number
    required: true
    type: string
  recurse:
    default: false
    description: Should the query include sub-tenants
    in: query
    name: recurse
    required: false
    type: boolean
  tenantuuid:
    description: The tenant's UUID, defining the ownership of a given resource.
    in: header
    name: Accent-Tenant
    required: false
    type: string
paths:
  /agents:
    get:
      description: '**Required ACL:** `agentd.agents.read`'
      operationId: get_agents
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/recurse'
      responses:
        '200':
          description: A list of agent status
          schema:
            $ref: '#/definitions/AgentStatus'
      summary: Get the status of all agents.
      tags:
      - agents
  /agents/by-id/{agent_id}:
    get:
      description: '**Required ACL:** `agentd.agents.by-id.{agent_id}.read`'
      operationId: get_agent_by_id
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentID'
      responses:
        '200':
          description: The agent status
          schema:
            $ref: '#/definitions/AgentStatus'
        '404':
          description: Agent does not exist
          schema:
            $ref: '#/definitions/Error'
      summary: Get agent status.
      tags:
      - agent
  /agents/by-id/{agent_id}/add:
    post:
      description: '**Required ACL:** `agentd.agents.by-id.{agent_id}.add.create`'
      operationId: add_agent_by_id
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentID'
      - description: The queue to add the agent to
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Queue'
      responses:
        '204':
          description: The operation was performed succesfully
        '400':
          description: The agent and the queue are not in the same tenant
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Agent or queue does not exist
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is already a member of the queue
          schema:
            $ref: '#/definitions/Error'
      summary: Add agent to a queue.
      tags:
      - agent
  /agents/by-id/{agent_id}/login:
    post:
      description: '**Required ACL:** `agentd.agents.by-id.{agent_id}.login.create`'
      operationId: login_agent_by_id
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentID'
      - description: The extension and context on which to log the agent
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/LoginInfo'
      responses:
        '204':
          description: The operation was performed succesfully
        '400':
          description: The context and extension are not in the same tenant as the
            agent
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Agent or extension or context does not exist
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is already logged or another agent is already logged
            on this extension and context
          schema:
            $ref: '#/definitions/Error'
      summary: Log an agent.
      tags:
      - agent
  /agents/by-id/{agent_id}/logoff:
    post:
      description: '**Required ACL:** `agentd.agents.by-id.{agent_id}.logoff.create`'
      operationId: logoff_agent_by_id
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentID'
      responses:
        '204':
          description: The operation was performed succesfully
        '409':
          description: Agent does not exist or is not logged
          schema:
            $ref: '#/definitions/Error'
      summary: Logoff an agent.
      tags:
      - agent
  /agents/by-id/{agent_id}/remove:
    post:
      description: '**Required ACL:** `agentd.agents.by-id.{agent_id}.remove.create`'
      operationId: remove_agent_by_id
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentID'
      - description: The queue to remove the agent from
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Queue'
      responses:
        '204':
          description: The operation was performed succesfully
        '404':
          description: Agent or queue does not exist
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is not a member of the queue
          schema:
            $ref: '#/definitions/Error'
      summary: Remove agent from a queue.
      tags:
      - agent
  /agents/by-number/{agent_number}:
    get:
      description: '**Required ACL:** `agentd.agents.by-number.{agent_number}.read`'
      operationId: get_agent_by_number
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentNumber'
      responses:
        '200':
          description: The agent status
          schema:
            $ref: '#/definitions/AgentStatus'
        '404':
          description: Agent does not exist
          schema:
            $ref: '#/definitions/Error'
      summary: Get agent status.
      tags:
      - agent
  /agents/by-number/{agent_number}/login:
    post:
      description: '**Required ACL:** `agentd.agents.by-number.{agent_number}.login.create`'
      operationId: login_agent_by_number
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentNumber'
      - description: The extension and context on which to log the agent
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/LoginInfo'
      responses:
        '204':
          description: The operation was performed succesfully
        '400':
          description: The context and extension are not in the same tenant as the
            agent
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Agent or extension or context does not exist
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is already logged or another agent is already logged
            on this extension and context
          schema:
            $ref: '#/definitions/Error'
      summary: Log an agent.
      tags:
      - agent
  /agents/by-number/{agent_number}/logoff:
    post:
      description: '**Required ACL:** `agentd.agents.by-number.{agent_number}.logoff.create`'
      operationId: logoff_agent_by_number
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentNumber'
      responses:
        '204':
          description: The operation was performed succesfully
        '409':
          description: Agent does not exist or is not logged
          schema:
            $ref: '#/definitions/Error'
      summary: Logoff an agent.
      tags:
      - agent
  /agents/by-number/{agent_number}/pause:
    post:
      description: '**Required ACL:** `agentd.agents.by-number.{agent_number}.pause.create`'
      operationId: pause_agent_by_number
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentNumber'
      - description: The reason for pausing the agent
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/AgentPauseReason'
      responses:
        '204':
          description: The operation was performed succesfully
        '404':
          description: Agent does not exist
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is not logged
          schema:
            $ref: '#/definitions/Error'
      summary: Pause an agent.
      tags:
      - agent
  /agents/by-number/{agent_number}/unpause:
    post:
      description: '**Required ACL:** `agentd.agents.by-number.{agent_number}.unpause.create`'
      operationId: unpause_agent_by_number
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - $ref: '#/parameters/AgentNumber'
      responses:
        '204':
          description: The operation was performed succesfully
        '404':
          description: Agent does not exist
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is not logged
          schema:
            $ref: '#/definitions/Error'
      summary: Unpause an agent.
      tags:
      - agent
  /agents/logoff:
    post:
      description: '**Required ACL:** `agentd.agents.logoff.create`'
      operationId: logoff_agents
      parameters:
      - $ref: '#/parameters/tenantuuid'
      responses:
        '204':
          description: The operation was performed succesfully
      summary: Logoff all agents.
      tags:
      - agents
  /agents/relog:
    post:
      description: '**Required ACL:** `agentd.agents.relog.create`


        Relog all agents which are currently logged.'
      operationId: relog_agents
      parameters:
      - $ref: '#/parameters/tenantuuid'
      responses:
        '204':
          description: The operation was performed succesfully
      summary: Relog all agents.
      tags:
      - agents
  /status:
    get:
      description: '**Required ACL:** `agentd.status.read`'
      operationId: get_status
      responses:
        '200':
          description: The internal status of accent-agentd
          schema:
            $ref: '#/definitions/StatusSummary'
      summary: Get the status of accent-agentd.
      tags:
      - status
  /users/me/agents:
    get:
      description: '**Required ACL:** `agentd.users.me.agents.read`'
      operationId: get_user_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      responses:
        '200':
          description: The agent status
          schema:
            $ref: '#/definitions/AgentStatus'
        '404':
          description: Agent does not exist
          schema:
            $ref: '#/definitions/Error'
      summary: Get agent status of the user holding the authentication token.
      tags:
      - agent
      - user
  /users/me/agents/login:
    post:
      description: '**Required ACL:** `agentd.users.me.agents.login.create`'
      operationId: login_user_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: The line on which to log the agent
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserAgentLoginInfo'
      responses:
        '204':
          description: The operation was performed successfully
        '400':
          description: The user does not own the line; or the token has no user; or
            wrong tenant; or the user has no agent
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is already logged or another agent is already logged
            on this line
          schema:
            $ref: '#/definitions/Error'
      summary: Log the agent of the user holding the authentication token
      tags:
      - agent
      - user
  /users/me/agents/logoff:
    post:
      description: '**Required ACL:** `agentd.users.me.agents.logoff.create`'
      operationId: logoff_user_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      responses:
        '204':
          description: The operation was performed succesfully
        '400':
          description: The token has no user; or wrong tenant; or the user has no
            agent
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is already logged or another agent is already logged
            on this line
          schema:
            $ref: '#/definitions/Error'
      summary: Logoff the agent of the user holding the authentication token
      tags:
      - agent
      - user
  /users/me/agents/pause:
    post:
      description: '**Required ACL:** `agentd.users.me.agents.pause.create`'
      operationId: pause_user_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      - description: The reason for pausing the agent
        in: body
        name: body
        required: false
        schema:
          $ref: '#/definitions/AgentPauseReason'
      responses:
        '204':
          description: The operation was performed succesfully
        '400':
          description: The token has no user; or wrong tenant; or the user has no
            agent
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is already logged or another agent is already logged
            on this line
          schema:
            $ref: '#/definitions/Error'
      summary: Pause the agent of the user holding the authentication token
      tags:
      - agent
      - user
  /users/me/agents/unpause:
    post:
      description: '**Required ACL:** `agentd.users.me.agents.unpause.create`'
      operationId: unpause_user_agent
      parameters:
      - $ref: '#/parameters/tenantuuid'
      responses:
        '204':
          description: The operation was performed succesfully
        '400':
          description: The token has no user; or wrong tenant; or the user has no
            agent
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Agent is already logged or another agent is already logged
            on this line
          schema:
            $ref: '#/definitions/Error'
      summary: Unpause the agent of the user holding the authentication token
      tags:
      - agent
      - user
produces:
- application/json
schemes:
- http
- https
security:
- accent_auth_token: []
securityDefinitions:
  accent_auth_token:
    in: header
    name: X-Auth-Token
    type: apiKey
swagger: '2.0'
x-accent-name: agentd
x-accent-port: 9493
