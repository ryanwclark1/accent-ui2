/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VoicemailZoneMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoicemailZoneMessage{}

// VoicemailZoneMessage struct for VoicemailZoneMessage
type VoicemailZoneMessage struct {
	// Message that each user hears.
	Message *string `json:"message,omitempty"`
	// label on which each voicemail is mapped
	Name string `json:"name"`
	// Timezone as define in '/usr/share/zoneinfo/'
	Timezone string `json:"timezone"`
}

type _VoicemailZoneMessage VoicemailZoneMessage

// NewVoicemailZoneMessage instantiates a new VoicemailZoneMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoicemailZoneMessage(name string, timezone string) *VoicemailZoneMessage {
	this := VoicemailZoneMessage{}
	this.Name = name
	this.Timezone = timezone
	return &this
}

// NewVoicemailZoneMessageWithDefaults instantiates a new VoicemailZoneMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoicemailZoneMessageWithDefaults() *VoicemailZoneMessage {
	this := VoicemailZoneMessage{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *VoicemailZoneMessage) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailZoneMessage) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *VoicemailZoneMessage) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *VoicemailZoneMessage) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value
func (o *VoicemailZoneMessage) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VoicemailZoneMessage) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VoicemailZoneMessage) SetName(v string) {
	o.Name = v
}

// GetTimezone returns the Timezone field value
func (o *VoicemailZoneMessage) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *VoicemailZoneMessage) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *VoicemailZoneMessage) SetTimezone(v string) {
	o.Timezone = v
}

func (o VoicemailZoneMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoicemailZoneMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	toSerialize["name"] = o.Name
	toSerialize["timezone"] = o.Timezone
	return toSerialize, nil
}

func (o *VoicemailZoneMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"timezone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVoicemailZoneMessage := _VoicemailZoneMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVoicemailZoneMessage)

	if err != nil {
		return err
	}

	*o = VoicemailZoneMessage(varVoicemailZoneMessage)

	return err
}

type NullableVoicemailZoneMessage struct {
	value *VoicemailZoneMessage
	isSet bool
}

func (v NullableVoicemailZoneMessage) Get() *VoicemailZoneMessage {
	return v.value
}

func (v *NullableVoicemailZoneMessage) Set(val *VoicemailZoneMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableVoicemailZoneMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableVoicemailZoneMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoicemailZoneMessage(val *VoicemailZoneMessage) *NullableVoicemailZoneMessage {
	return &NullableVoicemailZoneMessage{value: val, isSet: true}
}

func (v NullableVoicemailZoneMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoicemailZoneMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
