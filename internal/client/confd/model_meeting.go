/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"encoding/json"
	"time"
)

// checks if the Meeting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Meeting{}

// Meeting struct for Meeting
type Meeting struct {
	CreationTime *time.Time `json:"creation_time,omitempty"`
	// the external extension to dial to reach this meeting
	Exten *string `json:"exten,omitempty"`
	// Format: base64(username:password), same as HTTP Basic Auth.
	GuestSipAuthorization *string `json:"guest_sip_authorization,omitempty"`
	// URI to reach this stack (configured by the Ingress HTTP resource)
	IngressHttpUri *string  `json:"ingress_http_uri,omitempty"`
	Name           *string  `json:"name,omitempty"`
	OwnerUuids     []string `json:"owner_uuids,omitempty"`
	// Persistent meetings will not get deleted automatically
	Persistent *bool `json:"persistent,omitempty"`
	// when `true`, the `guest_sip_authorization` is always `null`. Instead, clients must request an authorization to access the meeting.
	RequireAuthorization *bool   `json:"require_authorization,omitempty"`
	Uuid                 *string `json:"uuid,omitempty"`
}

// NewMeeting instantiates a new Meeting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeeting() *Meeting {
	this := Meeting{}
	return &this
}

// NewMeetingWithDefaults instantiates a new Meeting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeetingWithDefaults() *Meeting {
	this := Meeting{}
	return &this
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *Meeting) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *Meeting) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *Meeting) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetExten returns the Exten field value if set, zero value otherwise.
func (o *Meeting) GetExten() string {
	if o == nil || IsNil(o.Exten) {
		var ret string
		return ret
	}
	return *o.Exten
}

// GetExtenOk returns a tuple with the Exten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetExtenOk() (*string, bool) {
	if o == nil || IsNil(o.Exten) {
		return nil, false
	}
	return o.Exten, true
}

// HasExten returns a boolean if a field has been set.
func (o *Meeting) HasExten() bool {
	if o != nil && !IsNil(o.Exten) {
		return true
	}

	return false
}

// SetExten gets a reference to the given string and assigns it to the Exten field.
func (o *Meeting) SetExten(v string) {
	o.Exten = &v
}

// GetGuestSipAuthorization returns the GuestSipAuthorization field value if set, zero value otherwise.
func (o *Meeting) GetGuestSipAuthorization() string {
	if o == nil || IsNil(o.GuestSipAuthorization) {
		var ret string
		return ret
	}
	return *o.GuestSipAuthorization
}

// GetGuestSipAuthorizationOk returns a tuple with the GuestSipAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetGuestSipAuthorizationOk() (*string, bool) {
	if o == nil || IsNil(o.GuestSipAuthorization) {
		return nil, false
	}
	return o.GuestSipAuthorization, true
}

// HasGuestSipAuthorization returns a boolean if a field has been set.
func (o *Meeting) HasGuestSipAuthorization() bool {
	if o != nil && !IsNil(o.GuestSipAuthorization) {
		return true
	}

	return false
}

// SetGuestSipAuthorization gets a reference to the given string and assigns it to the GuestSipAuthorization field.
func (o *Meeting) SetGuestSipAuthorization(v string) {
	o.GuestSipAuthorization = &v
}

// GetIngressHttpUri returns the IngressHttpUri field value if set, zero value otherwise.
func (o *Meeting) GetIngressHttpUri() string {
	if o == nil || IsNil(o.IngressHttpUri) {
		var ret string
		return ret
	}
	return *o.IngressHttpUri
}

// GetIngressHttpUriOk returns a tuple with the IngressHttpUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetIngressHttpUriOk() (*string, bool) {
	if o == nil || IsNil(o.IngressHttpUri) {
		return nil, false
	}
	return o.IngressHttpUri, true
}

// HasIngressHttpUri returns a boolean if a field has been set.
func (o *Meeting) HasIngressHttpUri() bool {
	if o != nil && !IsNil(o.IngressHttpUri) {
		return true
	}

	return false
}

// SetIngressHttpUri gets a reference to the given string and assigns it to the IngressHttpUri field.
func (o *Meeting) SetIngressHttpUri(v string) {
	o.IngressHttpUri = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Meeting) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Meeting) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Meeting) SetName(v string) {
	o.Name = &v
}

// GetOwnerUuids returns the OwnerUuids field value if set, zero value otherwise.
func (o *Meeting) GetOwnerUuids() []string {
	if o == nil || IsNil(o.OwnerUuids) {
		var ret []string
		return ret
	}
	return o.OwnerUuids
}

// GetOwnerUuidsOk returns a tuple with the OwnerUuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetOwnerUuidsOk() ([]string, bool) {
	if o == nil || IsNil(o.OwnerUuids) {
		return nil, false
	}
	return o.OwnerUuids, true
}

// HasOwnerUuids returns a boolean if a field has been set.
func (o *Meeting) HasOwnerUuids() bool {
	if o != nil && !IsNil(o.OwnerUuids) {
		return true
	}

	return false
}

// SetOwnerUuids gets a reference to the given []string and assigns it to the OwnerUuids field.
func (o *Meeting) SetOwnerUuids(v []string) {
	o.OwnerUuids = v
}

// GetPersistent returns the Persistent field value if set, zero value otherwise.
func (o *Meeting) GetPersistent() bool {
	if o == nil || IsNil(o.Persistent) {
		var ret bool
		return ret
	}
	return *o.Persistent
}

// GetPersistentOk returns a tuple with the Persistent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetPersistentOk() (*bool, bool) {
	if o == nil || IsNil(o.Persistent) {
		return nil, false
	}
	return o.Persistent, true
}

// HasPersistent returns a boolean if a field has been set.
func (o *Meeting) HasPersistent() bool {
	if o != nil && !IsNil(o.Persistent) {
		return true
	}

	return false
}

// SetPersistent gets a reference to the given bool and assigns it to the Persistent field.
func (o *Meeting) SetPersistent(v bool) {
	o.Persistent = &v
}

// GetRequireAuthorization returns the RequireAuthorization field value if set, zero value otherwise.
func (o *Meeting) GetRequireAuthorization() bool {
	if o == nil || IsNil(o.RequireAuthorization) {
		var ret bool
		return ret
	}
	return *o.RequireAuthorization
}

// GetRequireAuthorizationOk returns a tuple with the RequireAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetRequireAuthorizationOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireAuthorization) {
		return nil, false
	}
	return o.RequireAuthorization, true
}

// HasRequireAuthorization returns a boolean if a field has been set.
func (o *Meeting) HasRequireAuthorization() bool {
	if o != nil && !IsNil(o.RequireAuthorization) {
		return true
	}

	return false
}

// SetRequireAuthorization gets a reference to the given bool and assigns it to the RequireAuthorization field.
func (o *Meeting) SetRequireAuthorization(v bool) {
	o.RequireAuthorization = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Meeting) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Meeting) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Meeting) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Meeting) SetUuid(v string) {
	o.Uuid = &v
}

func (o Meeting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Meeting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	if !IsNil(o.Exten) {
		toSerialize["exten"] = o.Exten
	}
	if !IsNil(o.GuestSipAuthorization) {
		toSerialize["guest_sip_authorization"] = o.GuestSipAuthorization
	}
	if !IsNil(o.IngressHttpUri) {
		toSerialize["ingress_http_uri"] = o.IngressHttpUri
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerUuids) {
		toSerialize["owner_uuids"] = o.OwnerUuids
	}
	if !IsNil(o.Persistent) {
		toSerialize["persistent"] = o.Persistent
	}
	if !IsNil(o.RequireAuthorization) {
		toSerialize["require_authorization"] = o.RequireAuthorization
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableMeeting struct {
	value *Meeting
	isSet bool
}

func (v NullableMeeting) Get() *Meeting {
	return v.value
}

func (v *NullableMeeting) Set(val *Meeting) {
	v.value = val
	v.isSet = true
}

func (v NullableMeeting) IsSet() bool {
	return v.isSet
}

func (v *NullableMeeting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeeting(val *Meeting) *NullableMeeting {
	return &NullableMeeting{value: val, isSet: true}
}

func (v NullableMeeting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeeting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
