/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"encoding/json"
)

// checks if the OutcallRelationTrunk type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutcallRelationTrunk{}

// OutcallRelationTrunk struct for OutcallRelationTrunk
type OutcallRelationTrunk struct {
	// The id of the trunk
	Id *int32 `json:"id,omitempty"`
	// The UUID of the tenant
	TenantUuid     *string                     `json:"tenant_uuid,omitempty"`
	EndpointCustom *EndpointCustomRelationBase `json:"endpoint_custom,omitempty"`
	EndpointIax    *EndpointIAXRelationBase    `json:"endpoint_iax,omitempty"`
	EndpointSip    *EndpointSipRelationBase    `json:"endpoint_sip,omitempty"`
}

// NewOutcallRelationTrunk instantiates a new OutcallRelationTrunk object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutcallRelationTrunk() *OutcallRelationTrunk {
	this := OutcallRelationTrunk{}
	return &this
}

// NewOutcallRelationTrunkWithDefaults instantiates a new OutcallRelationTrunk object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutcallRelationTrunkWithDefaults() *OutcallRelationTrunk {
	this := OutcallRelationTrunk{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OutcallRelationTrunk) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutcallRelationTrunk) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OutcallRelationTrunk) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OutcallRelationTrunk) SetId(v int32) {
	o.Id = &v
}

// GetTenantUuid returns the TenantUuid field value if set, zero value otherwise.
func (o *OutcallRelationTrunk) GetTenantUuid() string {
	if o == nil || IsNil(o.TenantUuid) {
		var ret string
		return ret
	}
	return *o.TenantUuid
}

// GetTenantUuidOk returns a tuple with the TenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutcallRelationTrunk) GetTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TenantUuid) {
		return nil, false
	}
	return o.TenantUuid, true
}

// HasTenantUuid returns a boolean if a field has been set.
func (o *OutcallRelationTrunk) HasTenantUuid() bool {
	if o != nil && !IsNil(o.TenantUuid) {
		return true
	}

	return false
}

// SetTenantUuid gets a reference to the given string and assigns it to the TenantUuid field.
func (o *OutcallRelationTrunk) SetTenantUuid(v string) {
	o.TenantUuid = &v
}

// GetEndpointCustom returns the EndpointCustom field value if set, zero value otherwise.
func (o *OutcallRelationTrunk) GetEndpointCustom() EndpointCustomRelationBase {
	if o == nil || IsNil(o.EndpointCustom) {
		var ret EndpointCustomRelationBase
		return ret
	}
	return *o.EndpointCustom
}

// GetEndpointCustomOk returns a tuple with the EndpointCustom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutcallRelationTrunk) GetEndpointCustomOk() (*EndpointCustomRelationBase, bool) {
	if o == nil || IsNil(o.EndpointCustom) {
		return nil, false
	}
	return o.EndpointCustom, true
}

// HasEndpointCustom returns a boolean if a field has been set.
func (o *OutcallRelationTrunk) HasEndpointCustom() bool {
	if o != nil && !IsNil(o.EndpointCustom) {
		return true
	}

	return false
}

// SetEndpointCustom gets a reference to the given EndpointCustomRelationBase and assigns it to the EndpointCustom field.
func (o *OutcallRelationTrunk) SetEndpointCustom(v EndpointCustomRelationBase) {
	o.EndpointCustom = &v
}

// GetEndpointIax returns the EndpointIax field value if set, zero value otherwise.
func (o *OutcallRelationTrunk) GetEndpointIax() EndpointIAXRelationBase {
	if o == nil || IsNil(o.EndpointIax) {
		var ret EndpointIAXRelationBase
		return ret
	}
	return *o.EndpointIax
}

// GetEndpointIaxOk returns a tuple with the EndpointIax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutcallRelationTrunk) GetEndpointIaxOk() (*EndpointIAXRelationBase, bool) {
	if o == nil || IsNil(o.EndpointIax) {
		return nil, false
	}
	return o.EndpointIax, true
}

// HasEndpointIax returns a boolean if a field has been set.
func (o *OutcallRelationTrunk) HasEndpointIax() bool {
	if o != nil && !IsNil(o.EndpointIax) {
		return true
	}

	return false
}

// SetEndpointIax gets a reference to the given EndpointIAXRelationBase and assigns it to the EndpointIax field.
func (o *OutcallRelationTrunk) SetEndpointIax(v EndpointIAXRelationBase) {
	o.EndpointIax = &v
}

// GetEndpointSip returns the EndpointSip field value if set, zero value otherwise.
func (o *OutcallRelationTrunk) GetEndpointSip() EndpointSipRelationBase {
	if o == nil || IsNil(o.EndpointSip) {
		var ret EndpointSipRelationBase
		return ret
	}
	return *o.EndpointSip
}

// GetEndpointSipOk returns a tuple with the EndpointSip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutcallRelationTrunk) GetEndpointSipOk() (*EndpointSipRelationBase, bool) {
	if o == nil || IsNil(o.EndpointSip) {
		return nil, false
	}
	return o.EndpointSip, true
}

// HasEndpointSip returns a boolean if a field has been set.
func (o *OutcallRelationTrunk) HasEndpointSip() bool {
	if o != nil && !IsNil(o.EndpointSip) {
		return true
	}

	return false
}

// SetEndpointSip gets a reference to the given EndpointSipRelationBase and assigns it to the EndpointSip field.
func (o *OutcallRelationTrunk) SetEndpointSip(v EndpointSipRelationBase) {
	o.EndpointSip = &v
}

func (o OutcallRelationTrunk) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutcallRelationTrunk) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TenantUuid) {
		toSerialize["tenant_uuid"] = o.TenantUuid
	}
	if !IsNil(o.EndpointCustom) {
		toSerialize["endpoint_custom"] = o.EndpointCustom
	}
	if !IsNil(o.EndpointIax) {
		toSerialize["endpoint_iax"] = o.EndpointIax
	}
	if !IsNil(o.EndpointSip) {
		toSerialize["endpoint_sip"] = o.EndpointSip
	}
	return toSerialize, nil
}

type NullableOutcallRelationTrunk struct {
	value *OutcallRelationTrunk
	isSet bool
}

func (v NullableOutcallRelationTrunk) Get() *OutcallRelationTrunk {
	return v.value
}

func (v *NullableOutcallRelationTrunk) Set(val *OutcallRelationTrunk) {
	v.value = val
	v.isSet = true
}

func (v NullableOutcallRelationTrunk) IsSet() bool {
	return v.isSet
}

func (v *NullableOutcallRelationTrunk) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutcallRelationTrunk(val *OutcallRelationTrunk) *NullableOutcallRelationTrunk {
	return &NullableOutcallRelationTrunk{value: val, isSet: true}
}

func (v NullableOutcallRelationTrunk) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutcallRelationTrunk) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
