/*
accent-confd

Confd exposes an API for managing core resources on a Accent server such as users, extensions, devices, voicemails, queues, etc. Resources can be associated together to provide additional functionality. For example: By associating a voicemail with a user, calls will automatically fallback on to the voicemail when the user cannot answer.  Implementation notes ====================  Errors ------  Responses containing errors will have a status code in the 400 or 500 class. A list of error messages will be returned in the body of the response as a JSON-encoded array:  ~~~ [     \"Input error - User not found\",     \"Resource error - User not associated to a line\" ] ~~~   Updating resources via PUT --------------------------  When updating a resource, all fields become optional. In other words, only values that have been changed need to be sent to the server. Please note that this behavior may change in future versions of the API.

API version: 1.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confd

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DestinationApplicationCustom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DestinationApplicationCustom{}

// DestinationApplicationCustom struct for DestinationApplicationCustom
type DestinationApplicationCustom struct {
	// MUST be 'application'
	Type string `json:"type"`
	// MUST be 'custom'
	Application *string `json:"application,omitempty"`
	// The UUID of the application.
	ApplicationUuid *string `json:"application_uuid,omitempty"`
}

type _DestinationApplicationCustom DestinationApplicationCustom

// NewDestinationApplicationCustom instantiates a new DestinationApplicationCustom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationApplicationCustom(type_ string) *DestinationApplicationCustom {
	this := DestinationApplicationCustom{}
	this.Type = type_
	return &this
}

// NewDestinationApplicationCustomWithDefaults instantiates a new DestinationApplicationCustom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationApplicationCustomWithDefaults() *DestinationApplicationCustom {
	this := DestinationApplicationCustom{}
	return &this
}

// GetType returns the Type field value
func (o *DestinationApplicationCustom) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DestinationApplicationCustom) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DestinationApplicationCustom) SetType(v string) {
	o.Type = v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *DestinationApplicationCustom) GetApplication() string {
	if o == nil || IsNil(o.Application) {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationApplicationCustom) GetApplicationOk() (*string, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *DestinationApplicationCustom) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *DestinationApplicationCustom) SetApplication(v string) {
	o.Application = &v
}

// GetApplicationUuid returns the ApplicationUuid field value if set, zero value otherwise.
func (o *DestinationApplicationCustom) GetApplicationUuid() string {
	if o == nil || IsNil(o.ApplicationUuid) {
		var ret string
		return ret
	}
	return *o.ApplicationUuid
}

// GetApplicationUuidOk returns a tuple with the ApplicationUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationApplicationCustom) GetApplicationUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationUuid) {
		return nil, false
	}
	return o.ApplicationUuid, true
}

// HasApplicationUuid returns a boolean if a field has been set.
func (o *DestinationApplicationCustom) HasApplicationUuid() bool {
	if o != nil && !IsNil(o.ApplicationUuid) {
		return true
	}

	return false
}

// SetApplicationUuid gets a reference to the given string and assigns it to the ApplicationUuid field.
func (o *DestinationApplicationCustom) SetApplicationUuid(v string) {
	o.ApplicationUuid = &v
}

func (o DestinationApplicationCustom) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DestinationApplicationCustom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.ApplicationUuid) {
		toSerialize["application_uuid"] = o.ApplicationUuid
	}
	return toSerialize, nil
}

func (o *DestinationApplicationCustom) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDestinationApplicationCustom := _DestinationApplicationCustom{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDestinationApplicationCustom)

	if err != nil {
		return err
	}

	*o = DestinationApplicationCustom(varDestinationApplicationCustom)

	return err
}

type NullableDestinationApplicationCustom struct {
	value *DestinationApplicationCustom
	isSet bool
}

func (v NullableDestinationApplicationCustom) Get() *DestinationApplicationCustom {
	return v.value
}

func (v *NullableDestinationApplicationCustom) Set(val *DestinationApplicationCustom) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationApplicationCustom) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationApplicationCustom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationApplicationCustom(val *DestinationApplicationCustom) *NullableDestinationApplicationCustom {
	return &NullableDestinationApplicationCustom{value: val, isSet: true}
}

func (v NullableDestinationApplicationCustom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationApplicationCustom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
