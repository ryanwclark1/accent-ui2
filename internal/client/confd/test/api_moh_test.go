/*
accent-confd

Testing MohAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package confd

import (
	"context"
	openapiclient "github.com/ryanwclark1/accent-ui2/internal/client/confd"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_confd_MohAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MohAPIService CreateMoh", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.MohAPI.CreateMoh(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MohAPIService DeleteMoh", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var mohUuid string

		httpRes, err := apiClient.MohAPI.DeleteMoh(context.Background(), mohUuid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MohAPIService DeleteMohFiles", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var mohUuid string
		var mohFilename string

		httpRes, err := apiClient.MohAPI.DeleteMohFiles(context.Background(), mohUuid, mohFilename).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MohAPIService GetMoh", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var mohUuid string

		resp, httpRes, err := apiClient.MohAPI.GetMoh(context.Background(), mohUuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MohAPIService GetMohFiles", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var mohUuid string
		var mohFilename string

		httpRes, err := apiClient.MohAPI.GetMohFiles(context.Background(), mohUuid, mohFilename).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MohAPIService ListMoh", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.MohAPI.ListMoh(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MohAPIService UpdateMoh", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var mohUuid string

		httpRes, err := apiClient.MohAPI.UpdateMoh(context.Background(), mohUuid).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MohAPIService UpdateMohFiles", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var mohUuid string
		var mohFilename string

		httpRes, err := apiClient.MohAPI.UpdateMohFiles(context.Background(), mohUuid, mohFilename).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
